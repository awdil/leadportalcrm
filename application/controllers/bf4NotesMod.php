<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Mod extends MY_Controller {
    
    public function __construct() {
        parent::__construct();
    }
    
    public function login() {
        $this->load->view('Mod/login');
    }
    
    public function index() {
        $this->Dashboard();
    }
    public function adminLoginss(){
        echo "kindly use the link below<br><a href='http://leadsportal.co.uk/Mod'>Open this!</a>";
         //$this->Shifted();
     }
    public function adminLogin() {
        $this->load->library('user_agent');
        $ip_address         = $this->input->ip_address();
        $username = $this->security->xss_clean($this->input->post('userName'));
        $password = $this->security->xss_clean($this->input->post('password'));
        if ($this->form_validation->run('adminLogin') == FALSE) {
            $this->login();
        } else {
            $this->load->model('Mods');
            $data = $this->Mods->login($username);
            if (isset($data[0]->passwordHash)) {
                if (password_verify($password, $data[0]->passwordHash)) {
                    $sql = "SELECT
                        permissions.controller_name,
                        permissions.action_name,
                        permissions.is_crud,
                        permissions.sort,
                        user_role.permission_create,
                        user_role.permission_update,
                        user_role.permission_view,
                        user_role.permission_delete,
                        user_role.permission_clone,
                        user_role.permission_changestatus,
                        user_role.permission_uploaddocs
                    FROM
                        users
                    INNER JOIN user_role ON users.id = user_role.user_id AND users.userType = user_role.role_id
                    INNER JOIN roles ON user_role.role_id = roles.role_id AND users.userType = roles.role_id
                    INNER JOIN permissions ON permissions.permission_id = user_role.role_permission_id
--                    INNER JOIN companies on users.company_id = companies.id
                    WHERE
                        users.is_active = 1 
                    AND 
                        roles.is_active = 1 
                    AND 
                        permissions.is_active = 1 
--                    AND 
--                        companies.status = 1 
                    AND 
                        users.id = " . $data[0]->id ." 
                    order by 
                        permissions.sort 
                    ASC";                    
                $menus = $this->db->query($sql)->result_array();            
                $data[0]->campaign_id = json_decode($data[0]->campaign_id);
                $data[0]->campaign_id = implode(",", $data[0]->campaign_id);
                $sql_camp       = "select campaign_name from campaign where campaign_id in (" . $data[0]->campaign_id . ")";
                $get_camp_name  = $this->db->query($sql_camp)->result();
                    
                $camp_data = array();
                foreach ($get_camp_name as $camp_name){
                    $camp_data[] = $camp_name->campaign_name;
                    $data[0]->campaign_name = implode(", ", $camp_data);
                }
                    $ipflg = 1;
                    if(($data[0]->ip_address_is_active == 1) && ($data[0]->ip_address1==$ip_address || $data[0]->ip_address2==$ip_address || $data[0]->ip_address3==$ip_address )){
                    $ipflg = 1;
                    $sess_data = array(
                        'user_name' => $data[0]->userName,
                        'user_id' => $data[0]->id,
                        'company_id' => $data[0]->company_id,
                        'company_name' => ($data[0]->company_id) ? $data[0]->company_name : "All",
                        'campaign_id' => $data[0]->campaign_id,
                        'campaign_name' => ($data[0]->campaign_id) ? $data[0]->campaign_name : "All",
                        'userType' => $data[0]->userType,
                        'role_name' => $data[0]->role_name,
                    );    
                    }elseif($data[0]->ip_address_is_active == 0){
                        $ipflg = 1;
                        $sess_data = array(
                        'user_name' => $data[0]->userName,
                        'user_id' => $data[0]->id,
                        'company_id' => $data[0]->company_id,
                        'company_name' => ($data[0]->company_id) ? $data[0]->company_name : "All",
                        'campaign_id' => $data[0]->campaign_id,
                        'campaign_name' => ($data[0]->campaign_id) ? $data[0]->campaign_name : "All",
                        'userType' => $data[0]->userType,
                        'role_name' => $data[0]->role_name,
                        );  
                    }else{
                        $ipflg = 0;
                        $sess_data = array(
                        'user_name' => $data[0]->userName,
                        'user_id' => $data[0]->id,
                        'company_id' => $data[0]->company_id,
                        'company_name' => ($data[0]->company_id) ? $data[0]->company_name : "All",
                        'campaign_id' => $data[0]->campaign_id,
                        'campaign_name' => ($data[0]->campaign_id) ? $data[0]->campaign_name : "All",
                        'userType' => $data[0]->userType,
                        'role_name' => $data[0]->role_name,
                        );  
                    }
                    
                    foreach ($menus as $menu){
                        $sess_data[$menu['action_name']] = $menu;
                    }
                    if($ipflg==1){
                        $this->session->set_userdata('adminData', $sess_data);
                        $this->load->library('user_agent');

                                    if ($this->agent->is_browser())
                                    {
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();
                                        $device_type        = "Desktop";
                                    }

                                    elseif ($this->agent->isRobot())
                                    {
                                            $device_type = $this->agent->robot();
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }

                                    elseif ($this->agent->isMobile())
                                    {
                                            $device_type = $this->agent->getMobile();
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }
                                    else
                                    {
                                        $device_type = 'Unidentified User Agent';
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }

                                    $activity_data = array(

                                        "user_id" => $_SESSION['adminData']['user_id'],
                                        "company_id" => $_SESSION['adminData']['company_id'], 
                                        "database_table_name" => 'login successful ',                        
                                        "module_name" => 'User Login',
                                        "module_id" => $_SESSION['adminData']['user_id'],
                                        "note" => 'User loged in from this ip address = '.$ip_address.' on '.date('Y-m-d H:i:s'),
                                        'ip_address' => $ip_address,
                                        'platform' => $platform,
                                        'browser' => $agent,
                                        'browser_version' => $browser_version,
                                        'device_type' => $device_type,
                                        "created_at" => date('Y-m-d H:i:s'),

                                    );

                                    $this->load->model('Mods');
                                   $insert = $this->Mods->single_insert('user_activities', $activity_data);
                                    if($insert){
                                        redirect('Mod/Dashboard');
                                    }
                    }
                    else{
                        if ($this->session->userdata('adminData')) {
                            $this->load->library('user_agent');
                                if ($this->agent->is_browser())
                                    {
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();
                                        $device_type        = "Desktop";
                                    }

                                    elseif ($this->agent->isRobot())
                                    {
                                            $device_type = $this->agent->robot();
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }

                                    elseif ($this->agent->isMobile())
                                    {
                                            $device_type = $this->agent->getMobile();
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }
                                    else
                                    {
                                        $device_type = 'Unidentified User Agent';
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }

                                    $activity_data = array(

                                        "user_id" => $_SESSION['adminData']['user_id'],
                                        "company_id" => $_SESSION['adminData']['company_id'], 
                                        "database_table_name" => 'Login try unsuccefull',                        
                                        "module_name" => 'User Login Try from unregistered ip address',
                                        "module_id" => $_SESSION['adminData']['user_id'],
                                        "note" => 'User tried to login from this ip address = '.$ip_address.' on '.date('Y-m-d H:i:s'),
                                        'ip_address' => $ip_address,
                                        'platform' => $platform,
                                        'browser' => $agent,
                                        'browser_version' => $browser_version,
                                        'device_type' => $device_type,
                                        "created_at" => date('Y-m-d H:i:s'),

                                    );

                                    $this->load->model('Mods');
                                    $insert = $this->Mods->single_insert('user_activities', $activity_data);
                                    if($insert){
                                        $this->session->unset_userdata('adminData');
                                        $this->login();
                                        }  
                                    }
                        else{
                              $this->load->library('user_agent');
                                if ($this->agent->is_browser())
                                    {
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();
                                        $device_type        = "Desktop";
                                    }

                                    elseif ($this->agent->isRobot())
                                    {
                                            $device_type = $this->agent->robot();
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }

                                    elseif ($this->agent->isMobile())
                                    {
                                            $device_type = $this->agent->getMobile();
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }
                                    else
                                    {
                                        $device_type = 'Unidentified User Agent';
                                        $agent              = $this->agent->browser();
                                        $browser_version    = $this->agent->version();
                                        $platform           = $this->agent->platform();
                                        $ip_address         = $this->input->ip_address();

                                    }

                                    $activity_data = array(
                                        "user_name" => $username,
                                        "password" => $password, 
                                        "database_table_name" => 'Login try unsuccefull from other ip',                        
                                        "module_name" => 'User Login Try from unregistered ip address',
                                        "note" => 'User tried to login from this ip address = '.$ip_address.' on '.date('Y-m-d H:i:s'),
                                        'ip_address' => $ip_address,
                                        'platform' => $platform,
                                        'browser' => $agent,
                                        'browser_version' => $browser_version,
                                        'device_type' => $device_type,
                                        "created_at" => date('Y-m-d H:i:s'),
                                    );
                            $this->load->model('Mods');
                            $insert = $this->Mods->single_insert('login_activities', $activity_data);
                            $this->login();
                            }
                        }
                    
                } else {
                    $this->session->set_flashdata('error', 'Invalid password.');
                    $this->login();
                }
            } else {

                $this->session->set_flashdata('error', 'User Not Found! Contact to Admin.');
                $this->login();
            }
        }
    }
    public function Dashboard() {
        $company_id = $_SESSION['adminData']['company_id'];
        $user_id    = $_SESSION['adminData']['user_id'];        
        $userType   = $_SESSION['adminData']['role_name'];
        
        $Statssql1 = "SELECT count(*) AS 'LAST_MONTH_LEADS_ACCEPTED' FROM leads WHERE lead_status = 20 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql1 = $this->db->query($Statssql1)->result_array();                    
        $this->data['totalLastMonthLeadsAccepted'] = $resultStatssql1[0]['LAST_MONTH_LEADS_ACCEPTED']; 
        
        $Statssql2 = "SELECT count(*) AS 'LAST_MONTH_LEADS_REJECTED' FROM leads WHERE lead_status = 49 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql2 = $this->db->query($Statssql2)->result_array();                    
        $this->data['totalLastMonthLeadsRejected'] = $resultStatssql2[0]['LAST_MONTH_LEADS_REJECTED']; 
        
        $Statssql3 = "SELECT count(*) AS 'LAST_MONTH_LEADS_DUPLICATE' FROM leads WHERE lead_status = 11 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql3 = $this->db->query($Statssql3)->result_array();                    
        $this->data['totalLastMonthLeadsDuplicate'] = $resultStatssql3[0]['LAST_MONTH_LEADS_DUPLICATE']; 
        
        $Statssql4 = "SELECT count(*) AS 'LAST_MONTH_LEADS_CALLBACK' FROM leads WHERE lead_status = 1 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql4 = $this->db->query($Statssql4)->result_array();                    
        $this->data['totalLastMonthLeadsCallBack'] = $resultStatssql4[0]['LAST_MONTH_LEADS_CALLBACK']; 
        
        $Statssql5 = "SELECT count(*) AS 'LAST_MONTH_LEADS_ALREADCLAIMED' FROM leads WHERE lead_status = 21 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql5 = $this->db->query($Statssql5)->result_array();                    
        $this->data['totalLastMonthLeadsAlreadClaimed'] = $resultStatssql5[0]['LAST_MONTH_LEADS_ALREADCLAIMED']; 
        
        $Statssql6 = "SELECT count(*) AS 'LAST_MONTH_LEADS_SENTTOSOLICTOR' FROM leads WHERE lead_status = 18 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql6 = $this->db->query($Statssql6)->result_array();                    
        $this->data['totalLastMonthLeadsSentSolicter'] = $resultStatssql6[0]['LAST_MONTH_LEADS_SENTTOSOLICTOR']; 
        
        $Statssql7 = "SELECT count(*) AS 'LAST_MONTH_LEADS_NOTINTRSTED' FROM leads WHERE lead_status = 208 AND campaign_id = 1 AND created_at BETWEEN (CURRENT_DATE() - INTERVAL 1 MONTH) AND CURRENT_DATE()";
        $resultStatssql7 = $this->db->query($Statssql7)->result_array();                    
        $this->data['totalLastMonthLeadsNotIntersted'] = $resultStatssql7[0]['LAST_MONTH_LEADS_NOTINTRSTED']; 
        
        $StatssqlUserCFA = "SELECT leads.user_id, users.userName, COUNT(*) AS 'UsersCFA' FROM leads INNER JOIN users ON users.id = leads.user_id WHERE (leads.lead_status = 20 OR leads.lead_status = 8) AND leads.campaign_id = 1 GROUP BY users.userName";
        $resultUserCFA  = $this->db->query($StatssqlUserCFA)->result_array(); 
        $this->data['totalUsersCFABars'] = count($resultUserCFA);
        
        $this->data['totalUsersCFABarsRecords'] = $resultUserCFA;
        
        $this->data['allusersdata'] = $this->Mods->getUsers();
        $sql_label       = "SELECT events.id,
                            events.title AS oldishTittle, 
                            events.client_id, 
                            events.description,
                            events.eventstatus, 
                            events.start, 
                            events.end, 
                            events.color,
                            events.created_by,
                            users.userName,
                            users.userName AS EventCreatedUserName,
                            CASE 
                                WHEN events.client_id = 0 THEN 'Event Without Client' 
                                WHEN events.client_id != 0 THEN (SELECT CONCAT(leads.first_name, ' ', leads.last_name, ' [ ', leads.phone_1,' ] ') FROM leads  WHERE leads.lead_id = events.client_id)
                            END AS 'shortDetailsClient',
                            CONCAT('(',users.userName,')',' ', events.title) as title
                        FROM
                        events JOIN users ON users.id = events.created_by WHERE events.created_by = $user_id";
        $label_data  = $this->db->query($sql_label)->result();
        
         $NewRecords = array();
            foreach($label_data as $single){
                
                $temp = array();
                $temp['id']             = $single->id;
                $temp['oldishTittle'] =  $single->oldishTittle;
                $temp['client_id'] = $single->client_id;
                $temp['description'] = $single->description;
                $temp['eventstatus'] = $single->eventstatus;
                $temp['start'] = $single->start;
                $temp['end'] = $single->end;
                $temp['color'] = $single->color;
                $temp['shortDetailsClient'] = $single->shortDetailsClient;
                $temp['title'] = $single->title.' ('.$single->shortDetailsClient.')';
                $temp['created_by'] = $single->created_by;
                array_push($NewRecords, $temp);
            }  
        
        $this->data['events'] = $NewRecords;
      
        $sql_total_leads = "";        
        $sql_total_leads .= "SELECT count(*) as 'TOTAL_LEADS' FROM leads";        
            if($_SESSION['adminData']['role_name'] != "Admin"){
            
                if($_SESSION['adminData']['role_name'] == "Supervisor"){
                    $sql_total_leads .= " where leads.company_id = $company_id";
                }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                    $sql_total_leads .= " where leads.handler_id = $user_id ";
                }else{
                    $sql_total_leads .= " where leads.user_id = $user_id and leads.company_id = $company_id";
                }                
            }
        $result_total_leads = $this->db->query($sql_total_leads)->result_array();                    
        $this->data['totalLeads'] = $result_total_leads[0]['TOTAL_LEADS']; 
        $sql_last_7_leads = "";        
        $sql_last_7_leads .= "SELECT count(*) AS 'LAST_7_DAYS_LEADS' FROM leads WHERE created_at >= DATE(NOW()) - INTERVAL 7 DAY";        
            if($_SESSION['adminData']['role_name'] != "Admin"){
                if($_SESSION['adminData']['role_name'] == "Supervisor"){
                    $sql_last_7_leads .= " AND leads.company_id = $company_id";
                }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                    $sql_total_leads .= " AND leads.handler_id = $user_id ";
                }else{
                    $sql_last_7_leads .= " AND leads.user_id = $user_id and leads.company_id = $company_id";
                }                
            }
        $result_last_7_leads = $this->db->query($sql_last_7_leads)->result_array();                    
        $this->data['last_7_leads'] = $result_last_7_leads[0]['LAST_7_DAYS_LEADS']; 
        $sql_today_leads = "";        
        $sql_today_leads .= "SELECT count(*) AS 'TODAY_LEADS' FROM leads WHERE created_at >= CURDATE() AND created_at < CURDATE() + INTERVAL 1 DAY";        
            if($_SESSION['adminData']['role_name'] != "Admin"){
                if($_SESSION['adminData']['role_name'] == "Supervisor"){
                    $sql_today_leads .= " AND leads.company_id = $company_id";
                }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                    $sql_total_leads .= " AND leads.handler_id = $user_id ";
                }else{
                    $sql_today_leads .= " AND leads.user_id = $user_id and leads.company_id = $company_id";
                }                
            }
        $result_today_leads = $this->db->query($sql_today_leads)->result_array();                    
        $this->data['today_leads'] = $result_today_leads[0]['TODAY_LEADS']; 
        $sql_total_active_user = "SELECT 
                                        COUNT(*) 
                                    AS 
                                        'TOTAL_ACTIVE_USERS' 
                                    FROM 
                                        users 
                                    INNER JOIN 
                                        roles 
                                    on 
                                        roles.role_id = users.userType 
                                    WHERE 
                                        users.is_active = 1 
                                    AND 
                                        roles.role_name = 'Client' 
                                    AND 
                                        roles.is_active = 1";
        
        $result_total_active_user = $this->db->query($sql_total_active_user)->result_array();                    
        $this->data['result_total_active_user'] = $result_total_active_user[0]['TOTAL_ACTIVE_USERS']; 

        $sql_chart = "";
        $sql_chart .= "SELECT
                        lead_statuses.id,
                        lead_statuses.lead_type,
                        count(leads.lead_status) AS 'LEAD_TYPE_COUNT'
                    FROM
                        leads
                    INNER JOIN 
                        users 
                    ON 
                        users.id = leads.user_id
                    INNER JOIN 
                        roles 
                    ON 
                        roles.role_id = users.userType
                    INNER JOIN 
                        lead_statuses 
                    ON 
                        lead_statuses.id = leads.lead_status
                    WHERE
                        roles.role_name 
                    IN 
                        ('Client', 'Admin') 
                    AND 
                        users.is_active = 1 
                    AND 
                        roles.is_active = 1 ";
                        
            if($_SESSION['adminData']['role_name'] != "Admin"){
                
                if($_SESSION['adminData']['role_name'] == "Supervisor"){
                    $sql_chart .= "AND leads.company_id = $company_id";
                }else{
                    $sql_chart .= "AND leads.user_id = $user_id and leads.company_id = $company_id";
                }                   
            }
            $sql_chart .=  " GROUP BY
                        lead_statuses.lead_type, lead_statuses.id 
                    ORDER by 
                        lead_statuses.lead_type 
                    ASC";

        $result_chart = $this->db->query($sql_chart)->result_array();                    
        
        $chartStats = array();

if ($result_chart){
        
        foreach ($result_chart as $chart){
            
                if ($chart['lead_type'] == "new") {
                    $chartStats['New'] = $chart['LEAD_TYPE_COUNT'];
                }

                if ($chart['lead_type'] == "Validated") {
                    $chartStats['Validated'] = $chart['LEAD_TYPE_COUNT'];
                } 

                if ($chart['lead_type'] == "Closed") {
                    $chartStats['Closed'] = $chart['LEAD_TYPE_COUNT'];
                } 

                if ($chart['lead_type'] == "Invalidated") {
                    $chartStats['Invalidated'] = $chart['LEAD_TYPE_COUNT'];
                } 

                if ($chart['lead_type'] == "Converted") {
                    $chartStats['Converted'] = $chart['LEAD_TYPE_COUNT'];
                } 

                if ($chart['lead_type'] == "Qualified") {
                    $chartStats['Qualified'] = $chart['LEAD_TYPE_COUNT'];
                }

                if ($chart['lead_type'] == "Contacted") {
                    $chartStats['Contacted'] = $chart['LEAD_TYPE_COUNT'];
                }
            
            }
        }
        $this->title = "Leads Portal";
        $this->data['chartStats'] = $chartStats;
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/dashboard/dashboard', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function logout() {
        if ($this->session->userdata('adminData')) {
            $this->session->unset_userdata('adminData');
            redirect('Mod/adminLogin');
        }
    }    
   public function ajaxGetUsersByComapny(){
        
        $company_id     = $this->input->post('company_id');
        $sql_users      = "select * from users where is_active = 1 and company_id in ($company_id) order by userName asc";
        $users          = $this->db->query($sql_users)->result();
        
        $html = "";
        if ($users){
            foreach ($users as $user){
                $html .= "<option value='$user->id'>$user->userName</option>";
            }
        }
        
        echo $html;
        
    }
   public function addUserGroup(){
        $sql_companies  = "select * from companies where status = 1 order by company_name asc";
        $companies      = $this->db->query($sql_companies)->result();
        $company_id     = $this->input->post('company');
        if ($company_id){
            $sql_users      = "select * from users where is_active = 1 and company_id in ($company_id) order by userName asc";
            $users          = $this->db->query($sql_users)->result();
        }else{
            $users          = "";
        }
        $this->data['companies']    = $companies;
        $this->data['users']        = $users;
        $this->title = "Lead Portal - Admin Panel | Add User Group";
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/user/addUserGroup', $this->data);
        $this->load->view('Mod/footer/footer');
    }
   public function createUserGroup(){     
        if ($this->form_validation->run('createUserGroup') == FALSE) {
            $this->addUserGroup();
        } else {
            $user_group_data = array(
                "created_by_user_id"    => $_SESSION['adminData']['user_id'], 
                "created_by_cmpany_id"  => $_SESSION['adminData']['company_id'], 
                "group_name"            => $this->input->post('user_group_name'), 
                "company_id"            => $this->input->post('company'), 
                "user_ids"              => json_encode($this->input->post('users')), 
                "user_groups_status"    => $this->input->post('status'), 
                "created_at"            => date('Y-m-d H:i:s'), 
            );
            $user_group_insertion_id = $this->Mods->single_insert('user_groups', $user_group_data);
            if ($user_group_insertion_id){
                $this->session->set_flashdata('Success_user_groups', 'User Groups Created.');
                redirect(base_url('Mod/manageUserGroup'));
            }
        }
    }
   public function editUserGroup($id){}
   public function viewUserGroup($id){
        $user_group_data = ($id) ? $this->Mods->getIdByName($table_name = 'user_groups', $condition = 'id', $id) : "";
        if ($user_group_data) {
            $company_data = ($user_group_data[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $user_group_data[0]->company_id) : "";
            $user_group_data[0]->company_id = $company_data[0]->company_name;
            $user_sql = ($user_group_data[0]->user_ids) ? '' : '';
            $user_group_data[0]->user_ids = json_decode($user_group_data[0]->user_ids);
            if ($user_group_data[0]->user_ids){
                foreach ($user_group_data[0]->user_ids as $user_ids){
                    $user = ($user_ids) ? 'select * from users where id = ' . $user_ids : '';
                    $users = ($user) ? $this->db->query($user)->result() : '';
                    if (!empty($users)){
                        $users_data[] = $users;
                    }
                }
            }
            $this->data['users'] = $users_data;
            $this->data['user_group_data'] = $user_group_data[0];
        } else {
            $this->session->set_flashdata('DataErrorUserGroup', 'Record Not Exists.');
            $this->data['user_group_data'] = "";
        }
        $this->title = "Lead Portal - Admin Panel | Manage User Group";
        $this->headerV($this->title);
        $this->load->view('Mod/user/viewUserGroup', $this->data);
        $this->load->view('Mod/footer/footer');
    }
   public function deleteUserGroup(){     
        $id = $_POST['delID'];
        $this->load->model('Mods');
        $campanyData = ($id) ? $this->Mods->getIdByName($table_name = 'user_groups', $condition = 'id', $id) : '';
        if (is_array($campanyData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'id', $table_name = 'user_groups');            
        } else {
            $del = FALSE;
        }
        echo ($del) ? TRUE : FALSE;
    }
   public function manageUserGroup(){   
        $this->title = "Lead Portal - Admin Panel | Manage User Group";
        $this->headerV($this->title);
        $this->load->view('Mod/user/manageUserGroup');
        $this->load->view('Mod/footer/footer');
    }
   public function adminLoadUserGroupData() {        
        $aColumns               = array("id", "created_by_user_id", "created_by_cmpany_id", "group_name", "company_id", "user_ids", "user_groups_status", "created_at");
        $aColumns_for_sorting   = array("id", "group_name", "user_groups_status", "created_at");
        $aColumns_for_loop      = array("group_name", "user_groups_status", "created_at");
        $sIndexColumn = "id";
        /* DB table to use */
        $sTable = "user_groups";
        /*
         * Paging
         */
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }
        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND created_by='$user_id'";            
            
        }  
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND created_by='$user_id'";            
            
        }  
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable 
	";

        $aResultTotal   = $this->db->query($sQuery)->result_array();
        $iTotal         = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();
                
                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['user_groups_status']      = ($aRow['user_groups_status']) ? 'Active' : 'In-Active';
                $row[]                  = $x;
                
                for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                    if ($aColumns_for_loop[$i] != '') {
                        $row[] = $aRow[$aColumns_for_loop[$i]];
                    }

                }
            $view = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a href="' . base_url('Mod/viewUserGroup/') . $aRow['id'] . '" style="padding: 3px"><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['role_name'] == "Admin") ? '<button style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteUserGroup(' . $aRow['id'] . ')" name="del" data-value="' . $aRow['id'] . '"><i class="ti-trash"></i></<button>' : '';
            
            $row[] = $view . $delete;            
            $output['aaData'][] = $row;
            $x++;
        }
        echo json_encode($output);
    }    
   public function ajaxGetUserGroup(){   
        $company_id     = $this->input->post('company_id');
        $sql_user_group = "select * from user_groups where company_id = $company_id";
        $users          = $this->db->query($sql_user_group)->result();
        
        $html = "";
        if ($users){
                $html .= "<option value=''>Select User Group</option>";
            foreach ($users as $user){
                $html .= "<option value='$user->id'>$user->group_name</option>";
            }
        }else{
            $html .= "<option value=''>Select User Group</option>";
        }
        
        echo $html;
        
    }
    public function AddUser($result = '', $postData = '', $roleID = '') {
        
        $this->data['countries']    = $this->getCountries();
        $this->data['userType']     = $this->getRole();
        $this->data['companies']    = $this->getCompanies();
        $this->data['results']      = ($roleID) ? $result : '';
        $this->data['postData']     = $postData;
        
        $sql                        = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1";
        $campaigns                  = $this->db->query($sql)->result();
        $this->data['campaigns']    = $campaigns;

        $company_id = $this->input->post('company');

        if ($company_id){
            
            $sql_user_group = "select * from user_groups where company_id = $company_id";
            $user_group     = $this->db->query($sql_user_group)->result();

            $this->data['user_group']    = $user_group;
            
        }else{
            $this->data['user_group']    = "";
            
        }
        
        $this->title = "Lead Portal - Admin Panel | Add User";
        
        $this->headerV($this->title);
        $this->load->view('Mod/user/addUser', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function CreateUser() {
     
        $this->load->model('Mods');
   
        $roleID         = isset($_POST['userType']) ? $_POST['userType']: '';

        $results    = array();
        $postData   = array();

        if ($roleID){
        
        $results        =  $this->Mods->getUserPermission($roleID);
        
            if (isset($_POST['module'])) {

                foreach ($_POST['module'] as $module) {

                    $postData[$module] = array(
                        $module => $module,
                        'create' => (!empty($_POST[$module]['create'][0])) ? 1 : 0,
                        'update' => (!empty($_POST[$module]['update'][0])) ? 1 : 0,
                        'view' => (!empty($_POST[$module]['view'][0])) ? 1 : 0,
                        'delete' => (!empty($_POST[$module]['delete'][0])) ? 1 : 0,
                    );
                }

            }
            
        }        
        
        if ($this->form_validation->run('AddUser') == FALSE) {
            $this->AddUser($results, $postData, $roleID);
        } else {

            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');


            $do = array(
                
                'firstName'         => $this->input->post('firstName'),
                'lastName'          => $this->input->post('lastName'),
                'email'             => $this->input->post('email'),
                'gender'            => $this->input->post('gender'),
                'dateOfBirth'       => date("Y-m-d", strtotime($this->input->post('dob'))),
                'dateRegistered'    => date('Y-m-d'),
                'phoneNumber'       => $this->input->post('phone'),
                'address'           => $this->input->post('address'),
                'city'              => $this->input->post('city'),
                'State'             => $this->input->post('state'),
                'postCode'          => $this->input->post('postCode'),
                'country'           => $this->input->post('country'),
                'userName'          => $this->input->post('userName'),
                'password'          => $this->input->post('password'),
                'passwordHash'      => password_hash($this->input->post('password'), PASSWORD_DEFAULT),
                'userType'          => $this->input->post('userType'),
                'is_active'         => $this->input->post('status'),
                'actCode'           => sha1(md5(rand(10, 50))),
                'created_at'        => date('Y-m-d H:i:s'),
                'company_id'        => $this->input->post('company'), 
                'created_by'        => $_SESSION['adminData']['user_id'],                
                'campaign_id'       => json_encode($this->input->post('campaign')),
                'bdm_name'          => $this->input->post('bdm_name'),
                'user_group_id'     => ($this->input->post('user_Group')) ? $this->input->post('user_Group') : NULL ,    
                
                'ip_address_is_active'     => $this->input->post('IPRestrictionstatus'),
                'ip_address1'     => $this->input->post('IPaddress1'),
                'ip_address2'     => $this->input->post('IPaddress2'),
                'ip_address3'     => $this->input->post('IPaddress3'),
                
//                    'userGroups'        => '',
                
            );

            $this->load->model('Mods');

            $profileImage = ($this->ProfileImage($_FILES)) ?: '';

            if (isset($profileImage['errors'])) {
                $this->session->set_flashdata('error', $profileImage['errors'][0]);
                $this->AddUser();
            } else {

                $ImageName = isset($profileImage['ImageName']) ? $profileImage['ImageName'] : '';
                $do['avatar'] = $ImageName;
                $get = $this->Mods->single_insert('users', $do);
            }

            $i = 0;
            


            if ($get == TRUE) {
                
                foreach ($_POST['module'] as $module) {

                    $module = str_replace("_", " ", $module);                    
                    
                    $is_crud = $this->Mods->getIdByName('permissions', 'action_name', $module);

                    if ($is_crud[0]->is_crud) {

                    $module = str_replace(" ", "_", $module);                    
                        
                        $add        = (!empty($_POST[$module]['create'][0])) ? 1 : 0;
                        $update     = (!empty($_POST[$module]['update'][0])) ? 1 : 0;
                        $view       = (!empty($_POST[$module]['view'][0])) ? 1 : 0;
                        $delete     = (!empty($_POST[$module]['delete'][0])) ? 1 : 0;
                        
                    } else {

                        $add        = 0;
                        $update     = 0;
                        $view       = 0;
                        $delete     = 0;
                        
                    }

                    $get_role_permission_id = $this->Mods->getIdByName('role_permission', 'id', $is_crud[0]->permission_id);

                    $user_role = array(
                        
                        'user_id'               => $get,
                        'role_id'               => $this->input->post('userType'),
                        'role_permission_id'    => $is_crud[0]->permission_id,
                        'permission_create'     => $add,
                        'permission_update'     => $update,
                        'permission_view'       => $view,
                        'permission_delete'     => $delete
                            
                    );

                    $this->Mods->single_insert('user_role', $user_role);
                    $i++;
                }
            }
            
            if (count($_POST['module']) == $i) {
                $this->session->set_flashdata('Success', 'User Created.');
                redirect(base_url('Mod/Users'));
            }
            
        }
    }
    public function ProfileImage($file) {

        $uploadDir      = 'Uploads/profileImages/Admin/';
        $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');

        $errors     = array();
        $mimeType   = ($file['image']['tmp_name']) ? getimagesize($file['image']['tmp_name']) : '';

        if ($file['image']['error'] != 4) {

            if (!in_array($file['image']['type'], $allowedTypes)) {
                $errors[] = 'Please select only gif/jpg/png file.';
            } elseif ($mimeType['mime'] != $file['image']['type']) {
                $errors[] = 'You bleady rascle';
            }
        }
        $ext        = '.' . pathinfo($file['image']['name'], PATHINFO_EXTENSION);
        $uniqueName = str_replace($ext, '-' . time(), $file['image']['name']) . $ext;
        
        if (count($errors) == 0) {
            move_uploaded_file($file['image']['tmp_name'], $uploadDir . basename($uniqueName));
            $fileUpload = 1;
        } else {
            return array('errors' => $errors);
        }

        return array(
            'success' => ($fileUpload == TRUE) ? $fileUpload : FALSE,
            'ImageName' => $uniqueName
        );
    }
    public function editUser($id, $result = '', $postData = ''){   
        $this->load->model('Mods');
        $userData = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $id);
        
        if ($userData) {

        $sql                        = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1";
        $campaigns                  = $this->db->query($sql)->result();
        $this->data['campaigns']    = $campaigns;

        $company_id = $this->input->post('company');
        
        if ($company_id){
            $company_id = $this->input->post('company');
        }else{
            $company_id = $userData[0]->company_id;
        }
    
        if ($company_id){
            
            $sql_user_group = "select * from user_groups where company_id = $company_id";
            $user_group     = $this->db->query($sql_user_group)->result();

            $this->data['user_group']    = $user_group;
            
        }else{
            $this->data['user_group']    = "";
        }
        
            
            $getUserPermissions                 = $this->Mods->getUserPermissions($userData[0]->id);
            $userPermissions                    = $getUserPermissions;
            $getUserType                        = $this->Mods->getIdByName($table_name = 'roles', $condition = 'role_id', $data = $userData[0]->userType);
            $this->data['encrypt']              = is_array($getUserPermissions) ? base64_encode(json_encode($userPermissions)) : '';
            $this->data['userData']             = $userData[0];
            $this->data['countries']            = $this->getCountries();
            $this->data['userType']             = $this->getRole();
            $this->data['userTypeName']         = $getUserType[0]->role_name;
            $this->data['id']                   = $id;
            $this->data['results']              = $result;
            $this->data['postData']             = $postData;
            $this->data['companies']            = $this->getCompanies();            
            
        } else {
            
            $this->session->set_flashdata('DataEditError', 'Record Not Exists.');
            $this->data['encrypt']              = '';
            $this->data['userData']             = '';
            $this->data['countries']            = '';
            $this->data['userType']             = '';
            $this->data['userTypeName']         = '';
            $this->data['id']                   = '';
            $this->data['companies']            = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/user/editUser', $this->data);        
        $this->load->view('Mod/footer/footer');
        
    }
    public function updateUser(){
        $this->load->model('Mods');
        $id             = base64_decode($_POST['userID']);
//        $roleID         = $_POST['userType'];
        
        $roleID         = isset($_POST['userType']) ? $_POST['userType']: '';
        $results        = array();
        $postData       = array();

        if ($roleID){
        
            $results        = $this->Mods->getUserPermission($roleID);
//          $postData       = array();
        
            if (isset($_POST['module'])) {

                foreach ($_POST['module'] as $module) {

                    $postData[$module] = array(
                        $module => $module,
                        'create' => (!empty($_POST[$module]['create'][0])) ? 1 : 0,
                        'update' => (!empty($_POST[$module]['update'][0])) ? 1 : 0,
                        'view' => (!empty($_POST[$module]['view'][0])) ? 1 : 0,
                        'delete' => (!empty($_POST[$module]['delete'][0])) ? 1 : 0,
                    );
                }

            }
            
        }        
        if ($this->form_validation->run('UpdateUser') == FALSE) {
            $this->editUser($id, $results, $postData);
        } else {
            
            $do = array(
                
                'firstName'         => $this->input->post('firstName'),
                'lastName'          => $this->input->post('lastName'),
                'email'             => $this->input->post('email'),
                'gender'            => $this->input->post('gender'),
                'dateOfBirth'       => date("Y-m-d", strtotime($this->input->post('dob'))),
                'phoneNumber'       => $this->input->post('phone'),
                'address'           => $this->input->post('address'),
                'city'              => $this->input->post('city'),
                'State'             => $this->input->post('state'),
                'postCode'          => $this->input->post('postCode'),
                'country'           => $this->input->post('country'),
                'userName'          => $this->input->post('userName'),
                'password'          => $this->input->post('password'),
                'passwordHash'      => password_hash($this->input->post('password'), PASSWORD_DEFAULT),
                'userType'          => $this->input->post('userType'),
                'campaign_id'       => json_encode($this->input->post('campaign')),
                'updated_at'        => date('Y-m-d H:i:s'),
                'is_active'         => $this->input->post('status'),
                'company_id'        => $this->input->post('company'),
                'bdm_name'          => $this->input->post('bdm_name'),
                'user_group_id'     => ($this->input->post('user_Group')) ? $this->input->post('user_Group') : NULL,
                
                'ip_address_is_active'     => $this->input->post('IPRestrictionstatus'),
                'ip_address1'     => $this->input->post('IPaddress1'),
                'ip_address2'     => $this->input->post('IPaddress2'),
                'ip_address3'     => $this->input->post('IPaddress3'),
                
            );            
           /* echo "<pre>";
            print_r($do);
            die();*/
            $profileImage = ($this->ProfileImage($_FILES)) ?: '';

            if (isset($profileImage['errors'])) {
                
                $this->session->set_flashdata('error', $profileImage['errors'][0]);
                $this->editUser($id, $results, $postData);
                
            } else {

// need to fix this.... 


                
//                if (isset($profileImage['ImageName']) && !empty($profileImage['ImageName'])){
//                    
//                    $file = 'Uploads/profileImages/Admin/' . $this->input->post("imageName");
//                    

////                    
//                    if (file_exists($file)){
//                            unlink($file);
//                        }
//                        
//                }
                
                $ImageName      = isset($profileImage['ImageName']) ? $profileImage['ImageName'] : $this->input->post('imageName');
                $do['avatar']   = $ImageName;
                $get = $this->Mods->update($table_name = 'users', $conditionField = array('id' => $id), $userId = $id, $data = $do);
                
            }
            
            $i = 0;

            if ($get == TRUE) {
                
                $modules = $this->Mods->getAllData($fields = '*', $order = 'sort', $sort = 'ASC', $tableName = 'permissions');
                
                foreach ($modules as $module) {
                    
                    $module->action_name = str_replace(" ", "_", $module->action_name);
                    
                    $is_crud                    = $this->Mods->getIdByName('permissions', 'action_name', str_replace("_", " ", $module->action_name));
                    $get_role_permission_id     = $this->Mods->getIdByName('role_permission', 'id', $is_crud[0]->permission_id);                    
                    $module_id                  = (!empty($_POST['module'][$module->action_name])) ? $module->permission_id : 0;
                    
                    if ( $module_id ) {
                        
                        $add        = (!empty($_POST[$module->action_name]['create'][0])) ? 1 : 0;
                        $update     = (!empty($_POST[$module->action_name]['update'][0])) ? 1 : 0;
                        $view       = (!empty($_POST[$module->action_name]['view'][0])) ? 1 : 0;
                        $delete     = (!empty($_POST[$module->action_name]['delete'][0])) ? 1 : 0;
                        $i++;
                        
                    } else {

                        $add        = 0;
                        $update     = 0;
                        $view       = 0;
                        $delete     = 0;
                        
                    }
                    
                    $user_role = array(
                        
                        'user_id'               => $get,
                        'role_id'               => $this->input->post('userType'),
                        'role_permission_id'    => $module_id,
                        'permission_create'     => $add,
                        'permission_update'     => $update,
                        'permission_view'       => $view,
                        'permission_delete'     => $delete
                            
                    );
                    
                    // check record exists against user and permissions
                        
                        $conditionData = array(
                                                'user_id' => $get, 
                                                'role_permission_id' => $module->permission_id
                                            );
                        
                    $getUserPer_role_id = $this->Mods->getDataByCondition( $fields = 'id', $tableName = 'user_role', $conditionData );
                    
                    if (!empty($getUserPer_role_id[0]->id)){
                        ($module_id) ? $this->Mods->update($table_name = 'user_role', $conditionField = array('id' => $getUserPer_role_id[0]->id), $userId = $get, $data = $user_role): $this->Mods->delete_single($id = $getUserPer_role_id[0]->id, $conditionField = 'id', $table_name = 'user_role');
                    }
                    else{
                       ($module_id) ? $this->Mods->single_insert('user_role', $user_role) : '';
                    }
                }

            }
            
            if (count($_POST['module']) == $i) {
                $this->session->set_flashdata('userUpdateSuccess', 'User Record Updated.');
                redirect(base_url('Mod/Users'));
            }
            
        }
        
    }

    public function viewUser($id) {

        $this->load->model('Mods');
        $userData = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $id);

        if ($userData) {
            
            if ($userData[0]->company_id){
                $company = $this->Mods->getIdByName($table_name = "companies", $condition = 'id', $data = $userData[0]->company_id);
                $userData[0]->company_id = $company[0]->company_name;
            }else{
                $userData[0]->company_id = "All";
            }
            
            $userData[0]->campaign_id = json_decode($userData[0]->campaign_id);
            
            $sql        = "select * from campaign where campaign_id in (". implode(",", $userData[0]->campaign_id).")";
            $campaign   = $this->db->query($sql)->result();

            $sql_user_group = ($userData[0]->user_group_id) ? "SELECT group_name FROM `user_groups` where id = " . $userData[0]->user_group_id : '';
            $user_group = ($sql_user_group) ? $this->db->query($sql_user_group)->result() : '';
            $userData[0]->user_group_id = ($user_group) ? $user_group[0]->group_name : '';
            
            if ($campaign){
                $userData[0]->campaign_id = $campaign;
            }else{
                $userData[0]->campaign_id = array(array("campaign_name" => "All"));
                $userData[0]->campaign_id = json_decode(json_encode($userData[0]->campaign_id), FALSE);
            }
            
            $this->data['userData']             = $userData[0];
            $this->data['getUserPermissions']   = $this->Mods->getUserPermissions($userData[0]->id);                    
            
        } else {
            
            $this->session->set_flashdata('DataError', 'Record Not Exists.');
            $this->data['userData'] = '';
            $this->data['getUserPermissions']   = '';                                
            
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/user/viewUser', $this->data);
        $this->load->view('Mod/footer/footer');
    }
    public function Users() {
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/user/users');
        $this->load->view('Mod/footer/footer');
        
    }

    public function userProfile(){
        
        $userID         = $_SESSION['adminData']['user_id'];
        $userName       = $_SESSION['adminData']['user_name'];
        $companyID      = $_SESSION['adminData']['company_id'];
        $companyName    = $_SESSION['adminData']['company_name'];
        $userType       = $_SESSION['adminData']['userType'];
        $userTypeName   = $_SESSION['adminData']['role_name'];

        $this->load->model('Mods');
        $this->data['countries'] = $this->getCountries();
        
        $sql = "SELECT
                -- users.*,
                roles.role_name,
                permissions.controller_name,
                permissions.action_name,    
                user_role.permission_create,
                user_role.permission_update,
                user_role.permission_view,
                user_role.permission_delete,
                companies.company_name
            FROM
                users
            INNER JOIN user_role ON users.id = user_role.user_id
            INNER JOIN companies ON companies.id = users.company_id 
            INNER JOIN roles ON user_role.role_id = roles.role_id
            INNER JOIN permissions ON user_role.role_permission_id = permissions.permission_id
            WHERE
                users.id = $userID AND companies.status = 1 AND roles.is_active = 1 AND permissions.is_active = 1";        

        $result = $this->db->query($sql)->result_array();                    
        
        $this->data['userPer'] = $result;
        
        $userData = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $userID);        

        $this->data['userData'] = $userData[0];
        
        $this->headerV($this->title = "User Profile");
        $this->load->view('Mod/user/profile', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function settings(){

        if ($this->form_validation->run('settings') == FALSE) {
            $this->userProfile();
        } else {
            date_default_timezone_set('Europe/London');
            
            $userID = $_SESSION['adminData']['user_id'];
            $userData = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $userID);
            
            $updateProfile = array(
                
                'firstName'     => $this->input->post('firstName'), 
                'lastName'      => $this->input->post('lastName'), 
                'email'         => $this->input->post('email'), 
                'gender'        => $this->input->post('gender'), 
                'dateOfBirth'   => $this->input->post('dateOfBirth'), 
                'phoneNumber'   => $this->input->post('phoneNumber'), 
                'address'       => $this->input->post('address'), 
                'city'          => $this->input->post('city'), 
                'State'         => $this->input->post('state'), 
                'postCode'      => $this->input->post('postCode'), 
                'country'       => $this->input->post('country'), 
                'updated_at'    => date("Y:M:D H:i:s"),
                
            );

            $updatePassword = $this->Mods->update($table_name = 'users', $conditionField = array('id' => $userID), $userId = $userID, $data = $updateProfile);

            if ($updatePassword) {

                $this->session->set_flashdata('ProfileUpdate', 'Your Profile Has Been Updated.');
                redirect('Mod/userProfile/settings');

            } else {
                
                $this->session->set_flashdata('Error', 'Profile update Failed. There is some Internal Error Contact to Admin.');
                $this->userProfile();
                
            }
            
        }
    }

    public function resetPassword(){
        
        if ($this->form_validation->run('ResetPassword') == FALSE) {
            $this->userProfile();
        } else {
            date_default_timezone_set('Europe/London');
            
            $oldPassword = $this->input->post('OldPassowrd');
            $newPassowrd = $this->input->post('NewPassowrd');            
            $reTypePassowrd = $this->input->post('Re-TypePassowrd');            

            $userID         = $_SESSION['adminData']['user_id'];
            $userData       = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $userID);        
            
            if (!password_verify($oldPassword, $userData[0]->passwordHash)) {
                
                $this->session->set_flashdata('Error', 'You Are Entering a Wrong Password.');                                
                $this->userProfile();                
                
            }

            elseif ($newPassowrd != $reTypePassowrd){
                
                $this->session->set_flashdata('Error', 'New password and Re Type Passowrd are not Match. Please Enter the password again.');                
                $this->userProfile();
                
            }else{
                
                    $resetPassword = array(
                                                'id' => $userID, 
                                                'passwordHash' => password_hash($newPassowrd, PASSWORD_DEFAULT),
                                                'password' => $newPassowrd,
                                                'updated_at' => date("Y:M:D H:i:s"),
                                            );
                    
                    $updatePassword = $this->Mods->update($table_name = 'users', $conditionField = array('id' => $userID), $userId = $userID, $data = $resetPassword);
                    
                    if ($updatePassword){
                        
                        if ($this->session->userdata('adminData')) {
                            
                            $this->session->set_flashdata('resetPassword', 'Your Password Has Been Changed. Please Try To Login with New Password.');                                        
                            $this->session->unset_userdata('adminData');
                            redirect('Mod/adminLogin');
                            
                        }
                    
                    }else{
                        $this->session->set_flashdata('Error', 'Password Not Changed. There is some Internal Error Contact to Admin.');                
                        $this->userProfile();
                    }
                
            }
        }
    }
    
    protected function getCompanies() {

        $this->load->model('Mods');
        $data = $this->Mods->getAllData('id, company_name', 'company_name', 'asc', 'companies');
        return $data;
    }
    
    protected function getCountries() {

        $this->load->model('Mods');
        $data = $this->Mods->getAllData('country_id, iso, name, nicename', 'name', 'asc', 'countries');
        return $data;
    }

    protected function getRole() {

        $this->load->model('Mods');
        $data = $this->Mods->getAllData('role_id, role_name', 'role_name', 'asc', 'roles');
        return $data;
    }
    
    protected function getClosers() {

        $this->load->model('Mods');
        $sql = "select id, userName, userType, is_active FROM users WHERE userType = 11 AND is_active = 1 ";
        $data = $this->db->query($sql)->result();
        return ($data) ? $data : False;
    }
    
     protected function getAgents2() {

        $this->load->model('Mods');
        $sql = "select id, userName, userType, company_id, is_active FROM users WHERE userType = 9 AND is_active = 1 AND company_id = 201";
        $data = $this->db->query($sql)->result();
        return ($data) ? $data : False;
    }
  protected function getAgents() {

        $this->load->model('Mods');
        $sql = "select id, userName, userType, company_id, is_active FROM users WHERE userType = 9 AND is_active = 1 ";
        $data = $this->db->query($sql)->result();
        return ($data) ? $data : False;
    }
    
    protected function getAgentsOfROund1() {

        $this->load->model('Mods');
         $sql = "select id, userName, userType, company_id, is_active FROM users WHERE userType = 9 AND is_active = 1 AND company_id = 210";
        $data = $this->db->query($sql)->result();
        return ($data) ? $data : False;
    }

    protected function getPermissions() {

        $this->load->model('Mods');
        $sql = "select permission_id, controller_name, action_name, CONCAT(controller_name, ' | ' ,action_name) AS 'permission_name' from permissions WHERE permission_id not in (select role_permission.permission_id from role_permission) AND is_active = 1 and controller_name = '$controllerName' ORDER by sort ASC";
        $data = $this->db->query($sql)->result();
        return ($data) ? $data : False;
        
    }
    
    public function getUserPermission() {

        $roleID = $_POST['userType'];
        if (isset($_POST['getUserPermissions'])){
        
            $getUserPermissions = $_POST['getUserPermissions'];
            $userPermissions    = base64_decode($getUserPermissions);
            $userPermission     = json_decode($userPermissions);
        }
        
        $this->load->model('Mods');
        $results = $this->Mods->getUserPermission($roleID);
        
        $inc                = 1;
        $per                = 0;
        $html               = '';
        $selectModule       = '';
        $permission_create  = '';
        $permission_update  = '';
        $permission_view    = '';
        $permission_delete  = '';
        $return = '';
        
        if (is_array($results)) {

            foreach ($results as $result) {
                
                $result->action_name = str_replace(" ", "_", $result->action_name);
                
                if (isset($_POST['seniro']) && $_POST['seniro'] == 2 && isset($userPermission[$per]->role_id) && $roleID == $userPermission[$per]->role_id ){
                    $html = '2';
                    break;
                }
                
                elseif (isset($_POST['seniro']) && $_POST['seniro'] == 2 && !isset($userPermission[$per]->role_id)){
                    $html = '2';
                    break;
                }
                
                    if (isset($_POST['getUserPermissions'])) {
                        
                            $usPerId = isset($userPermission[$per]->permission_id) ? $userPermission[$per]->permission_id : 0;
                            
                        if ( is_array($userPermission) && isset($usPerId) && $usPerId == $result->permission_id ) {
                            
                            $selectModule       = ($userPermission[$per]->permission_id) ? 'checked' : '';
                            $permission_create  = ($userPermission[$per]->permission_create) ? 'checked' : '';
                            $permission_update  = ($userPermission[$per]->permission_update) ? 'checked' : '';
                            $permission_view    = ($userPermission[$per]->permission_view) ? 'checked' : '';
                            $permission_delete  = ($userPermission[$per]->permission_delete) ? 'checked' : '';
                            $per++;
                            
                        }
                        else{
                            
                            $selectModule       = '';
                            $permission_create  = '';
                            $permission_update  = '';
                            $permission_view    = '';
                            $permission_delete  = '';                            
                            
                        }
                    }else{
                        
                            $selectModule       = ($result->permission_id) ? 'checked' : '';                    
                            $permission_create  = ($result->permission_create) ? 'checked' : '';
                            $permission_update  = ($result->permission_update) ? 'checked' : '';
                            $permission_view    = ($result->permission_view) ? 'checked' : '';
                            $permission_delete  = ($result->permission_delete) ? 'checked' : '';

                    }
                    
                $html .= "<tr>
                            <td style='text-align: center'><b>$inc</b></td>
                            <td style='text-align: center'>$result->controller_name</td>
                            <td style='text-align: center'><input type='checkbox' $selectModule name='module[$result->action_name]' value='$result->action_name'></td>                                
                            <td style='text-align: center'>".str_replace("_", " ", $result->action_name)."</td>";
                
                if ($result->is_crud) {
                    
                    $html .= "  <td style='text-align: center'><input type='checkbox' $permission_create name='$result->action_name[create][]' value='1'></td>
                                <td style='text-align: center'><input type='checkbox' $permission_update name='$result->action_name[update][]' value='1'></td>
                                <td style='text-align: center'><input type='checkbox'  $permission_view name='$result->action_name[view][]' value='1'></td>
                                <td style='text-align: center'><input type='checkbox' $permission_delete name='$result->action_name[delete][]' value='1'></td>";
                } else {
                    $html .= '<td colspan="4" style="text-align: center"> No CRUD Exists. </td>';
                }

                $html .= "</tr>";
                $inc++;
            }
        } else {
            $html .= '<tr><td colspan="8">' . $results . '</td></tr>';
        }
        
            echo $html;
        
        
    }
    
    public function SendActivationCode($userID = '2') {

        $id = $userID;
        $this->load->model('Mods');
        $data = $this->Mods->getActCodeWithID($id);
        
        if(empty($data)){
            return FALSE;
        }
        
        $createActcode      = ($data) ? $id . $data->actCode : FALSE;
        $encrypted_string   = $id . openssl_encrypt($createActcode,"AES-128-ECB",$createActcode);

//        $decrypted_string = openssl_decrypt($encrypted_string,"AES-128-ECB",$createActcode);       

        //Server settings

        $this->mailer->SMTPDebug        = SMTP::DEBUG_SERVER;                      // Enable verbose debug output
        $this->mailer->SMTPDebug        = 0;
        $this->mailer->isSMTP();                                            // Send using SMTP
        $this->mailer->Host             = 'smtp.gmail.com';                    // Set the SMTP server to send through
        $this->mailer->SMTPAuth         = true;                                   // Enable SMTP authentication
        $this->mailer->Username         = 'roundoneweb@gmail.com';                     // SMTP username
        $this->mailer->Password         = 'housearrest@321*';                               // SMTP password
        $this->mailer->SMTPSecure       = PHPMailer::ENCRYPTION_STARTTLS;         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted
        $this->mailer->Port             = 587;                                    // TCP port to connect to

        //Recipients

        $this->mailer->setFrom('roundoneweb@gmail.com', 'Kwik Car Team');
        
        $this->mailer->addAddress($data->email, $data->FullName);     // Add a recipient
//        $this->mailer->addAddress('roundoneweb@gmail.com');               // Name is optional
//        $this->mailer->addReplyTo('roundoneweb@gmail.com', 'Information');
//        $this->mailer->addCC('roundoneweb@gmail.com');
//        $this->mailer->addBCC('roundoneweb@gmail.com');

        // Attachments
//            $this->PhpMailer->addAttachment('/var/tmp/file.tar.gz');         // Add attachments
//            $this->PhpMailer->addAttachment('/tmp/image.jpg', 'new.jpg');    // Optional name
//            $message = file_get_contents('http://localhost/KwikCarHire/Mod/sendUserVerificationEmail');

        // Content
        $this->mailer->isHTML(true);                                  // Set email format to HTML
        $this->mailer->Subject          = 'Account Verification';
        $this->mailer->Body             = '
            <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title>Verify your Account</title>
  <style type="text/css" rel="stylesheet" media="all">
        :not(br):not(tr):not(html){font-family:Arial,"Helvetica Neue",Helvetica,sans-serif;-webkit-box-sizing:border-box;box-sizing:border-box}body{width:100%!important;height:100%;margin:0;line-height:1.4;background-color:#f5f7f9;color:#839197;-webkit-text-size-adjust:none}a{color:#414ef9}.email-wrapper{width:100%;margin:0;padding:0;background-color:#f5f7f9}.email-content{width:50%;margin:0;padding:0}.email-masthead{padding:25px 0;text-align:center}.email-masthead_logo{max-width:400px;border:0}.email-masthead_name{font-size:16px;font-weight:700;color:#839197;text-decoration:none;text-shadow:0 1px 0 #fff}.email-body{width:100%;margin:0;padding:0;border-top:1px solid #e7eaec;border-bottom:1px solid #e7eaec;background-color:#fff}.email-body_inner{width:570px;margin:0 auto;padding:0}.email-footer{width:570px;margin:0 auto;padding:0;text-align:center}.email-footer p{color:#839197}.body-action{width:100%;margin:30px auto;padding:0;text-align:center}.body-sub{margin-top:25px;padding-top:25px;border-top:1px solid #e7eaec}.content-cell{padding:35px}.align-right{text-align:right}h1{margin-top:0;color:#292e31;font-size:19px;font-weight:700;text-align:left}h2{margin-top:0;color:#292e31;font-size:16px;font-weight:700;text-align:left}h3{margin-top:0;color:#292e31;font-size:14px;font-weight:700;text-align:left}p{margin-top:0;color:#839197;font-size:16px;line-height:1.5em;text-align:left}p.sub{font-size:12px}p.center{text-align:center}.button{display:inline-block;width:200px;background-color:#414ef9;border-radius:3px;color:#fff;font-size:15px;line-height:45px;text-align:center;text-decoration:none;-webkit-text-size-adjust:none;mso-hide:all}.button--green{background-color:#28db67}.button--red{background-color:#ff3665}.button--blue{background-color:#414ef9}@media only screen and (max-width:600px){.email-body_inner,.email-footer{width:100%!important}}@media only screen and (max-width:500px){.button{width:100%!important}}
  </style>
</head>
<body>
  <table class="email-wrapper" width="100%" cellpadding="0" cellspacing="0">
    <tr>
      <td align="center">
        <table class="email-content" width="100%" cellpadding="0" cellspacing="0">
          <!-- Logo -->
          <tr>
            <td class="email-masthead">
                <a class="email-masthead_name"><img src="http://kwikcarhire.co.uk/public/siteAssets/images/logo.png"></img></a>
            </td>
          </tr>
          <!-- Email Body -->
          <tr>
            <td class="email-body" width="100%">
              <table class="email-body_inner" align="center" width="570" cellpadding="0" cellspacing="0">
                <!-- Body content -->
                <tr>
                  <td class="content-cell">
                    <h1>Verify your Account</h1>
                    <p>Hi ' . $data->FullName . '</p>
                    <p>Thanks for signing up for Leads Portal! Were excited to have you as an early user.</p>
                    <!-- Action -->
                    <table class="body-action" align="center" width="100%" cellpadding="0" cellspacing="0">
                      <tr>
                        <td align="center">
                          <div>
                            <a style="color: white" href="'.base_url('Mod/accountVerification/') . $encrypted_string.'" class="button button--blue">Verify Account</a>
                          </div>
                        </td>
                      </tr>
                    </table>
                    <p>Thank You,<br>Leads Portal</p>
                    <!-- Sub copy -->
                    <table class="body-sub">
                      <tr>
                        <td>
                          <p class="sub">If you are having trouble clicking the button, copy and paste the URL below into your web browser.
                          </p>
                          <p class="sub"><a href="'. base_url('Mod/accountVerification/') .$encrypted_string .'">' . base_url('Mod/accountVerification/') . $encrypted_string .'</a></p>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
          <tr>
            <td>
              <table class="email-footer" align="center" width="570" cellpadding="0" cellspacing="0">
                <tr>
                  <td class="content-cell">
                    <p class="sub center">
                      Leads Portal
                      <br> Floor 33, 25 Canada Square, Canary Wharf, London, E14 5LB
                    </p>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
        </table>
      </td>
    </tr>
  </table>
</body>
</html>
';

//            $this->mailer->AltBody = 'This is the body in plain text for non-HTML mail clients';

//        $this->mailer->send();
        
        if ($this->mailer->send()){
            return TRUE;
        }else{
            return FALSE;            
        }
        

    }
    
    public function accountVerification($actCode){
        
        $this->load->model('Mods');

        $subject            = $_SERVER['PHP_SELF'];
        $replace            = '';
        $search             = '/KwikCarHire/index.php/Mod/accountVerification/';
        $actCode            = str_replace($search, $replace, $subject);
        $start              = strlen($actCode) - 64;
        $userID             = str_replace(substr($actCode, $start), '', $actCode);
        $actCode            = substr($actCode, $start);

        $data               = is_numeric($userID) ? $this->Mods->getActCodeWithID($userID) : FALSE;
        
        if (empty($data)){
            echo 'Invalid Activation Code.';
            return FALSE;
        }        
        
        $get                = (is_numeric($userID) && ($data->actCode)) ? $userID . $data->actCode : FALSE;
        $decrypted_string   = substr(openssl_decrypt($actCode,"AES-128-ECB",$get), $start);       
        
        if ($decrypted_string == $data->actCode){
            
            $dataActive = array(
                            'is_active' => 1,
                            'actCode' => '',
                        );
            
            $update = $this->Mods->update($table_name = 'users', $conditionField = array('id' => $userID), $id = $userID, $data = $dataActive);
            echo ($update) ? 'Account is Activated.' : 'Invalid Activation Code.';
        }else{
            echo 'Invalid Activation Code.';
        }
        
    }
    
    public function deleteUser() {

        $this->load->model('Mods');
        
        $id         = $_POST['delID'];
        $userData   = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $data = $id);

        if (is_array($userData)) {

            $avatar = $userData[0]->avatar;

            if (isset($avatar) && !empty($avatar)) {

                $file = 'Uploads/profileImages/Admin/' . $avatar;

                if (file_exists($file)) {
                    unlink($file);
                }
            }

            $this->db->trans_begin();

            $this->db->query("delete FROM `user_role` WHERE user_id in ($id)");
            $this->db->query("delete from users WHERE id = $id");

            if ($this->db->trans_status() === FALSE) {
            $this->db->trans_rollback();
                $del = FALSE;
            } else {

                $del = TRUE;
                $this->db->trans_commit();
            }
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;        
        
    }

    public function adminLoadUsersData() {
        
        $aColumns               = array('id', 'firstName', 'lastName', 'email', 'userName', 'userType', 'company_id', 'campaign_id', 'is_active', 'dateRegistered', 'created_by');
        $aColumns_for_sorting   = array('id', 'firstName', 'lastName', 'email', 'userName', 'userType', 'company_id', 'campaign_id', 'is_active', 'dateRegistered', 'created_by' );
        $aColumns_for_loop      = array('firstName', 'lastName', 'email', 'userName', 'userType', 'company_id', 'campaign_id', 'is_active', 'dateRegistered');

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "users";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND created_by='$user_id'";            
            
        }  
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND created_by='$user_id'";            
            
        }  
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable 
	";

        $aResultTotal   = $this->db->query($sQuery)->result_array();
        $iTotal         = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();

                $userType               = $this->Mods->getIdByName($table_name = 'roles', $condition = 'role_id', $data = $aRow['userType']);
                $aRow['userType']       = $userType[0]->role_name;

                $companyName            = $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $data = $aRow['company_id']);
                $aRow['company_id']     = ($companyName) ? $companyName[0]->company_name : 'All';

//                $campaignName            = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $data = $aRow['campaign_id']);
//                $aRow['campaign_id']     = ($campaignName) ? $campaignName[0]->campaign_name : 'All';
                
                $aRow['dateRegistered'] = date("d-M-Y", strtotime($aRow['dateRegistered']));
                $aRow['is_active']      = ($aRow['is_active']) ? 'Active' : 'In-Active';
                $row[]                  = $x;
 
                $aRow['campaign_id'] = json_decode($aRow['campaign_id']);
                
                $campaigns = "";                
                
                if ($aRow['campaign_id'][0] != 0){
                    
                    $sql            = "select campaign_short_name from campaign where campaign_id in (". implode(",", $aRow['campaign_id']).")";
                    $campaigns      = $this->db->query($sql)->result();
                    $cmp_data       = array();
                    
                    foreach ($campaigns as $campaign){
                        $cmp_data[]            = $campaign->campaign_short_name;
                        $aRow['campaign_id'] = implode(", ", $cmp_data);
                    }
                    
                }else{
                    $aRow['campaign_id'] = "All";
                }
                
                for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                    if ($aColumns_for_loop[$i] != '') {
                        $row[] = $aRow[$aColumns_for_loop[$i]];
                    }

                }

            $update = ($_SESSION['adminData']['Users']['permission_update'] == 1) ? '<a href="' . base_url('Mod/editUser/') . $aRow['id'] . '" style="padding: 3px"><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Users']['permission_view'] == 1) ? '<a href="' . base_url('Mod/viewUser/') . $aRow['id'] . '" style="padding: 3px"><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['user_id'] != $aRow['id'] && $_SESSION['adminData']['Users']['permission_delete'] == 1) ? '<button style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteUser(' . $aRow['id'] . ')" name="del" data-value="' . $aRow['id'] . '"><i class="ti-trash"></i></<button>' : '';
            
            $row[] = $update . $view . $delete;
            
            $output['aaData'][] = $row;
            $x++;
        }
        
        
        echo json_encode($output);
        
    }    
    
// Company Modules starts from here 
    
    public function addCompany(){
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/companies/addCompany');                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function createCompany(){
        
        if ($this->form_validation->run('addCompany') == FALSE) {
            $this->addCompany();
        } else {

            date_default_timezone_set('Europe/London');
            
            $companyData = array(
                
                'user_id'    => $_SESSION['adminData']['user_id'],
                'company_name'         => $this->input->post('companyName'),
                'status'          => $this->input->post('status'),
                'created_at'        => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            $companyInsert = $this->Mods->single_insert('companies', $companyData);
            
            if ($companyInsert){
                
                $this->session->set_flashdata('SuccessConmpanies', 'Company Created.');
                redirect(base_url('Mod/companies'));
                
            }
        }        
        
        
    }
    
    public function editCompany($id = ''){

        $this->load->model('Mods');
        $campanyData = ($id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $id) : '';
        
        
        if (is_array($campanyData)) {
            $this->data['campanyData'] = $campanyData[0];
        } else {
            $this->session->set_flashdata('campanyDataError', 'Record Not Exists.');
            $this->data['campanyData'] = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/companies/editCompany', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function updateCompany(){
        
    //companyid        
        
        $id = base64_decode($_POST['companyid']);
        
        if ($this->form_validation->run('updateCompany') == FALSE) {
            $this->editCompany($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $companyData = array(
                
                'company_name'    => $this->input->post('companyName'),
                'status'          => $this->input->post('status'),
                'updated_at'      => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
                $updateCompany = $this->Mods->update($table_name = 'companies', $conditionField = array('id' => $id), $companyId = $id, $data = $companyData);            
            if ($updateCompany){
                $this->session->set_flashdata('SuccessUpdateConmpanies', 'Company Record Update.');
                redirect(base_url('Mod/companies'));
            }
            
        }        
        
    }
    
    public function viewCompany($id = ''){
        
        $this->load->model('Mods');
        $campanyData = ($id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $id) : '';
        
        
        if (is_array($campanyData)) {
            $this->data['campanyData']             = $campanyData[0];
            
        } else {
            
            $this->session->set_flashdata('campanyDataError', 'Record Not Exists.');
            $this->data['campanyData'] = '';
            
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/companies/viewCompany', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function deleteCompany(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $campanyData = ($id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $id) : '';
        
        if (is_array($campanyData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'id', $table_name = 'companies');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;
        
    }
    
    public function companies(){

        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/companies/companies'); 
        $this->load->view('Mod/footer/footer'); 
        
    } 
     
    public function adminLoadCompaniesData() {

        $aColumns = array(
            "id", "company_name", "status", "created_at", "user_id"
        );

        $aColumns_for_sorting = array('id', 'company_name', 'status', 'created_at', "user_id");
        
        $aColumns_for_loop = array('company_name', 'status', 'created_at');

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "companies";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

//        echo "<pre>";
//        print_r($_GET);
//        print_r($aColumns_for_sorting);
//        die();

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }           
            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }                       
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();


                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['status'] = ($aRow['status']) ? 'Active' : 'In-Active';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $update = ($_SESSION['adminData']['Companies']['permission_update'] == 1) ? '<a href="' . base_url('Mod/editCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Companies']['permission_view'] == 1) ? '<a href="' . base_url('Mod/viewCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Companies']['permission_delete'] == 1 && $aRow['id'] != $_SESSION['adminData']['company_id'] ) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deleteCompany('.$aRow['id'].')" name="del" data-value="'.$aRow['id'].'"><i class="ti-trash"></i></<button>' : '';

            $row[] = $update . $view . $delete;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
    }

// Roles Modules starts from here     

    public function addRole(){
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/roles/addRole');                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function createRole(){
        
        if ($this->form_validation->run('addRole') == FALSE) {
            $this->addRole();
        } else {

            date_default_timezone_set('Europe/London');
            
            $roleData = array(
                

                'user_id'    => $_SESSION['adminData']['user_id'],
                'company_id' => $_SESSION['adminData']['company_id'],
                'role_name'         => $this->input->post('roleName'),
                'is_active'          => $this->input->post('status'),
                'created_at'        => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            $rolesInsert = $this->Mods->single_insert('roles', $roleData);
            
            if ($rolesInsert){
                
                $this->session->set_flashdata('SuccessRoles', 'Role Created.');
                redirect(base_url('Mod/roles'));
                
            }
        }        
        
        
    }
    
    public function editRole($id = ''){

        $this->load->model('Mods');
        $roleData = ($id) ? $this->Mods->getIdByName($table_name = 'roles', $condition = 'role_id', $id) : '';
        
        if (is_array($roleData)) {
            $this->data['roleData']             = $roleData[0];
        } else {
            $this->session->set_flashdata('roleDataError', 'Record Not Exists.');
            $this->data['roleData'] = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/roles/editRole', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function updateRole(){
        
    //companyid        
        
        $id = base64_decode($_POST['roleid']);
        
        if ($this->form_validation->run('updateRole') == FALSE) {
            $this->editRole($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $roleData = array(
                
                'role_name'    => $this->input->post('roleName'),
                'is_active'          => $this->input->post('status'),
                'updated_at'      => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updaterole = $this->Mods->update($table_name = 'roles', $conditionField = array('role_id' => $id), $roleId = $id, $data = $roleData);            
                
            if ($updaterole){
                $this->session->set_flashdata('SuccessUpdateRole', 'Role Record Update.');
                redirect(base_url('Mod/roles'));
            }
            
        }        
        
    }
    
    public function viewRole($id = ''){
        
        $this->load->model('Mods');
        $roleData = ($id) ? $this->Mods->getIdByName($table_name = 'roles', $condition = 'role_id', $id) : '';
        
        if (is_array($roleData)) {
            $this->data['roleData']             = $roleData[0];
        } else {
            $this->session->set_flashdata('roleDataError', 'Record Not Exists.');
            $this->data['roleData'] = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/roles/viewRole', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function deleteRole(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $roleData = ($id) ? $this->Mods->getIdByName($table_name = 'roles', $condition = 'role_id', $id) : '';
        
        if (is_array($roleData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'role_id', $table_name = 'roles');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;
        
    }
    
    public function roles(){

        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/roles/roles'); 
        $this->load->view('Mod/footer/footer'); 
        
    } 
     
    public function adminLoadRoleData() {

        $aColumns = array(
            "role_id", "role_name", "is_active", "created_at"
        );

        $aColumns_for_sorting = array('role_id', 'role_name', 'is_active', 'created_at');
        
        $aColumns_for_loop = array('role_name', 'is_active', 'created_at');

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "role_id";

        /* DB table to use */
        $sTable = "roles";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

//        echo "<pre>";
//        print_r($_GET);
//        print_r($aColumns_for_sorting);
//        die();

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
//            $sWhere .= "AND  id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND user_id='" . $user_id . "' AND company_id= '$company_id'";            
            
        }            
            
            
            $sWhere .=  "";
        } else {
//            $sWhere = "WHERE id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND user_id='" . $user_id . "' AND company_id= '$company_id'";            
            
        }            

            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();


                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['is_active'] = ($aRow['is_active']) ? 'Active' : 'In-Active';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }
            
            $update = ($_SESSION['adminData']['Roles']['permission_update'] == 1) ? '<a href="' . base_url('Mod/editRole/') . $aRow['role_id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Roles']['permission_view'] == 1) ? '<a href="' . base_url('Mod/viewRole/') . $aRow['role_id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Roles']['permission_delete'] == 1 && $aRow['role_id'] != $_SESSION['adminData']['userType']) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deleteRole(' . $aRow['role_id'] . ')" name="del" data-value="'.$aRow['role_id'].'"><i class="ti-trash"></i></<button>' : '';

            $row[] = $update . $view . $delete;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
    }

// Permissions Modules starts from here     

    public function addPermission(){
        
        $sortOrder = $this->db->query('select count(sort) as "Total" from permissions WHERE is_active = 1')->result();

        $this->data['sortOrder'] = $sortOrder[0]->Total + 1;

        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/permissions/addPermission', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function createPermission(){
  
        if ($this->form_validation->run('addPermission') == FALSE) {
            $this->addPermission();
        } else {

            date_default_timezone_set('Europe/London');
            
            $permissionsData = array(
                
                'user_id'    => $_SESSION['adminData']['user_id'],
                'company_id' => $_SESSION['adminData']['company_id'],
                'controller_name'       => $this->input->post('controllerName'),
                'action_name'           => $this->input->post('actionName'),
                'is_crud'               => $this->input->post('isCrud'),
                'sort'                  => $this->input->post('sortOrder'),
                'is_active'             => $this->input->post('status'),
                'created_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $permissionInsert = $this->Mods->single_insert('permissions', $permissionsData);
            
            if ($permissionInsert){
                
                $this->session->set_flashdata('SuccessPermission', 'permission Created.');
                redirect(base_url('Mod/permissions'));
                
            }
        }        
        
        
    }
    
    public function editPermission($id = ''){

        $this->load->model('Mods');
        $permissionData = ($id) ? $this->Mods->getIdByName($table_name = 'permissions', $condition = 'permission_id', $id) : '';
        
        if (is_array($permissionData)) {
            $this->data['permissionData'] = $permissionData[0];
        } else {
            $this->session->set_flashdata('permissionDataError', 'Record Not Exists.');
            $this->data['permissionData'] = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/permissions/editPermission', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function updatePermission(){
        
    //companyid  
    
        $id = base64_decode($_POST['permissionId']);
        
        if ($this->form_validation->run('updatePermission') == FALSE) {
            $this->editPermission($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $permissionData = array(
                
                'controller_name'       => $this->input->post('controllerName'),
                'action_name'           => $this->input->post('actionName'),
                'is_crud'               => $this->input->post('isCrud'),
                'sort'                  => $this->input->post('sortOrder'),
                'is_active'             => $this->input->post('status'),
                'updated_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updatePermission = $this->Mods->update($table_name = 'permissions', $conditionField = array('permission_id' => $id), $$permissionId = $id, $data = $permissionData);            
                
            if ($updatePermission){
                $this->session->set_flashdata('SuccessUpdatePermission', 'Permission Record Update.');
                redirect(base_url('Mod/permissions'));
            }
            
        }        
        
    }
    
    public function viewPermission($id = ''){
        
        $this->load->model('Mods');
        $permissionData = ($id) ? $this->Mods->getIdByName($table_name = 'permissions', $condition = 'permission_id', $id) : '';
        
        if (is_array($permissionData)) {
            $this->data['permissionData']             = $permissionData[0];
        } else {
            $this->session->set_flashdata('permissionDataError', 'Record Not Exists.');
            $this->data['permissionData'] = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/permissions/viewPermission', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function deletePermission(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $roleData = ($id) ? $this->Mods->getIdByName($table_name = 'permissions', $condition = 'permission_id', $id) : '';
        
        if (is_array($roleData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'permission_id', $table_name = 'permissions');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;
        
    }
    
    public function permissions(){

        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/permissions/permissions'); 
        $this->load->view('Mod/footer/footer'); 
        
    } 
     
    public function adminLoadPermissionData() {
        
        $aColumns = array(
            'permission_id', 'controller_name', 'action_name', 'is_crud', 'sort', 'is_active', 'created_at'
        );

        $aColumns_for_sorting = array('sort', 'permission_id', 'controller_name', 'action_name', 'is_crud', 'is_active', 'created_at');
        
        $aColumns_for_loop = array('controller_name', 'action_name', 'is_crud', 'sort', 'is_active', 'created_at');

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "sort";

        /* DB table to use */
        $sTable = "permissions";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */

        
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

//        echo "<pre>";
//        print_r($_GET);
//        print_r($aColumns_for_sorting);
//        die();

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND user_id='" . $user_id . "' AND company_id= '$company_id'";            
            
        }            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND user_id='" . $user_id . "' AND company_id= '$company_id'";            
            
        }            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;

        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;

//        echo "<pre>";
//        print_r($rResult);
//        die();
        
        foreach ($rResult as $aRow) {
            $row = array();

                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['is_active'] = ($aRow['is_active']) ? 'Active' : 'In-Active';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

        $deleteChecksSql = "SELECT * FROM `user_role` WHERE role_permission_id in (select permissions.permission_id FROM permissions ) and user_id = " . $_SESSION['adminData']['user_id'];            
        $deleteChecks = $this->db->query($deleteChecksSql)->result_array();            

        ($deleteChecks[0]['user_id'] != $_SESSION['adminData']['user_id']) ? 'selected' : '';
        
        
            $update = ($_SESSION['adminData']['Permissions']['permission_update'] == 1) ? '<a href="' . base_url('Mod/editPermission/') . $aRow['permission_id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Permissions']['permission_view'] == 1) ? '<a href="' . base_url('Mod/viewPermission/') . $aRow['permission_id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Permissions']['permission_delete'] == 1 && $deleteChecks[0]['user_id'] != $_SESSION['adminData']['user_id']) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deletePermission('.$aRow['permission_id'].')" name="del" data-value="'.$aRow['permission_id'].'"><i class="ti-trash"></i></<button>' : '';

            $row[] = $update . $view . $delete;
//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($deleteChecks);
//        die();
        echo json_encode($output);
        
    }
    
// Access Controlls Modules starts from here     
    
    public function getAjaxPermissions(){
        
        $controllerName = FALSE;
        $html           = FALSE;
        
//        $_POST['roleId'] = 3;
        
        if (isset($_POST['roleId'])){
            $roleID = $_POST['roleId'];
        }
        
        if (isset($_POST['seniro'])){
            $seniro = $_POST['seniro'];
        }
        
        if (isset($_POST['accessControlID'])){
            $accessControlID = $_POST['accessControlID'];
        }
        $roleID =1;
        $this->load->model('Mods');
        
        $sql = "";
        
        $sql .= "SELECT
                    permission_id,
                    controller_name,
                    action_name,
                    CONCAT(
                        controller_name,
                        ' | ',
                        action_name
                    ) AS 'permission_name'
                FROM
                    permissions
                WHERE
                    is_active = 1 AND permission_id NOT IN(
                    SELECT
                        role_permission.permission_id
                    FROM
                        role_permission
                    INNER JOIN roles ON role_permission.role_id = roles.role_id        
                    WHERE
                        roles.role_id = $roleID and role_permission.is_active = 1 and roles.is_active = 1 ";
        
        if ($seniro == "update"){
            $sql .= "and role_permission.id NOT IN ($accessControlID)";
        }
        
        $sql .=        ")
                ORDER BY
                    sort ASC";

        $data = $this->db->query($sql)->result();
        
        if ($data){
            
            $html .= "<option value=''>Select Permission</option>";
            
            foreach ($data as $perData){
                $html .= "<option value='$perData->permission_id'>$perData->permission_name</option>";
            }
            
        }else{
            $html .= "<option value=''>No Module Found</option>";            
        }
        
        echo $html;
        
    }
    
    protected function getperms($id, $seniro = "", $accessControlID = ""){
        
        if (isset($id)){
            $roleID = $id;
        }
        
        $this->load->model('Mods');
        
        $sql = "";
        
        $sql .= "SELECT
                    permission_id,
                    controller_name,
                    action_name,
                    CONCAT(
                        controller_name,
                        ' | ',
                        action_name
                    ) AS 'permission_name'
                FROM
                    permissions
                WHERE
                    is_active = 1 AND permission_id NOT IN(
                    SELECT
                        role_permission.permission_id
                    FROM
                        role_permission
                    INNER JOIN roles ON role_permission.role_id = roles.role_id        
                    WHERE
                        roles.role_id = $roleID and role_permission.is_active = 1 and roles.is_active = 1 ";
        
        if ($seniro == "update"){
            $sql .= "and role_permission.id NOT IN ($accessControlID)";
        }
        
        $sql .= ")
                ORDER BY
                    sort ASC";
        
        $data = $this->db->query($sql)->result();
        
        return $data;
        
    } 

    public function addAccessControl($roleId = ""){
        
        $this->data['roles']          = $this->getRole();
       // $roleId = 1;
        if ($roleId){
            $this->data['permissions']    = $this->getperms($roleId, $seniro = "insert", $accessControlID = "");
        }
        /*echo "<pre>";
        print_r($this->data['permissions']);
        die();*/
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/accessControl/addAccessControl', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function createAccessControl(){
  
        if ($this->form_validation->run('addAccessControl') == FALSE) {
            $this->addAccessControl($roleId = isset($_POST['role']) ? $_POST['role'] : '');
        } else {
            
            date_default_timezone_set('Europe/London');
            
            $accessControlData = array(
                
                'user_id'               => $_SESSION['adminData']['user_id'],
                'company_id'            => $_SESSION['adminData']['company_id'],                
                'role_id'               => $this->input->post('role'),
                'permission_id'         => $this->input->post('permission'),
                'permission_create'     => $this->input->post('permissionCreate'),
                'permission_update'     => $this->input->post('permissionUpdate'),
                'permission_view'       => $this->input->post('permissionView'),
                'permission_delete'     => $this->input->post('permissionDelete'),
                'is_active'             => $this->input->post('status'),
                'created_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $accessControlInsert = $this->Mods->single_insert('role_permission', $accessControlData);
            
            if ($accessControlInsert){
                
                $this->session->set_flashdata('SuccessAccessControlData', 'Access Control Created.');
                redirect(base_url('Mod/accessControls'));
                
            }
        }        
        
    }
    
    public function editAccessControl($id = ''){

        $this->load->model('Mods');
        $accessControlData = ($id) ? $this->Mods->getIdByName($table_name = 'role_permission', $condition = 'id', $id) : '';
        
        if (is_array($accessControlData)) {
            
            $this->data['roles']                = $this->getRole();            
            $this->data['permissions']          = $this->getperms($accessControlData[0]->role_id, $seniro = "update", $accessControlID = $accessControlData[0]->id);            
            $this->data['accessControlData']    = $accessControlData[0];
            
        } else {
            
            $this->session->set_flashdata('accessControlDataError', 'Record Not Exists.');
            $this->data['roles']                = "";            
            $this->data['permissions']          = "";             
            $this->data['accessControlData']    = "";
            
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/accessControl/editAccessControl', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function updateAccessControl(){
        
        $id = !empty(@$_POST['accessControlID']) ? @$_POST['accessControlID'] : $this->session->set_flashdata('accessControlDataError', 'Record Not Exists.');    
        
        if ($this->form_validation->run('updateAccessControl') == FALSE) {
            $this->editAccessControl($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $accessControlData = array(
                
                'role_id'               => $this->input->post('role'),
                'permission_id'         => $this->input->post('permission'),
                'permission_create'     => $this->input->post('permissionCreate'),
                'permission_update'     => $this->input->post('permissionUpdate'),
                'permission_view'       => $this->input->post('permissionView'),
                'permission_delete'     => $this->input->post('permissionDelete'),
                'is_active'             => $this->input->post('status'),
                'updated_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updateAccessControl = $this->Mods->update($table_name = 'role_permission', $conditionField = array('id' => $id), $permissionId = $id, $data = $accessControlData);            
                
            if ($updateAccessControl){
                $this->session->set_flashdata('SuccessUpdateAccessControl', 'Access Control Record Update.');
                redirect(base_url('Mod/accessControls'));
            }
            
        }        
        
    }
    
    public function viewAccessControl($id = ''){
        
        $this->load->model('Mods');
        
        $sql = "SELECT 
                    role_permission.id, 
                    roles.role_name, 
                    permissions.controller_name, 
                    permissions.action_name, 
                    permissions.is_crud, 
                    permissions.sort, 
                    role_permission.permission_create, 
                    role_permission.permission_update, 
                    role_permission.permission_view, 
                    role_permission.permission_delete, 
                    role_permission.is_active, 
                    role_permission.created_at 
                FROM 
                    role_permission 
                INNER JOIN 
                    roles 
                on 
                    role_permission.role_id = roles.role_id 
                INNER JOIN 
                    permissions 
                on 
                    role_permission.permission_id = permissions.permission_id where role_permission.id = $id";

        $accessControlData = $this->db->query($sql)->result();        
        
        if ($accessControlData) {
            $this->data['accessControlData'] = $accessControlData[0];
        } else {
            $this->session->set_flashdata('accessControlDataError', 'Record Not Exists.');
            $this->data['accessControlData'] = '';
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/accessControl/viewAccessControl', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function deleteAccessControl(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $rolePermissionData = ($id) ? $this->Mods->getIdByName($table_name = 'role_permission', $condition = 'id', $id) : '';
        
        if (is_array($rolePermissionData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'id', $table_name = 'role_permission');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;
        
    }
    
    public function accessControls(){

        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/accessControl/accessControl'); 
        $this->load->view('Mod/footer/footer'); 
        
    } 

    public function adminLoadAccessControlData() {

        $aColumns = array(

                        "role_permission.id",
                        "role_permission.user_id",
                        "role_permission.permission_id",
                        "role_permission.role_id",
                        "roles.role_name",
                        "permissions.controller_name",
                        "permissions.action_name",
//                        "permissions.is_crud",
//                        "permissions.sort",
//                        "role_permission.role_id",
//                        "role_permission.permission_id",
//                        "role_permission.permission_create",
//                        "role_permission.permission_update",
//                        "role_permission.permission_view",
//                        "role_permission.permission_delete",
                        "role_permission.is_active",
                        "role_permission.created_at"           
            
                    );

        $aColumns_for_sorting = array(

//                                    "role_permission.id",
                        "role_permission.role_id",            
                        "role_permission.user_id",            
                        "role_permission.permission_id",            
                                    "roles.role_name",
                                    "permissions.controller_name",
                                    "permissions.action_name",
//                                    "permissions.is_crud",
//                                    "permissions.sort",
//                                    "role_permission.role_id",
//                                    "role_permission.permission_id",
//                                    "role_permission.permission_create",
//                                    "role_permission.permission_update",
//                                    "role_permission.permission_view",
//                                    "role_permission.permission_delete",
                                    "role_permission.is_active",
                                    "role_permission.created_at"           
            
                                );
        
        $aColumns_for_loop = array(       
            
                                "role_name",
                                "controller_name",
                                "action_name",
//                                "is_crud",
//                                "sort",
//                                "permission_create",
//                                "permission_update",
//                                "permission_view",
//                                "permission_delete",
                                "is_active",
                                "created_at"           

                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "role_permission";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND  role_permission.user_id='" . $user_id . "' AND role_permission.company_id= '$company_id'";            
            
        }
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";

        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND  role_permission.user_id='" . $user_id . "' AND role_permission.company_id= '$company_id'";            
            
        }
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */

//        $sWhere = str_replace("companies.company_name AS 'cmp_name'", "companies.company_name", $sWhere);

        $joins = "  INNER JOIN roles on role_permission.role_id = roles.role_id
                    INNER JOIN permissions on role_permission.permission_id = permissions.permission_id ";
        
         $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;

        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );

        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            
        $row = array();

                $row[] = $x;
                
//                $aRow['is_crud']            = ($aRow['is_crud'] == 1) ? "Yes" : "No";
//                $aRow['permission_create']  = ($aRow['permission_create'] == 1) ? "Yes" : "No";
//                $aRow['permission_update']  = ($aRow['permission_update'] == 1) ? "Yes" : "No";
//                $aRow['permission_view']    = ($aRow['permission_view'] == 1) ? "Yes" : "No";
//                $aRow['permission_delete']  = ($aRow['permission_delete'] == 1) ? "Yes" : "No";
                $aRow['is_active']          = ($aRow['is_active'] == 1) ? "Active" : "In Active";
                $aRow['created_at']         = date("d-M-Y", strtotime($aRow['created_at']));
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            
            $deleteChecksSql = "select * from user_role WHERE role_permission_id = " . $aRow['permission_id'] . " and role_id =" . $aRow['role_id'];            
            $deleteChecks = $this->db->query($deleteChecksSql)->result_array();
            
            if(!empty($deleteChecks)){
                $deleteChecks = $deleteChecks[0]['user_id'];
            }else{
                $deleteChecks = 0;
            }
            
            
            $update = ($_SESSION['adminData']['Access Controls']['permission_update'] == 1) ? '<a title="Edit Access Control" style="padding: 0 0 0 0" href="' . base_url('Mod/editAccessControl/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Access Controls']['permission_view'] == 1) ? '<a title="View Access Control" style="padding: 0 0 0 0" href="' . base_url('Mod/viewAccessControl/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Access Controls']['permission_delete'] == 1 && $deleteChecks  != $_SESSION['adminData']['user_id']) ? '<button title="Delete Access Control" style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteAccessControl('.$aRow['id'].')" name="del" data-value="'.$aRow['id'].'"><i class="ti-trash"></i></button>' : '';

            $row[] = $update . $view . $delete;
            
            $output['aaData'][] = $row;
            $x++;

        }

        
        echo json_encode($output);
        
    }        
//HR mmodule @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/////
// HR modules are starts from here ........... 

    public function addHumanResource(){
        
        $this->headerV($this->title = "Add ");
        $this->load->view('Mod/hrmodule/addhHRmodule');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function createHumanResource(){
        
        if ($this->form_validation->run('addHRmodule') == FALSE) {
            $this->addHumanResource();
        } else {
            $fname        =  $this->input->post('firstName');
            $lname        =  $this->input->post('lastName');
            $au_id=$this->db->from("humanresources")->count_all_results();
            $flageerror     = 1;
            $hit_message    = "";
            
            $lead_id = $au_id+1;
            $lead_id = $lead_id."_".uniqid();  
            $full_name      = $fname." ".$lname;
            
            ini_set('memory_limit', '-1');
            ini_set('upload_max_size', '200M');
            ini_set('post_max_size', '200M');
            ini_set('upload_max_filesize', '200M');
            ini_set('max_execution_time', '300');
            ini_set('max_input_time', '1000');
            date_default_timezone_set('Europe/London');
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            
            $errors         = array();
            $file_names     = array();
            /*$fCNICFrontSide         = $this->input->post('CNICFrontSide');
            $fCNICBackSide          = $this->input->post('CNICBackSide');
            $fdocfile1              = $this->input->post('docfile1');
            $fdocfile2              = $this->input->post('docfile2');*/
            
            if (@$_FILES['CNICFrontSide']['name']){
                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['CNICFrontSide']['error'] == 4){
                    }else{

                        if (!in_array($_FILES['CNICFrontSide']['type'], $allowedTypes)) {
                            $errors['CNICFrontSide'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }
                    }

                }

            if (@$_FILES['CNICBackSide']['name']){
                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['CNICBackSide']['error'] == 4){
                    }else{
                        if (!in_array($_FILES['CNICBackSide']['type'], $allowedTypes)) {
                            $errors['CNICBackSide'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }
                    }
                }

            if (@$_FILES['docfile1']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['docfile1']['error'] == 4){
                    }
                        if (!in_array($_FILES['docfile1']['type'], $allowedTypes)) {
                            $errors['docfile1'] = 'Only Documents file for upload.';
                        }
                }
            if (@$_FILES['docfile2']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['docfile2']['error'] == 4){
                    }
                        if (!in_array($_FILES['docfile2']['type'], $allowedTypes)) {
                            $errors['docfile2'] = 'Only Documents file for upload.';
                        }
                }
                
            if (count($errors) == 0 ){
                $flageerror =   1;
                    if ($_FILES['CNICFrontSide']['name']){
                        $tenancy_agreement_upload_dir            = 'uploads/HR-Documents/';
                        $ext                                     = '.' . pathinfo($_FILES['CNICBackSide']['name'], PATHINFO_EXTENSION);
                        $file_names['CNICFrontSide']['org_name']    = "front_" . $lead_id . "_" . time() . $ext;
                        /*$src                                     = $tenancy_agreement_upload_dir . $file_names['CNICFrontSide']['org_name'];
                        $file_names['CNICFrontSide']['thumb_name']  = "front_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['CNICFrontSide']['thumb_name'];
                        $desired_width                         = "250";  */    
                        move_uploaded_file($_FILES['CNICFrontSide']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['CNICFrontSide']['org_name']);
                        //$this->make_thumb($src, $dest, $desired_width);                
                    }else{
                        $file_names['CNICFrontSide']['org_name']    = "";
                        $file_names['CNICFrontSide']['thumb_name']  = "";
                    }
                    if ($_FILES['CNICBackSide']['name']){
                        $tenancy_agreement_upload_dir            = 'uploads/HR-Documents/';
                        $ext                                     = '.' . pathinfo($_FILES['CNICBackSide']['name'], PATHINFO_EXTENSION);
                        $file_names['CNICBackSide']['org_name']    = "back_" . $lead_id . "_" . time() . $ext;
                       /* $src                                     = $tenancy_agreement_upload_dir . $file_names['CNICBackSide']['org_name'];
                        $file_names['CNICBackSide']['thumb_name']  = "CNICBackSide_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['CNICBackSide']['thumb_name'];
                        $desired_width                           = "250";    */
                        move_uploaded_file($_FILES['CNICBackSide']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['CNICBackSide']['org_name']);            
                    }else{
                        $file_names['CNICBackSide']['org_name']    = "";
                        $file_names['CNICBackSide']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['docfile1']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['docfile1']['name'], PATHINFO_EXTENSION);
                        $file_names['docfile1']['org_name']    = "docfile1" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['docfile1']['org_name'];
                        move_uploaded_file($_FILES['docfile1']['tmp_name'], $other_upload_dir . $file_names['docfile1']['org_name']);
                       
                    }else{
                        $file_names['docfile2']['org_name']    = "";
                    }
                    if ($_FILES['docfile2']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['docfile2']['name'], PATHINFO_EXTENSION);
                        $file_names['docfile2']['org_name']    = "docfile2" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['docfile2']['org_name'];
                        move_uploaded_file($_FILES['docfile2']['tmp_name'], $other_upload_dir . $file_names['docfile2']['org_name']);
                       
                    }else{
                        $file_names['docfile2']['org_name']    = "";
                    }
                    
                $file_cnic_front             = ($file_names['CNICFrontSide']['org_name']) ? $file_names['CNICFrontSide']['org_name'] : NULL;
                /*$file_cnic_front_thumb_name  = ($file_names['CNICFrontSide']['thumb_name']) ? $file_names['CNICFrontSide']['thumb_name'] : NULL;*/
                $file_cnic_back              = ($file_names['CNICBackSide']['org_name']) ? $file_names['CNICBackSide']['org_name'] : NULL;
                /*$file_cnic_back_thumb_name   = ($file_names['CNICBackSide']['thumb_name']) ? $file_names['CNICBackSide']['thumb_name'] : NULL;*/
                $file_docfile1               = ($file_names['docfile1']['org_name']) ? $file_names['docfile1']['org_name'] : NULL;
                $file_docfile2               = ($file_names['docfile2']['org_name']) ? $file_names['docfile2']['org_name'] : NULL;  
                }else{
                    $flageerror =   0;
                    $this->session->set_flashdata('file_errors', $errors);
                }
           
            $userID         = $_SESSION['adminData']['user_id'];
            $source = "HR";

            if($file_cnic_front || $file_cnic_back || $file_docfile1 || $file_docfile2){
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>JkOHRGJOPhQlcHD9Zl9tc3WDCbWoeNGE</key>
                                    <leadgroup>51277</leadgroup>
                                    <site></site>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $source . "</source>
                                    <medium>" . $source . "</medium>
                                    <title>" . $this->input->post('title') . "</title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $this->input->post('Company'). "</company>
                                    <jobtitle>" . $this->input->post('jobtitle') . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('empaddress2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('EmploymentStartDate') . "</data1>
                                    <data2>" . $this->input->post('Notes') . "</data2>
                                    <data3>" . $this->input->post('CentreName') . "</data3>
                                    <data4>" . $this->input->post('Employmentcontrcattype') . "</data4>
                                    <data5>" . $this->input->post('AnnualSalary') . "</data5>
                                    <data6>" . $this->input->post('NextofKIn') . "</data6>
                                    <data7>" . $this->input->post('NextofKinTelephonenumber') . "</data7>
                                    <data8>" . $this->input->post('NextofKinRelationship') . "</data8>
                                    <data9>" . $this->input->post('EmergencyContact') . "</data9>
                                    <data10>" . $this->input->post('EmergencyContactRelationship') . "</data10>
                                    <data11>" . $this->input->post('GPDetails') . "</data11>
                                    <data12>" . $this->input->post('AccountName') . "</data12>
                                    <data13>" . $this->input->post('BankName') . "</data13>
                                    <data14>" . $this->input->post('BankAccountNumber') . "</data14>
                                    <data15>" . $this->input->post('BankSortCode') . "</data15>
                                    <data16>" . $this->input->post('NationalInsuranceNumber') . "</data16>
                                    <data17>" . $this->input->post('CurrentTaxCode') . "</data17>
                                  </lead>
                                </data>";
             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            curl_close($ch);
            $outputArray = json_decode($json, TRUE);
                
            }else{
                 $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>JkOHRGJOPhQlcHD9Zl9tc3WDCbWoeNGE</key>
                                    <leadgroup>51277</leadgroup>
                                    <site>0</site>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $source . "</source>
                                    <medium>" . $source . "</medium>
                                    <title>" . $this->input->post('title') . "</title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $this->input->post('Company'). "</company>
                                    <jobtitle>" . $this->input->post('jobtitle') . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('empaddress2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('EmploymentStartDate') . "</data1>
                                    <data2>" . $this->input->post('Notes') . "</data2>
                                    <data3>" . $this->input->post('CentreName') . "</data3>
                                    <data4>" . $this->input->post('Employmentcontrcattype') . "</data4>
                                    <data5>" . $this->input->post('AnnualSalary') . "</data5>
                                    <data6>" . $this->input->post('NextofKIn') . "</data6>
                                    <data7>" . $this->input->post('NextofKinTelephonenumber') . "</data7>
                                    <data8>" . $this->input->post('NextofKinRelationship') . "</data8>
                                    <data9>" . $this->input->post('EmergencyContact') . "</data9>
                                    <data10>" . $this->input->post('EmergencyContactRelationship') . "</data10>
                                    <data11>" . $this->input->post('GPDetails') . "</data11>
                                    <data12>" . $this->input->post('AccountName') . "</data12>
                                    <data13>" . $this->input->post('BankName') . "</data13>
                                    <data14>" . $this->input->post('BankAccountNumber') . "</data14>
                                    <data15>" . $this->input->post('BankSortCode') . "</data15>
                                    <data16>" . $this->input->post('NationalInsuranceNumber') . "</data16>
                                    <data17>" . $this->input->post('CurrentTaxCode') . "</data17>
                                  </lead>
                                </data>";
             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            curl_close($ch);
            $outputArray = json_decode($json, TRUE);
            }
            if ($hit_message == 'OK') {
                $HRData = array(
                'tittle'                            => $this->input->post('title'), 
                'first_name'                        => $this->input->post('firstName'), 
                'last_name'                         => $this->input->post('lastName'), 
                'full_name'                         => $full_name, 
                'phone1'                            => $this->input->post('phone1'), 
                'phone2'                            => $this->input->post('phone2'), 
                'email'                             => $this->input->post('email'), 
                'address'                           => $this->input->post('address'), 
                'addres2'                           => $this->input->post('empaddress2'), 
                'address3'                          => $this->input->post('address3'), 
                'towncity'                          => $this->input->post('towncity'), 
                'company'                           => $this->input->post('Company'), 
                'postcode'                          => $this->input->post('postcode'),  
                'dateofbirth'                       => $this->input->post('dateOfBirth'), 
                'contactphone'                      => $this->input->post('contactphone'), 
                'contactsms'                        => $this->input->post('contactsms'), 
                'contactemail'                      => $this->input->post('contactemail'), 
                'contactmail'                       => $this->input->post('contactmail'), 
                'contactfax'                        => $this->input->post('contactfax'), 
                'contacttime'                       => $this->input->post('contacttime'), 
                'EmploymentStartDate'               => $this->input->post('EmploymentStartDate'), 
                'CentreName'                        => $this->input->post('CentreName'), 
                'Notes'                             => $this->input->post('Notes'), 
                'Employmentcontrcattype'            => $this->input->post('Employmentcontrcattype'), 
                'AnnualSalary'                      => $this->input->post('AnnualSalary'), 
                'NextofKIn'                         => $this->input->post('NextofKIn'), 
                'NextofKinTelephonenumber'          => $this->input->post('NextofKinTelephonenumber'), 
                'NextofKinRelationship'             => $this->input->post('NextofKinRelationship'), 
                'EmergencyContact'                  => $this->input->post('EmergencyContact'), 
                'EmergencyContactRelationship'      => $this->input->post('EmergencyContactRelationship'), 
                'GPDetails'                         => $this->input->post('GPDetails'), 
                'BankName'                          => $this->input->post('BankName'), 
                'BankAccountNumber'                 => $this->input->post('BankAccountNumber'), 
                'BankSortCode'                      => $this->input->post('BankSortCode'), 
                'NationalInsuranceNumber'           => $this->input->post('NationalInsuranceNumber'), 
                'CurrentTaxCode'                    => $this->input->post('CurrentTaxCode'), 
                'CNICFrontSide'                     => $file_cnic_front, 
               /* 'CNICFrontSide_thum'                => $file_cnic_front_thumb_name,  */
                'CNICBackSide'                      => $file_cnic_back,
                /*'CNICBackSide_thum'                 => $file_cnic_back_thumb_name,*/
                'Other_doc1'                        => $file_docfile1,
                'Other_doc2'                        => $file_docfile2,
                'status'                            => $this->input->post('status'),
                'flg_ccj'                           => $lead_id,
                'created_at'                        => date('Y-m-d H:i:s') 
            );
            //ini_set('display_errors', 1);
            $this->load->model('Mods');
            $HR = $this->Mods->single_insert('humanresources', $HRData);
                if ($HR){    
                    $this->session->set_flashdata('SuccessHR', 'New HR Created.');
                    redirect(base_url('Mod/manageHumanResource'));
                }else{
                    $this->session->set_flashdata('SuccessHR', 'Couldent Created.');
                    redirect(base_url('Mod/addHumanResource'));
                }                
            }else{
                redirect(base_url("Mod/addHumanResource"));
            }   
        }        
        
    }
    
    public function editHumanResource($id){
        
        $this->load->model('Mods');
        $HRData = ($id) ? $this->Mods->getIdByName($table_name = 'humanresources', $condition = 'id', $id) : '';

        if (is_array($HRData)) {
            
            $this->data['humanresource'] = $HRData[0];            
           /* echo "<pre>";
            print_r($this->data['humanresource']);
            die();*/
        } else {
            
            $this->session->set_flashdata('HRDataError', 'Record Not Exists.');
            $this->data['humanresource'] = "";
            
        }
        
        $this->headerV($this->title = "Edit HR");
        $this->load->view('Mod/hrmodule/editHRmodule', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function updateHumanResource(){
        date_default_timezone_set('Europe/London');
        $id = !empty(@$_POST['id']) ? @base64_decode($this->input->post('id')) : $this->session->set_flashdata('HRDataError', 'Record Not Exists.');  
        
       
        if ($this->form_validation->run('EditHRmodule') == FALSE) {
            $this->editHumanResource($id);
        } else {
            $HRData = ($id) ? $this->Mods->getIdByName($table_name = 'humanresources', $condition = 'id', $id) : '';
            $source = "HR";
            $fname        =  $this->input->post('firstName');
            $lname        =  $this->input->post('lastName');
            $full_name    = $fname." ".$lname;
            $flg_exisit_id = $HRData[0]->flg_ccj;
            /*sss*/
            
            if($flg_exisit_id != NULL){
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                <lead>
                                    <key>JkOHRGJOPhQlcHD9Zl9tc3WDCbWoeNGE</key>
                                    <id>".$flg_exisit_id."</id>
                                    <source>" . $source . "</source>
                                    <medium>" . $source . "</medium>
                                    <title>" . $this->input->post('title') . "</title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $this->input->post('Company'). "</company>
                                    <jobtitle>" . $this->input->post('jobtitle') . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('empaddress2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('EmploymentStartDate') . "</data1>
                                    <data2>" . $this->input->post('Notes') . "</data2>
                                    <data3>" . $this->input->post('CentreName') . "</data3>
                                    <data4>" . $this->input->post('Employmentcontrcattype') . "</data4>
                                    <data5>" . $this->input->post('AnnualSalary') . "</data5>
                                    <data6>" . $this->input->post('NextofKIn') . "</data6>
                                    <data7>" . $this->input->post('NextofKinTelephonenumber') . "</data7>
                                    <data8>" . $this->input->post('NextofKinRelationship') . "</data8>
                                    <data9>" . $this->input->post('EmergencyContact') . "</data9>
                                    <data10>" . $this->input->post('EmergencyContactRelationship') . "</data10>
                                    <data11>" . $this->input->post('GPDetails') . "</data11>
                                    <data12>" . $this->input->post('AccountName') . "</data12>
                                    <data13>" . $this->input->post('BankName') . "</data13>
                                    <data14>" . $this->input->post('BankAccountNumber') . "</data14>
                                    <data15>" . $this->input->post('BankSortCode') . "</data15>
                                    <data16>" . $this->input->post('NationalInsuranceNumber') . "</data16>
                                    <data17>" . $this->input->post('CurrentTaxCode') . "</data17>
                                  </lead>
                                </data>";
             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            curl_close($ch);
            $outputArray = json_decode($json, TRUE);  
            }
            else{
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>JkOHRGJOPhQlcHD9Zl9tc3WDCbWoeNGE</key>
                                    <leadgroup>51277</leadgroup>
                                    <site></site>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $source . "</source>
                                    <medium>" . $source . "</medium>
                                    <title>" . $this->input->post('title') . "</title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $this->input->post('Company'). "</company>
                                    <jobtitle>" . $this->input->post('jobtitle') . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('empaddress2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('EmploymentStartDate') . "</data1>
                                    <data2>" . $this->input->post('Notes') . "</data2>
                                    <data3>" . $this->input->post('CentreName') . "</data3>
                                    <data4>" . $this->input->post('Employmentcontrcattype') . "</data4>
                                    <data5>" . $this->input->post('AnnualSalary') . "</data5>
                                    <data6>" . $this->input->post('NextofKIn') . "</data6>
                                    <data7>" . $this->input->post('NextofKinTelephonenumber') . "</data7>
                                    <data8>" . $this->input->post('NextofKinRelationship') . "</data8>
                                    <data9>" . $this->input->post('EmergencyContact') . "</data9>
                                    <data10>" . $this->input->post('EmergencyContactRelationship') . "</data10>
                                    <data11>" . $this->input->post('GPDetails') . "</data11>
                                    <data12>" . $this->input->post('AccountName') . "</data12>
                                    <data13>" . $this->input->post('BankName') . "</data13>
                                    <data14>" . $this->input->post('BankAccountNumber') . "</data14>
                                    <data15>" . $this->input->post('BankSortCode') . "</data15>
                                    <data16>" . $this->input->post('NationalInsuranceNumber') . "</data16>
                                    <data17>" . $this->input->post('CurrentTaxCode') . "</data17>
                                  </lead>
                                </data>";
             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            curl_close($ch);
            $outputArray = json_decode($json, TRUE);
                
            }
             if ($hit_message == 'OK') {
                $HRData = array(
                'tittle'                            => $this->input->post('title'), 
                'first_name'                        => $this->input->post('firstName'), 
                'last_name'                         => $this->input->post('lastName'), 
                'full_name'                         => $full_name, 
                'phone1'                            => $this->input->post('phone1'), 
                'phone2'                            => $this->input->post('phone2'), 
                'email'                             => $this->input->post('email'), 
                'address'                           => $this->input->post('address'), 
                'addres2'                           => $this->input->post('empaddress2'), 
                'address3'                          => $this->input->post('address3'), 
                'towncity'                          => $this->input->post('towncity'), 
                'company'                           => $this->input->post('Company'), 
                'jobtitle'                           => $this->input->post('jobtitle'), 
                'postcode'                          => $this->input->post('postcode'),  
                'dateofbirth'                       => $this->input->post('dateOfBirth'), 
                'contactphone'                      => $this->input->post('contactphone'), 
                'contactsms'                        => $this->input->post('contactsms'), 
                'contactemail'                      => $this->input->post('contactemail'), 
                'contactmail'                       => $this->input->post('contactmail'), 
                'contactfax'                        => $this->input->post('contactfax'), 
                'contacttime'                       => $this->input->post('contacttime'), 
                'EmploymentStartDate'               => $this->input->post('EmploymentStartDate'), 
                'CentreName'                        => $this->input->post('CentreName'), 
                'Notes'                             => $this->input->post('Notes'), 
                'Employmentcontrcattype'            => $this->input->post('Employmentcontrcattype'), 
                'AnnualSalary'                      => $this->input->post('AnnualSalary'), 
                'NextofKIn'                         => $this->input->post('NextofKIn'), 
                'NextofKinTelephonenumber'          => $this->input->post('NextofKinTelephonenumber'), 
                'NextofKinRelationship'             => $this->input->post('NextofKinRelationship'), 
                'EmergencyContact'                  => $this->input->post('EmergencyContact'), 
                'EmergencyContactRelationship'      => $this->input->post('EmergencyContactRelationship'), 
                'GPDetails'                         => $this->input->post('GPDetails'), 
                'BankName'                          => $this->input->post('BankName'), 
                'BankAccountNumber'                 => $this->input->post('BankAccountNumber'), 
                'BankSortCode'                      => $this->input->post('BankSortCode'), 
                'NationalInsuranceNumber'           => $this->input->post('NationalInsuranceNumber'), 
                'CurrentTaxCode'                    => $this->input->post('CurrentTaxCode'), 
                /*'CNICFrontSide'                     => $file_cnic_front, */
               /* 'CNICFrontSide_thum'                => $file_cnic_front_thumb_name,  */
               /* 'CNICBackSide'                      => $file_cnic_back,*/
                /*'CNICBackSide_thum'                 => $file_cnic_back_thumb_name,*/
               /* 'Other_doc1'                        => $file_docfile1,*/
               /* 'Other_doc2'                        => $file_docfile2,*/
                'status'                            => $this->input->post('status'),
                'flg_ccj'                           => $lead_id,
                'created_at'                        => date('Y-m-d H:i:s') 
            );
                $this->load->model('Mods');            
    $updateHR = $this->Mods->update($table_name = 'humanresources', $conditionField = array('id' => $id), $permissionId = $id, $data = $HRData); 
            }       
                
            if ($updateHR){
                $this->session->set_flashdata('SuccessUpdateHR', 'HR Record Update.');
                redirect(base_url('Mod/manageHumanResource'));
            }else{
                $this->session->set_flashdata('HRDataError', 'HR Update.Might be due to FLG ');
                /*echo "helo";
                print_r($output);
                die();*/
                $this->editHumanResource($id);
            }
            
        }        

        
    }
    
    public function viewHumanResource($id){
        
        $this->load->model('Mods');
        $HRData = ($id) ? $this->Mods->getIdByName($table_name = 'humanresources', $condition = 'id', $id) : '';
        
        if (is_array($HRData)) {
            $this->data['humanresources'] = $HRData[0];         
           /* echo "<pre>";
            print_r($this->data['HR']);
            die();*/
        } else {
            $this->session->set_flashdata('HRDataError', 'Record Not Exists.');
            
            $this->data['humanresources'] = "";
        }
        /*$this->load->model('Mods');
        $campaignData = ($id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $id) : '';
        
        if (is_array($campaignData)) {
            $this->data['campaign'] = $campaignData[0];            
        } else {
            $this->session->set_flashdata('campaignDataError', 'Record Not Exists.');
            $this->data['campaign'] = "";
        }*/
        
        $this->headerV($this->title = "Edit HR");
        $this->load->view('Mod/hrmodule/viewHRmodule', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function updateHumanResourceDocs(){
        /*echo "Hello";
        die();*/
         date_default_timezone_set('Europe/London');
        $id = !empty(@$_POST['id']) ? @base64_decode($this->input->post('id')) : $this->session->set_flashdata('HRDataError', 'Record Not Exists.');  
        
        $HRData = ($id) ? $this->Mods->getIdByName($table_name = 'humanresources', $condition = 'id', $id) : '';
       /* echo "<pre>";
        print_r($HRData);
        die();
        */
        
            $au_id  =   $HRData[0]->id;
            $lead_id = $au_id+1;
            $lead_id = $lead_id."_".uniqid();  
            ini_set('memory_limit', '-1');
            ini_set('upload_max_size', '200M');
            ini_set('post_max_size', '200M');
            ini_set('upload_max_filesize', '200M');
            ini_set('max_execution_time', '300');
            ini_set('max_input_time', '1000');
            
            $errors         = array();
            $file_names     = array();
        /*echo "<pre>";
        print_r($HRData);
        die();*/
            /*$fCNICFrontSide         = $this->input->post('CNICFrontSide');
            $fCNICBackSide          = $this->input->post('CNICBackSide');
            $fdocfile1              = $this->input->post('docfile1');
            $fdocfile2              = $this->input->post('docfile2');*/
            
            if (@$_FILES['CNICFrontSide']['name']){
                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['CNICFrontSide']['error'] == 4){
                    }else{

                        if (!in_array($_FILES['CNICFrontSide']['type'], $allowedTypes)) {
                            $errors['CNICFrontSide'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }
                    }

                }

            if (@$_FILES['CNICBackSide']['name']){
                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['CNICBackSide']['error'] == 4){
                    }else{
                        if (!in_array($_FILES['CNICBackSide']['type'], $allowedTypes)) {
                            $errors['CNICBackSide'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }
                    }
                }

            if (@$_FILES['docfile1']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['docfile1']['error'] == 4){
                    }
                        if (!in_array($_FILES['docfile1']['type'], $allowedTypes)) {
                            $errors['docfile1'] = 'Only Documents file for upload.';
                        }
                }
            if (@$_FILES['docfile2']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    if ($_FILES['docfile2']['error'] == 4){
                    }
                        if (!in_array($_FILES['docfile2']['type'], $allowedTypes)) {
                            $errors['docfile2'] = 'Only Documents file for upload.';
                        }
                }
                
            if (count($errors) == 0 ){
                $flageerror =   1;
                    if ($_FILES['CNICFrontSide']['name']){
                        $tenancy_agreement_upload_dir            = 'uploads/HR-Documents/';
                        $ext                                     = '.' . pathinfo($_FILES['CNICBackSide']['name'], PATHINFO_EXTENSION);
                        $file_names['CNICFrontSide']['org_name']    = "front_" . $lead_id . "_" . time() . $ext;
                        /*$src                                     = $tenancy_agreement_upload_dir . $file_names['CNICFrontSide']['org_name'];
                        $file_names['CNICFrontSide']['thumb_name']  = "front_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['CNICFrontSide']['thumb_name'];
                        $desired_width                         = "250";  */    
                        move_uploaded_file($_FILES['CNICFrontSide']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['CNICFrontSide']['org_name']);
                        //$this->make_thumb($src, $dest, $desired_width);                
                    }else{
                        $file_names['CNICFrontSide']['org_name']    = "";
                        $file_names['CNICFrontSide']['thumb_name']  = "";
                    }
                    if ($_FILES['CNICBackSide']['name']){
                        $tenancy_agreement_upload_dir            = 'uploads/HR-Documents/';
                        $ext                                     = '.' . pathinfo($_FILES['CNICBackSide']['name'], PATHINFO_EXTENSION);
                        $file_names['CNICBackSide']['org_name']    = "back_" . $lead_id . "_" . time() . $ext;
                       /* $src                                     = $tenancy_agreement_upload_dir . $file_names['CNICBackSide']['org_name'];
                        $file_names['CNICBackSide']['thumb_name']  = "CNICBackSide_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['CNICBackSide']['thumb_name'];
                        $desired_width                           = "250";    */
                        move_uploaded_file($_FILES['CNICBackSide']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['CNICBackSide']['org_name']);            
                    }else{
                        $file_names['CNICBackSide']['org_name']    = "";
                        $file_names['CNICBackSide']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['docfile1']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['docfile1']['name'], PATHINFO_EXTENSION);
                        $file_names['docfile1']['org_name']    = "docfile1" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['docfile1']['org_name'];
                        move_uploaded_file($_FILES['docfile1']['tmp_name'], $other_upload_dir . $file_names['docfile1']['org_name']);
                       
                    }else{
                        $file_names['docfile2']['org_name']    = "";
                    }
                    if ($_FILES['docfile2']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['docfile2']['name'], PATHINFO_EXTENSION);
                        $file_names['docfile2']['org_name']    = "docfile2" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['docfile2']['org_name'];
                        move_uploaded_file($_FILES['docfile2']['tmp_name'], $other_upload_dir . $file_names['docfile2']['org_name']);
                       
                    }else{
                        $file_names['docfile2']['org_name']    = "";
                    }
                    
                $file_cnic_front             = ($file_names['CNICFrontSide']['org_name']) ? $file_names['CNICFrontSide']['org_name'] : NULL;
                /*$file_cnic_front_thumb_name  = ($file_names['CNICFrontSide']['thumb_name']) ? $file_names['CNICFrontSide']['thumb_name'] : NULL;*/
                $file_cnic_back              = ($file_names['CNICBackSide']['org_name']) ? $file_names['CNICBackSide']['org_name'] : NULL;
                /*$file_cnic_back_thumb_name   = ($file_names['CNICBackSide']['thumb_name']) ? $file_names['CNICBackSide']['thumb_name'] : NULL;*/
                $file_docfile1               = ($file_names['docfile1']['org_name']) ? $file_names['docfile1']['org_name'] : NULL;
                $file_docfile2               = ($file_names['docfile2']['org_name']) ? $file_names['docfile2']['org_name'] : NULL;  
                }else{
                    $flageerror =   0;
                    $this->session->set_flashdata('file_errors', $errors);
                }
        //$HRData  = array();
        $this->load->model('Mods');   
           if(!empty($file_cnic_front)){
               $HRData = array(
                    'CNICFrontSide'                     => $file_cnic_front 
               );         
                $updateHR = $this->Mods->update($table_name = 'humanresources', $conditionField = array('id' => $id), $permissionId = $id, $data = $HRData); 
           }
            if(!empty($file_cnic_back)){
               $HRData = array(
                    'CNICBackSide'                     => $file_cnic_back 
               );
                $updateHR = $this->Mods->update($table_name = 'humanresources', $conditionField = array('id' => $id), $permissionId = $id, $data = $HRData); 
           }
            if(!empty($file_docfile1)){
               $HRData = array(
                    'Other_doc1'                     => $file_docfile1 
               );
               $updateHR = $this->Mods->update($table_name = 'humanresources', $conditionField = array('id' => $id), $permissionId = $id, $data = $HRData); 
           }
            if(!empty($file_docfile2)){
               $HRData = array(
                    'Other_doc2'                     => $file_docfile2 
               );
                $updateHR = $this->Mods->update($table_name = 'humanresources', $conditionField = array('id' => $id), $permissionId = $id, $data = $HRData); 
           }
        if ($updateHR){
                $this->session->set_flashdata('Success_Leads_documents', 'HR Record Update.');
            /*echo "Hlooe";
            die();*/
                /*redirect(base_url('Mod/editHumanResource'));*/
            redirect(base_url("Mod/manageHumanResource"));  
            /*echo "Hlooe";
            die();*/
            }else{
            $this->session->set_flashdata('HRDataError', 'Record Not Not Updated.');  
            $this->editHumanResource($id);
           /* redirect(base_url("Mod/viewHumanResource")); */
            /*echo "viewdie";
            die();*/
        }
        
        
    }
    
    public function deleteHumanResource(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $HRData = ($id) ? $this->Mods->getIdByName($table_name = 'humanresources', $condition = 'id', $id) : '';
        
        if (is_array($HRData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'id', $table_name = 'humanresources');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;
        
    }
    
    public function manageHumanResource(){
        
        $this->headerV($this->title = "Manage HR");
        $this->load->view('Mod/hrmodule/HRmodule');
        $this->load->view('Mod/footer/footer');
        
    }
     public function adminLoadHR() {

        $aColumns = array(
            "id", "tittle", "full_name", "AnnualSalary", "BankSortCode", "BankAccountNumber", "phone1", "email", "status", "created_at" 
        );

        $aColumns_for_sorting = array("id", "tittle", "full_name", "last_name", "phone1", "email", "status", "created_at" );
        
        $aColumns_for_loop = array("tittle", "full_name", "CentreName", "AnnualSalary", "BankSortCode", "BankAccountNumber", "phone1", "email", "status", "created_at");

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "humanresources";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }

        /*0
         * Ordering
         */
        
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";


        /*if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }  */         
            
            
            $sWhere .=  "";
       /* } else {
            
            $sWhere = "WHERE id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        } */                      
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();


                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['status'] = ($aRow['status']) ? 'Active' : 'In-Active';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $update = (1 == 1) ? '<a href="' . base_url('Mod/editHumanResource/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = (1 == 1) ? '<a href="' . base_url('Mod/viewHumanResource/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['HumanResource']['permission_delete'] == 1 ) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deleteHR('.$aRow['id'].')" name="del" data-value="'.$aRow['id'].'"><i class="ti-trash"></i></<button>' : '';
            $upload_doc = (1 == 1) ? '<a href="' . base_url('Mod/editHumanResource/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';

            $row[] = $update . $view . $delete;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
        /*echo "<pre>";
        print_r($output);*/
        
        echo json_encode($output);
    }
//HR module    
    
// Campaigns modules are starts from here ........... 

    public function addCampaign(){
        
        $this->headerV($this->title = "Add Campaign");
        $this->load->view('Mod/campaign/addCampaign');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function createCampaign(){
        
        if ($this->form_validation->run('addCampaign') == FALSE) {
            $this->addCampaign();
        } else {
            
            date_default_timezone_set('Europe/London');
            
            $campaignData = array(
                
                'user_id'               => $_SESSION['adminData']['user_id'],
                'company_id'            => $_SESSION['adminData']['company_id'],                
                'campaign_name'         => $this->input->post('campaign_name'),
                'campaign_short_name'   => $this->input->post('campaign_short_name'),
                'campaign_status'       => $this->input->post('status'),
                'created_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $campaign = $this->Mods->single_insert('campaign', $campaignData);
            
            if ($campaign){
                
                $this->session->set_flashdata('Successcampaigns', 'New Campaign Created.');
                redirect(base_url('Mod/manageCampaign'));
                
            }
            
        }        
        
    }
    
    public function editCampaign($id){
        
        $this->load->model('Mods');
        $campaignData = ($id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $id) : '';

        if (is_array($campaignData)) {
            
            $this->data['campaign'] = $campaignData[0];            
            
        } else {
            
            $this->session->set_flashdata('campaignDataError', 'Record Not Exists.');
            $this->data['campaign'] = "";
            
        }
        
        $this->headerV($this->title = "Edit Campaign");
        $this->load->view('Mod/campaign/editCampaign', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function updateCampaign(){
        
        $id = !empty(@$_POST['campaign_id']) ? @base64_decode($this->input->post('campaign_id')) : $this->session->set_flashdata('campaignDataError', 'Record Not Exists.');    
        
        if ($this->form_validation->run('updateCampaign') == FALSE) {
            $this->editCampaign($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $campaignData = array(
                
                'campaign_name'         => $this->input->post('campaign_name'),
                'campaign_short_name'   => $this->input->post('campaign_short_name'),
                'campaign_status'       => $this->input->post('status'),
                'updated_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updatecampaign = $this->Mods->update($table_name = 'campaign', $conditionField = array('campaign_id' => $id), $permissionId = $id, $data = $campaignData);            
                
            if ($updatecampaign){
                $this->session->set_flashdata('SuccessUpdateCampaign', 'Campaign Record Update.');
                redirect(base_url('Mod/manageCampaign'));
            }
            
        }        

        
    }
    
    public function viewCampaign($id){
        
        $this->load->model('Mods');
        $campaignData = ($id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $id) : '';
        
        if (is_array($campaignData)) {
            $this->data['campaign'] = $campaignData[0];            
        } else {
            $this->session->set_flashdata('campaignDataError', 'Record Not Exists.');
            $this->data['campaign'] = "";
        }
        
        $this->headerV($this->title = "Edit Campaign");
        $this->load->view('Mod/campaign/viewCampaign', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function deleteCampaign(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $CampaignData = ($id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $id) : '';
        
        if (is_array($CampaignData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'campaign_id', $table_name = 'campaign');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;
        
    }
    
    public function manageCampaign(){
        
        $this->headerV($this->title = "Manage Campaigns");
        $this->load->view('Mod/campaign/campaign');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function adminLoadCampaignData() {

        $aColumns = array(
            "campaign_id", "user_id", "company_id", "campaign_name", "campaign_short_name", "campaign_status", "created_at" 
        );

        $aColumns_for_sorting = array("campaign_id", "campaign_name", "campaign_short_name", "campaign_status", "created_at" );
        
        $aColumns_for_loop = array("campaign_name", "campaign_short_name", "campaign_status", "created_at");

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "campaign_id";

        /* DB table to use */
        $sTable = "campaign";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }

        /*0
         * Ordering
         */
        
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }           
            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }                       
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();


                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['campaign_status'] = ($aRow['campaign_status']) ? 'Active' : 'In-Active';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $update = ($_SESSION['adminData']['Companies']['permission_update'] == 1) ? '<a href="' . base_url('Mod/editCampaign/') . $aRow['campaign_id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Companies']['permission_view'] == 1) ? '<a href="' . base_url('Mod/viewCampaign/') . $aRow['campaign_id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Companies']['permission_delete'] == 1 && $aRow['campaign_id'] != $_SESSION['adminData']['company_id'] ) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deleteCampaign('.$aRow['campaign_id'].')" name="del" data-value="'.$aRow['campaign_id'].'"><i class="ti-trash"></i></<button>' : '';

            $row[] = $update . $view . $delete;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
    }   

    
// Lead Status modules are start from here

    public function addLeadStatus(){
        
        $sql        = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1";
        $campaigns  = $this->db->query($sql)->result();
        
        $this->data['campaigns'] = $campaigns;
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leadStatuses/addLeadStatuses', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function createLeadStatus(){

        if ($this->form_validation->run('addLeadStatus') == FALSE) {
            $this->addLeadStatus();
        } else {
            
            date_default_timezone_set('Europe/London');
            
            $leadStatusData = array(
                
                'user_id'    => $_SESSION['adminData']['user_id'],
                'company_id' => $_SESSION['adminData']['company_id'],
                'campaign_id' => $this->input->post('campaign_id'),
                'status_name'           => $this->input->post('statusName'), 
                'lead_type'             => $this->input->post('leadType'), 
                'is_active'             => $this->input->post('status'),
                'created_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            $leadStatusInsert = $this->Mods->single_insert('lead_statuses', $leadStatusData);
            
            if ($leadStatusInsert){
                
                $this->session->set_flashdata('SuccessLeadStatusData', 'Lead Status Created.');
                redirect(base_url('Mod/manageLeadStatuses'));
                
            }
        }        
        
    }
    
    public function editLeadStatus($id = ""){
        $permission_view = $_SESSION['adminData']['Lead Statuses']['permission_view'];
        $permission_update = $_SESSION['adminData']['Lead Statuses']['permission_update'];
        $permission_delete = $_SESSION['adminData']['Lead Statuses']['permission_delete'];
        if($permission_update ==1){
            $this->load->model('Mods');
            $leadStatusData = ($id) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $id) : '';

            $sql        = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1";
            $campaigns  = $this->db->query($sql)->result();

            $this->data['campaigns'] = $campaigns;


            if (is_array($leadStatusData)) {
                $this->data['leadStatusData']             = $leadStatusData[0];
            } else {
                $this->session->set_flashdata('leadStatusDataError', 'Record Not Exists.');
                $this->data['leadStatusData'] = '';
            }

            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leadStatuses/editLeadStatuses', $this->data);                
            $this->load->view('Mod/footer/footer'); 
        }else{
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/permissiontothis');                
            $this->load->view('Mod/footer/footer');  
        }       
        
    }
    
    public function updateLeadStatus(){
        
        $id = !empty(@$_POST['leadStatusesId']) ? base64_decode(@$_POST['leadStatusesId']) : $this->session->set_flashdata('leadStatusDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadStatus') == FALSE) {
            $this->editLeadStatus($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $leadStatusData = array(
                
                'campaign_id'           => $this->input->post('campaign_id'),
                'status_name'           => $this->input->post('statusName'), 
                'lead_type'             => $this->input->post('leadType'), 
                'is_active'             => $this->input->post('status'),
                'updated_at'            => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updateleadStatus = $this->Mods->update($table_name = 'lead_statuses', $conditionField = array('id' => $id), $permissionId = $id, $data = $leadStatusData);            
                
            if ($updateleadStatus){
                $this->session->set_flashdata('SuccessupdateleadStatus', 'Lead Status Record Update.');
                redirect(base_url('Mod/manageLeadStatuses'));
            }
            
        }                
        
    }
    
    public function viewLeadStatus($id){
        
        $this->load->model('Mods');
        $leadStatusData = ($id) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $id) : '';
        
        if (is_array($leadStatusData)) {
            
            $campaign_name = ($leadStatusData[0]->campaign_id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $leadStatusData[0]->campaign_id) : '';
            
            $this->data['leadStatusData']             = $leadStatusData[0];
            $this->data['campaign_name']             = $campaign_name[0];
            
        } else {
            $this->session->set_flashdata('leadStatusDataError', 'Record Not Exists.');
            $this->data['leadStatusData'] = '';
            $this->data['campaign_name']  = '';
            
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leadStatuses/viewLeadStatuses', $this->data);
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function deleteLeadStatus(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $leadStatusData = ($id) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $id) : '';
        
        if (is_array($leadStatusData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'id', $table_name = 'lead_statuses');            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;        
        
    }
    
    public function manageLeadStatuses(){
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leadStatuses/leadStatuses');
        $this->load->view('Mod/footer/footer');
        
    }
    public function deleteLeadmailMessages($messageid){
        
        /*$id = $_POST['delID'];*/
        $id = $messageid;
        
        $this->load->model('Mods');
        
        $leadData = ($id) ? $this->Mods->getIdByName($table_name = 'message', $condition = 'message_thread_code', $id) : '';
        
        if (is_array($leadData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'message_thread_code', $table_name = 'message'); 
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'message_thread_code', $table_name = 'message_thread'); 
            
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'lead_emails',                        
                        "module_name" => 'deleteemails',
                        "module_id" => $id,
                        "note" => 'User Delete emails',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
            
            
        } else {
            $del = FALSE;
        }

        //echo ($del) ? TRUE : FALSE;     
        
        redirect(base_url('Mod/manageLeads'));
        
    }
     public function manageMessages(){
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/messages/messagesList');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function adminLoadLeadsMessagesData($lead_id) {
        $LoggedInUser_id = $_SESSION['adminData']['user_id'];
        //message_thread.reciever, U.userName ReciverName, UZ.userName SenderName, message.timestamp
        $aColumns = array(
                "message_thread.*", 
                "message_thread.reciever", 
                "U.userName ReciverName",
                "UZ.userName SenderName",
                "message.timestamp"
             );

        $aColumns_for_sorting = array(                
                "message_thread.message_thread_id", 
                "users.userName",
                "message_thread.reciever", 
                "message_thread.last_message_timestamp"
        );
        
        $aColumns_for_loop = array(
                "ReciverName",
                "SenderName",
                "timestamp"            
        );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "message_thread_id";

        /* DB table to use */
        $sTable = "message_thread";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

//        echo "<pre>";
//        print_r($_GET);
//        print_r($aColumns_for_sorting);
//        die();

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere = $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
        if ($_SESSION['adminData']['role_name'] == "Admin"){
            $sWhere = "WHERE message_thread.lead_id = $lead_id";   
        }else{
            $user_id = $_SESSION['adminData']['user_id'];  
           $sWhere = "WHERE message_thread.lead_id = $lead_id AND (message_thread.reciever = '$user_id' OR  message_thread.sender = '$user_id')";    
        }        
        }else {
            if ($_SESSION['adminData']['role_name'] == "Admin"){
            $sWhere = "WHERE message_thread.lead_id = $lead_id";   
        }else{
             $user_id = $_SESSION['adminData']['user_id'];
             $sWhere = "WHERE message_thread.lead_id = $lead_id AND (message_thread.reciever = '$user_id' OR  message_thread.sender = '$user_id')"; 
            }
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */
        
        $joins = "  left JOIN users U ON U.id = message_thread.reciever left JOIN users UZ ON UZ.id = message_thread.sender left JOIN message ON message.message_thread_code = message_thread.message_thread_code ";
                    
        $sGroubBy = "GROUP BY message.message_thread_code";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sGroubBy . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        //echo $sQuery;
        
        /* Data set length after filtering */
        $sQuery = "	SELECT FOUND_ROWS() as total_found ";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
        /*print_r($aResultFilterTotal);
        die();*/
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
          
            $row = array();

                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $view               = (1 == 1) ? '<a title="View Conversation" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/only_view_messages/') . $aRow['message_thread_code'] . '" type="button" class="btn" ><i class="fa fa-file"></i></a>' : '';
            
            $viewandreply       = (($LoggedInUser_id == $aRow['sender']) || ($LoggedInUser_id == $aRow['reciever'])) ? '<a title="View and Reply Conversation" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/reply_message/') . $aRow['message_thread_code'] . '" type="button" class="btn" ><i class="fa fa-envelope"></i></a>' : '';
            
            $delete               = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Delete Emaail" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/deleteLeadmailMessages/') . $aRow['message_thread_code'] . '" type="button" class="btn" ><i class="fa fa-trash"></i></a>' : '';
            
            $row[]              = $view .$viewandreply. $delete;

            $output['aaData'][] = $row;
            $x++;
        }
                    
        echo json_encode($output);
        
    }
    public function adminLoadMessagesData() {
        
        $aColumns = array(
                "message_thread.*", 
                "message_thread.reciever", 
                "users.userName ReciverName"
             );

        $aColumns_for_sorting = array(                
                "message_thread.message_thread_id", 
                "users.userName",
                "message_thread.reciever", 
                "message_thread.last_message_timestamp"
        );
        
        $aColumns_for_loop = array(
                "ReciverName",
                "last_message_timestamp"            
        );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "message_thread_id";

        /* DB table to use */
        $sTable = "message_thread";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

//        echo "<pre>";
//        print_r($_GET);
//        print_r($aColumns_for_sorting);
//        die();

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
           


         $user_id = $_SESSION['adminData']['user_id'];
            //$sWhere .= "AND reciever='$user_id'";    
           $sWhere = "WHERE reciever = '$user_id' OR  sender = '$user_id'";      
            
           
            
            
            //$sWhere .=  "";
        } else {
             $user_id = $_SESSION['adminData']['user_id'];
            //$sWhere .= "AND reciever='$user_id'";    
           $sWhere = "WHERE reciever = '$user_id' OR  sender = '$user_id'"; 
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */
        
        $joins = "  left JOIN users ON users.id = message_thread.reciever ";
                    
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
        /*print_r($aResultFilterTotal);
        die();*/
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            
            /*$Messages_Sql = 'SELECT  COUNT(*) as Unreadmessages  FROM `message` WHERE `message_thread_code` LIKE "' .$aRow['message_thread_code']. '" AND `read_status` = 0 AND sender != " ' .$_SESSION['adminData']['user_id']. ' " ';            
            $query = $this->db->query($Messages_Sql);  
            $UnreadMessages = $query->num_rows();
         
            if($UnreadMessages > 0) { 
                    $Unread='<p><span class="badge badge-danger badge-header" style=" padding: 5px 5px 5px 5px; ">'.$UnreadMessages.'</span></p>';
            } else{
                $Unread='<p><span class="badge badge-danger badge-header" style=" padding: 5px 5px 5px 5px; "></span></p>';
            }
            */
            $row = array();

                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $view               = (1 == 1) ? '<a title="View Conversation" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/reply_message/') . $aRow['message_thread_code'] . '" type="button" class="btn" ><i class="fa fa-envelope"></i></a>' : '';
            $row[]              = $view ;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
        
    }
    public function adminLoadLeadStatuses() {
        
        $aColumns = array(
            'lead_statuses.id', 'lead_statuses.status_name', 'lead_statuses.lead_type', 'campaign.campaign_name', 'lead_statuses.is_active', 'lead_statuses.created_at', 'lead_statuses.updated_at' 
        );

        $aColumns_for_sorting = array('id', 'status_name', 'lead_type', 'campaign_name', 'is_active', 'created_at', 'updated_at' );
        
        $aColumns_for_loop = array( 'status_name', 'lead_type', 'campaign_name', 'is_active', 'created_at' );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "lead_statuses";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";
        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND user_id='" . $user_id . "' AND company_id= '$company_id'";            
            
        }            
            
            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            
            $sWhere .= "AND  user_id='" . $user_id . "' AND company_id= '$company_id'";            
            
        }            
            
            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */
 
        $joins = " INNER JOIN campaign ON campaign.campaign_id = lead_statuses.campaign_id ";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        

        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        
        foreach ($rResult as $aRow) {
        $row = array();

                $aRow['created_at'] = date("d-M-Y", strtotime($aRow['created_at']));
                $aRow['is_active'] = ($aRow['is_active']) ? 'Active' : 'In-Active';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $update = ($_SESSION['adminData']['Lead Statuses']['permission_update'] == 1) ? '<a href="' . base_url('Mod/editLeadStatus/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Lead Statuses']['permission_view'] == 1) ? '<a href="' . base_url('Mod/viewLeadStatus/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Lead Statuses']['permission_delete'] == 1) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deleteLeadStatuses('.$aRow['id'].')" name="del" data-value="'.$aRow['id'].'"><i class="ti-trash"></i></<button>                                                ' : '';

            $row[] = $update . $view . $delete;
            
            $output['aaData'][] = $row;
            $x++;

        }
        
        echo json_encode($output);
        
    }    

// Lead Module are start from here .........
    
    public function cloneLead($id){
     
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        
        if (is_array($lead)) {
            
            $this->data['leadData']       = $lead[0];
            $lead_campaign                = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';            
            $this->data['lead_campaign']  = $lead_campaign;            
            
        } else {
            
            $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
            $this->data['leadData']         = '';
            $this->data['lead_campaign']    = "";            
            
        }
        
         if ($lead_campaign[0]->campaign_name == "Car Hire"){
            $this->title = "Car Hire Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/cloneLead', $this->data);
            $this->load->view('Mod/footer/footer');    
        }elseif($lead_campaign[0]->campaign_name == "Personal Injury"){
            $this->title = "Accident Claim Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/cloneLead', $this->data);
            $this->load->view('Mod/footer/footer');                         
        }elseif($lead_campaign[0]->campaign_name == "Housing Disrepair"){
            $this->title = "Housing Disrepair Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/cloneLead', $this->data);
            $this->load->view('Mod/footer/footer');                         
        }
        elseif($lead_campaign[0]->campaign_name == "Energy Campaign"){
            $this->title = "Energy Campaign Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/cloneleadec', $this->data);
            $this->load->view('Mod/footer/footer');    
        }elseif($lead_campaign[0]->campaign_name == "Tax Reclaim"){
            $this->title = "Tax Reclaim Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/clonetrlead', $this->data);
            $this->load->view('Mod/footer/footer');     
        }elseif($lead_campaign[0]->campaign_name == "Solicitor"){
            
            $this->title = "Solicitor Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/clonesolead', $this->data);
            $this->load->view('Mod/footer/footer');     
        }elseif($lead_campaign[0]->campaign_name == "MIB Claims"){
            
            $this->title = "MIB Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/clonesoMIBlead', $this->data);
            $this->load->view('Mod/footer/footer');     
        }elseif($lead_campaign[0]->campaign_name == "CICA Claims"){
            
            $this->title = "CICA Claims Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/clonesCICAlead', $this->data);
            $this->load->view('Mod/footer/footer');     
        }elseif($lead_campaign[0]->campaign_name == "Employment"){
            
            $this->title = "CICA Claims Form";
            $this->headerV($this->title);
            $this->load->view('Mod/leads/clones_EM_lead', $this->data);
            $this->load->view('Mod/footer/footer');     
        }
        
            
        
    }    
    
// Done     
    
    public function addLead($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "Accident Claim Form");
            $this->load->view('Mod/leads/addLead');
            $this->load->view('Mod/footer/footer'); 
        }else{
            show_404();
        }
    }
    
   public function createLead($id = 0) {
        
        if ($this->form_validation->run('addLead') == FALSE) {
            $this->addLead($id);
        } else {
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
             $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

$duplicateLead = "";            
        
if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
             

    
}
    else{
        $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        ( user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                         ) OR (
                                            user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        ) OR (
                                            user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id )";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
//            if (!empty($duplicateLead)){
//                $this->session->set_flashdata('duplicateLeadError', $duplicateLead);
//                $this->addLead($id);
//            } 
    
   
            
}
    $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone' ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";
        /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'insode empty';*/
    } else{
        /*echo '<pre>';*/
        $StatusofPhone1Duplication = 0;
        /*echo 'outide empty';*/
    }  
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
            
    if(!empty($ClientCarRegistrationNumb)){
      /*duplicate Client Vehicle*/
    $sqlCheckDuplicateVehicle = "SELECT count(*) AS 'CountoFDuplicateVehicl' 
                                FROM `leads` WHERE client_car_registration = '$ClientCarRegistrationNumb' 
                                OR tp_car_registration = '$ClientCarRegistrationNumb' ";
    $CheckDuplicateVehicle    = $this->db->query($sqlCheckDuplicateVehicle)->result_array();
    $duplicateLeadofVehicle   = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? "1" : " ";
   
    //$duplicateLeadofVehiclemessg      = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? " Both are checked 1" : "";
    $StatusofVehicleRegistrationDuplication = $duplicateLeadofVehicle;
    }    
    
    if(!empty($TPCarRegistrationNumb)){
        /*duplicate Client TPVehicle*/
    $sqlCheckDuplicateVehicleTP = "SELECT count(*) AS 'CountoFDuplicateVehiclTP' 
                                FROM `leads` WHERE client_car_registration = '$TPCarRegistrationNumb' 
                                OR tp_car_registration = '$TPCarRegistrationNumb' ";
    $CheckDuplicateVehicleTP    = $this->db->query($sqlCheckDuplicateVehicleTP)->result_array();
    $duplicateLeadofVehicleTP   = ($CheckDuplicateVehicleTP[0]['CountoFDuplicateVehiclTP'] > 0) ? "1" : " ";
    $StatusofTPVehicleRegistrationDuplication = $duplicateLeadofVehicleTP; 
    }       
    

            if (empty($duplicateLead) || !empty($duplicateLead)){
            if((!empty($ClientCarRegistrationNumb))&&(!empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    tp_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                )
                                OR(
                                    (tp_car_registration = '$TPCarRegistrationNumb' OR client_car_registration = '$TPCarRegistrationNumb' ) AND (campaign_id = $campaign_id)
                                    )
                                OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
            else{
                if(!empty($ClientCarRegistrationNumb)){
                //echo 'inside client car='.$ClientCarRegistrationNumb;
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
                if(!empty($TPCarRegistrationNumb)){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
             }
            if((empty($ClientCarRegistrationNumb))&&(empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                    )
                                 OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  
                
/*echo '<pre>';
print_r($checkLinkedLead);                
echo "<pre>";
echo $duplicateLeadofEmail;
echo '<br>';
echo $duplicateLeadofPhone;
echo '<br>';
echo $duplicateLeadofPhone1;
echo '<br>';
echo $duplicateLeadofpost_code;
echo '<br>';
echo 'Duplication of client vehicle'.$duplicateLeadofVehicle;
echo '<br>';
echo 'Duplication of tp vehicle'.$duplicateLeadofVehicleTP;
echo '<br>';
echo $duplicateLeadofVehiclemessg;
die();*/
                
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
                
            if($this->input->post('dateOfBirth') !=''){
               if($this->input->post('dateOfBirth')=='0000-00-00'){
                    $dobDay = '1';
                    $dobMonth = '1';
                    $dobYear = '1999';
                }else{
                    $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
                    $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
                    $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
                }
            }else{
                $dobDay = '1';
                $dobMonth = '1';
                $dobYear = '1999';
            }
            
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>2QFfQJZmch2JGCuqENlFGCbWRfzqqi5F</key>
                                    <leadgroup>50672</leadgroup>
                                    <site>0</site>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <term>$BDMName</term>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <jobtitle>" . $BDMName . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data2>" . $this->input->post('PositiononLiability') . "</data2>
                                    <data3>" . $this->input->post('TPInsurerDetailsName') . "</data3>
                                    <data4>" . $this->input->post('accidentCircumstances') . "</data4>
                                    <data5>" . $this->input->post('ClientStatusinAccident') . "</data5>
                                    <data6>" . $this->input->post('AreyouaLitigationFriend') . "</data6>
                                    <data7>" . $this->input->post('replacementInvoiceNumber') . "</data7>
                                    <data8>" . $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant') . "</data8>
                                    <data9>" . $this->input->post('DateofAccident') . "</data9>
                                    <data10>" . $this->input->post('TimeofAccident') . "</data10>
                                    <data12>" . $this->input->post('WhatInjuriesdidyousuffer') . "</data12>
                                    <data13>" . $this->input->post('DidyouseekMedicalAttention') . "</data13>
                                    <data14>" . $this->input->post('Whodoyoublamefortheaccident') . "</data14>
                                    <data15>" . $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame') . "</data15>
                                    <data16>" . $this->input->post('ClientCarRegistration') . "</data16>
                                    <data17>" . $this->input->post('ClientCarMakeModel') . "</data17>
                                    <data18>" . $this->input->post('ClientInsurer') . "</data18>
                                    <data19>" . $this->input->post('ClientPolicyNumber') . "</data19>
                                    <data20>" . $this->input->post('TPCarRegistration') . "</data20>
                                    <data21>" . $this->input->post('TPCarMakeModel') . "</data21>
                                    <data22>" . $this->input->post('Haveyouclaimedbefore') . "</data22>
                                    <data23>" . $this->input->post('Doyouwishtomakeaclaim') . "</data23>
                                    <data24>" . $this->input->post('Additionalnotes') . "</data24>
                                    <data25>" . $this->input->post('Isthisalinkedpassenger') . "</data25>
                                    <data26>" . $this->input->post('PreferredtimeofContact') . "</data26>
                                    <data27>" . $this->input->post('ClientsOccupation') . "</data27>
                                    <data28>" . $this->input->post('NINumber') . "</data28>
                                    <data29>" . $this->input->post('WastheClientVehiclerepairedortotalloss') . "</data29>
                                    <data30>" . $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage') . "</data30>
                                    <data31>" . $this->input->post('Werethepoliceinvolved') . "</data31>
                                    <data32>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data32>
                                    <data33>" . $this->input->post('Whatwastheweatherlike') . "</data33>
                                    <data34>" . $this->input->post('HowmanyOccupantsinthevehicle') . "</data34>
                                    <data35>" . $this->input->post('PreferredTimetoCall') . "</data35>
                                    <data36>" . $this->input->post('ClientPassword') . "</data36>
                                    <data40>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data40>
                                    <data41>" . $this->input->post('EmployersName-Address-TelephoneNumber') . "</data41>
                                    <data42>" . $this->input->post('MedNegOnly') . "</data42>
                                    <data44>" . $this->input->post('OLPLONLY') . "</data44>
                                    <data45>" . $this->input->post('CreditHireorVehicleReplacement') . "</data45>
                                    <data46>" . $this->input->post('IsInjuryOngoingInjury-Physio') . "</data46>
                                    <data47>" . $this->input->post('ThirdpartypolicyNumber') . "</data47>
                                    <data49>" . $this->input->post('InterpreterName') . "</data49>
                                    <data50>" . $this->input->post('Interpreterpaid') . "</data50>
                                  </lead>
                                </data>";

           

// consumercreditjustice Flg Integration 
            //str_replace(find,replace,string,count)
            $xml_data = str_replace('&', '&#38;', $xml_data);
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_ENCODING, "");
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);

            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);

//            $api_ids = array('consumercreditjustice_flg' => $lead_id , 'claimline365_flg' => $lead_id_1, 'round1solutions_fld' => $lead_id_2);
            $api_ids = array('consumercreditjustice_flg' => $lead_id);
            
            /* ---------------------------flg hit end------------------ */

//            if ($hit_message == 'OK' && $hit_message_2 == 'OK' && $hit_message_1 == 'OK') {
            if ($hit_message == 'OK') {
                $ClaimHnadlerUser  = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', 260);
                $handler_id = 260;
                $handle_rname = $ClaimHnadlerUser[0]->userName;
                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                    'client_car_registration' => $ClientCarRegistrationNumb,
                    'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                    'client_insurer' => $this->input->post('ClientInsurer'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                    'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('ClientsOccupation'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                    'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                    'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ClientPassword'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                    'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 11 : 120,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "number_of_passengers" => $this->input->post('number_of_passengers'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'api_inseration_id' => json_encode($api_ids),
                    "reference_id" => $reference_id,
                    "duplicateLeadofEmail" => $StatusofEmailDuplication,
                    "duplicateLeadofPhone" => $StatusofPhoneDuplication,
                    "duplicateLeadofPhone1" => $StatusofPhone1Duplication,
                    "duplicateLeadofpost_code" => $StatusofPostcodDuplication,
                    "duplicateLeadofVehicle" => $StatusofVehicleRegistrationDuplication,
                    "duplicateLeadofVehicleTP" => $StatusofTPVehicleRegistrationDuplication,
                    "flg_ccj_id" => $lead_ccj_id,
                    "flg_ros_id" => $lead_ros_id,
                    'handler_id'   => $handler_id,
                    'handler_name' => $handle_rname,
                    'created_at' => date("y-m-d H:i:s")
                );
/*
                echo "<pre>";
                print_r($leadData);
               die();     */           
                
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
                
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }


                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new PI lead.' : 'User add new PI lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New PI Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');

//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW PI Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW PI Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Position on Liability</td>
                                                    <td>' . $getleadData[0]->position_on_liability  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Insurer Details-Name</td>
                                                    <td>' . $getleadData[0]->tp_insurer_details_name  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Accident Circumstances</td>
                                                    <td>' . $getleadData[0]->accident_circumstances  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Status in Accident</td>
                                                    <td>' . $getleadData[0]->client_status_in_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Are you a Litigation Friend</td>
                                                    <td>' . $getleadData[0]->are_you_a_litigation_friend  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Replacement invoice Number</td>
                                                    <td>' . $getleadData[0]->replacement_invoice_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>If litigation friend, name and date of birth of the claimant</td>
                                                    <td>' . $getleadData[0]->if_litigation_friend_name_and_date_of_birth_of_the_claimant  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Date of Accident</td>
                                                    <td>' . $date_of_accident . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Time of Accident</td>
                                                    <td>' . $getleadData[0]->time_of_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What Injuries did you suffer?</td>
                                                    <td>' . $getleadData[0]->what_injuries_did_you_suffer  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Did you seek Medical Attention</td>
                                                    <td>' . $getleadData[0]->did_you_seek_medical_attention  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Who do you blame for the accident?</td>
                                                    <td>' . $getleadData[0]->who_do_you_blame_for_the_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Do you have access to the details of the party you blame?</td>
                                                    <td>' . $getleadData[0]->do_you_have_access_to_the_details_of_the_party_you_blame  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Car Registration</td>
                                                    <td>' . $getleadData[0]->client_car_registration  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Car Make Model</td>
                                                    <td>' . $getleadData[0]->client_car_make_model  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Insurer</td>
                                                    <td>' . $getleadData[0]->client_insurer  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Policy Number</td>
                                                    <td>' . $getleadData[0]->client_policy_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Car Registration</td>
                                                    <td>' . $getleadData[0]->tp_car_registration  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Car Make Model</td>
                                                    <td>' . $getleadData[0]->tp_car_make_model  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Have you claimed before?</td>
                                                    <td>' . $getleadData[0]->have_you_claimed_before  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Do you wish to make a claim?</td>
                                                    <td>' . $getleadData[0]->do_you_wish_to_make_a_claim  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Additional notes</td>
                                                    <td>' . $getleadData[0]->additional_notes  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Is this a linked passenger</td>
                                                    <td>' . $getleadData[0]->is_this_a_linked_passenger  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Preferred time of Contact</td>
                                                    <td>' . $getleadData[0]->preferred_time_of_contact  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Clients Occupation</td>
                                                    <td>' . $getleadData[0]->clients_occupation  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>NI Number</td>
                                                    <td>' . $getleadData[0]->ni_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Was the Client Vehicle repaired or total loss</td>
                                                    <td>' . $getleadData[0]->was_the_client_vehicle_repaired_or_total_loss  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Has the client been paid out for hisher vehicle damage?</td>
                                                    <td>' . $getleadData[0]->has_the_client_been_paid_out_for_his_her_vehicle_damage  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Were the police involved?</td>
                                                    <td>' . $getleadData[0]->were_the_police_involved  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What was the exact location of the accident?</td>
                                                    <td>' . $getleadData[0]->what_was_the_exact_location_of_the_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What was the weather like?</td>
                                                    <td>' . $getleadData[0]->what_was_the_weather_like  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>How many Occupants in the vehicle</td>
                                                    <td>' . $getleadData[0]->how_many_occupants_in_the_vehicle  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Preferred Time to Call</td>
                                                    <td>' . $getleadData[0]->preferred_time_to_call  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Password</td>
                                                    <td>' . $getleadData[0]->client_password  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Was Accident reported or recorded in the accident Book?</td>
                                                    <td>' . $getleadData[0]->was_accident_reported_or_recorded_in_the_accident_book  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Employers Name, Address, Telephone Number</td>
                                                    <td>' . $getleadData[0]->employers_name_address_telephone_number  . '</td>
                                                </tr> 
                                                <tr>
                                                    <td>Med Neg Only</td>
                                                    <td>' . $getleadData[0]->med_neg_only  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>OL PL ONLY</td>
                                                    <td>' . $getleadData[0]->ol_pl_only  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Credit Hire or Vehicle Replacement Required</td>
                                                    <td>' . $getleadData[0]->credit_hire_or_vehicle_replacement  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Is Injury Ongoing Injury- Physio Required</td>
                                                    <td>' . $getleadData[0]->is_injury_on_going_injury_physio  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Third party policy Number</td>
                                                    <td>' . $getleadData[0]->third_party_policy_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Interpreter Name</td>
                                                    <td>' . $getleadData[0]->interpreter_name  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Interpreter paid</td>
                                                    <td>' . $getleadData[0]->interpreter_paid  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {

                            $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany    = json_decode(json_encode($item), 1);
               
                
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                
                $this->addLead($id);
                
                }
            }
        }
    }
    
     
// Done    
    /*WIP Leads*/
public function addWIP($id = 0){
        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        
        if (!$checkCampaign){
            show_404();
        }
   
         $this->data['userClosers']     = $this->getClosers();
        $this->data['userAgentslist']     = $this->getAgentsOfROund1();
        $this->headerV($this->title = "Accident Claim Form");
        $this->load->view('Mod/leads/addLeadWIP',$this->data);
        $this->load->view('Mod/footer/footer');
        
    }
 public function createWIP($id = 0){
        if ($this->form_validation->run('addLeadwip') == FALSE) {
            $this->addWIP($id);
        } 
    else {
            $duplicateLead      = '';
            $checkLinkedLead    = '';
            $user_id            = $_SESSION['adminData']['user_id'];
        
            $wip_person_id      = $user_id;
            $leadWipPerson      = $_SESSION['adminData']['user_name'];
        
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
             $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $this->input->post('wiptouserCloser');
            $Slectedagnet   = $this->input->post('agentName');
            if($Slectedagnet != '0'){
                $sql                = "SELECT id, userName FROM users WHERE userName = '$Slectedagnet'";
                $checkUserId        = $this->db->query($sql)->result();
                $agent_id           = $checkUserId[0]->id;
                $agentNameLead          = $Slectedagnet;
            }elseif($Slectedagnet == '0'){
                $sql                = "SELECT id, userName FROM users WHERE id = $userID";
                $checkUserId        = $this->db->query($sql)->result();
                $agentNameLead      = $checkUserId[0]->userName;
                $agent_id           = $userID;
            }
           /* else{
                //if no one selected then Selected Closer will be agent for this.
                $sql                = "SELECT id, userName FROM users WHERE id = $userID";
                $checkUserId        = $this->db->query($sql)->result();
                $agentName          = $checkUserId[0]->userName;
                $agent_id           = $userID;
            }*/
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            
                $leadData = array(
                    'user_id' => $userID,
                    'agent_name' => $agentNameLead,
                    'agent_id' => $agent_id,
                    'wip_name' => $leadWipPerson,
                    'wip_id' => $wip_person_id,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                    'client_car_registration' => $ClientCarRegistrationNumb,
                    'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                    'client_insurer' => $this->input->post('ClientInsurer'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                    'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('ClientsOccupation'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                    'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                    'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ClientPassword'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                    'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 11 : 120,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "number_of_passengers" => $this->input->post('number_of_passengers'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    "reference_id" => $reference_id,
                    'created_at' => date("y-m-d H:i:s")
                );
              
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leadswip', $leadData);
                
                
                if ($leadInsert) {
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addWIP',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new PIWIP lead.' : 'User add new PIWIP lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
               // $this->Mods->single_insert('leads_statuses_logs', $status_log_data);   
                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                redirect(base_url('Mod/manageWIP'));
                }
            else {
                
                $this->session->set_flashdata('leadStatusDataError', 'Lead Status Created.');
                
                $this->addWIP($id);
                }
            }
        }
   public function editLeadswip($id = ""){

        $this->load->model('Mods');
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
        
        if (is_array($lead)) {
            
            $this->data['leadData']      = $lead[0];
            $lead_campaign               = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';            
            $this->data['lead_campaign'] = $lead_campaign;            

        } else {
            
            $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
            $this->data['leadData'] = '';
            $this->data['lead_campaign'] = "";            

        }
        
        if($lead_campaign[0]->campaign_short_name=="TR"){
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/editTRLeadwip', $this->data);
            $this->load->view('Mod/footer/footer');  
        }else{
             $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/editLeadswip', $this->data);                
            $this->load->view('Mod/footer/footer');     
        }     
        
    }
    public function Leadswiptoreal($id = ""){
            
            $this->load->model('Mods');
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';

            if (is_array($lead)) {

                $this->data['leadData']      = $lead[0];
                $lead_campaign               = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';            
                $this->data['lead_campaign'] = $lead_campaign;            
            } else {
                $this->session->set_flashdata('leadsWIPDataError', 'Record Not Exists.');
                $this->data['leadData'] = '';
                $this->data['lead_campaign'] = "";            
                
            }

            if($lead_campaign[0]->campaign_short_name=="TR"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/trLeadswiptoreal', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name== "PI" || "EC" || "HDR" || "CH"){
                $this->data['userClosers']     = $this->getClosers();
                 $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/Leadswiptoreal', $this->data);                
                $this->load->view('Mod/footer/footer');     
            }     

        }
    public function createLeadfromwip($id = 0){
        $agnet_name             = base64_decode($_POST['leadAName']);
        $user_id                = base64_decode($_POST['leadUid']);
        $company_id             = base64_decode($_POST['leadCid']);
        $userID                 = base64_decode($_POST['leadUid']);
        $campaign_id            = base64_decode($_POST['leadCamid']);
        $campaign_short_name    = base64_decode($_POST['leadComSN']);
        
        
         $companyId            = base64_decode($_POST['Cid']);
         $BDMName            = base64_decode($_POST['CName']);
         $companyName            = base64_decode($_POST['BdmName']);
       
        if ($this->form_validation->run('addLeadFromWIP') == FALSE) {
              $this->Leadswiptoreal($id); 
        } 
        else {  
           
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
             $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            $reference_id       = $campaign_short_name . "-" . mt_rand(123456, 987654);            
$duplicateLead = "";            
        $sqlCheckDuplicateLead = "SELECT
                                count(*) AS 'CountoFDuplicateEntery'
                            FROM
                        `leads`
                            WHERE
                            user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                            OR 
                            user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                            OR 
                            user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
    $tottal  = 0;
    $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    /*$condition_Email_Data = array( 'email' => $email_address );
    $StatusofEmailDuplication = $this->Mods->getBoleanDataByCondition( $fields = 'lead_id', $tableName = 'leads', $condition_Email_Data ); */
    /*duplicate Phne*/
    /*$condition_Phone1_Data = array( 'phone_1' => $phone_number );
    $StatusofPhoneDuplication = $this->Mods->getBoleanDataByCondition( $fields = 'lead_id', $tableName = 'leads', $condition_Phone1_Data );*/  
    /*duplicate Phne2*/
    /*if(!empty($workPhone)){
    $condition_Phone2_Data = array( 'phone_2' => $workPhone );
    $StatusofPhone1Duplication = $this->Mods->getBoleanDataByCondition( $fields = 'lead_id', $tableName = 'leads', $condition_Phone2_Data ); 
    }else{
        $StatusofPhone1Duplication = 0;
    }*/  
    /*duplicate postcod*/
    /*$condition_Phone2_Data = array( 'post_code' => $PostCodnum );
    $StatusofPostcodDuplication = $this->Mods->getBoleanDataByCondition( $fields = 'lead_id', $tableName = 'leads', $condition_Phone2_Data );*/         
    /*Cleint car*/
    /*if(!empty($ClientCarRegistrationNumb)){
    $sqlCheckDuplicateVehicle = "SELECT count(*) AS 'CountoFDuplicateVehicl' 
                                FROM `leads` WHERE client_car_registration = '$ClientCarRegistrationNumb' 
                                OR tp_car_registration = '$ClientCarRegistrationNumb' ";
    $CheckDuplicateVehicle    = $this->db->query($sqlCheckDuplicateVehicle)->result_array();
    $duplicateLeadofVehicle   = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? "1" : " ";
    $StatusofVehicleRegistrationDuplication = $duplicateLeadofVehicle;
    }    
    
    if(!empty($TPCarRegistrationNumb)){
     $sqlCheckDuplicateVehicleTP = "SELECT count(*) AS 'CountoFDuplicateVehiclTP' 
                                FROM `leads` WHERE client_car_registration = '$TPCarRegistrationNumb' 
                                OR tp_car_registration = '$TPCarRegistrationNumb' ";
    $CheckDuplicateVehicleTP    = $this->db->query($sqlCheckDuplicateVehicleTP)->result_array();
    $duplicateLeadofVehicleTP   = ($CheckDuplicateVehicleTP[0]['CountoFDuplicateVehiclTP'] > 0) ? "1" : " ";
    $StatusofTPVehicleRegistrationDuplication = $duplicateLeadofVehicleTP; 
    }*/       
    

            if (empty($duplicateLead) || !empty($duplicateLead)){
            if((!empty($ClientCarRegistrationNumb))&&(!empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    tp_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                )
                                OR(
                                    (tp_car_registration = '$TPCarRegistrationNumb' OR client_car_registration = '$TPCarRegistrationNumb' ) AND (campaign_id = $campaign_id)
                                    )
                                OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
            else{
                if(!empty($ClientCarRegistrationNumb)){
                //echo 'inside client car='.$ClientCarRegistrationNumb;
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
                if(!empty($TPCarRegistrationNumb)){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
             }
            if((empty($ClientCarRegistrationNumb))&&(empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                    )
                                 OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
               
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  
                
            date_default_timezone_set('Europe/London');
            
         
            
           /* $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));*/
            if(isset($_POST['dateOfBirth']) && ($_POST['dateOfBirth']!="")){
                $dateOf_Birth = $this->input->post('dateOfBirth');
            }elseif(isset($_POST['dateOfBirth'])=="0000-00-00"){
                $dateOf_Birth = '1993-12-31';
            }else{
                $dateOf_Birth = '1993-12-31';
            }
            
            $dobDay         = date("d", strtotime($dateOf_Birth));
            $dobMonth       = date("m", strtotime($dateOf_Birth));
            $dobYear        = date("Y", strtotime($dateOf_Birth));
          
                
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>2QFfQJZmch2JGCuqENlFGCbWRfzqqi5F</key>
                                    <leadgroup>50672</leadgroup>
                                    <site>0</site>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <term>$BDMName</term>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <jobtitle>" . $BDMName . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data2>" . $this->input->post('PositiononLiability') . "</data2>
                                    <data3>" . $this->input->post('TPInsurerDetailsName') . "</data3>
                                    <data4>" . $this->input->post('accidentCircumstances') . "</data4>
                                    <data5>" . $this->input->post('ClientStatusinAccident') . "</data5>
                                    <data6>" . $this->input->post('AreyouaLitigationFriend') . "</data6>
                                    <data7>" . $this->input->post('replacementInvoiceNumber') . "</data7>
                                    <data8>" . $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant') . "</data8>
                                    <data9>" . $this->input->post('DateofAccident') . "</data9>
                                    <data10>" . $this->input->post('TimeofAccident') . "</data10>
                                    <data12>" . $this->input->post('WhatInjuriesdidyousuffer') . "</data12>
                                    <data13>" . $this->input->post('DidyouseekMedicalAttention') . "</data13>
                                    <data14>" . $this->input->post('Whodoyoublamefortheaccident') . "</data14>
                                    <data15>" . $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame') . "</data15>
                                    <data16>" . $this->input->post('ClientCarRegistration') . "</data16>
                                    <data17>" . $this->input->post('ClientCarMakeModel') . "</data17>
                                    <data18>" . $this->input->post('ClientInsurer') . "</data18>
                                    <data19>" . $this->input->post('ClientPolicyNumber') . "</data19>
                                    <data20>" . $this->input->post('TPCarRegistration') . "</data20>
                                    <data21>" . $this->input->post('TPCarMakeModel') . "</data21>
                                    <data22>" . $this->input->post('Haveyouclaimedbefore') . "</data22>
                                    <data23>" . $this->input->post('Doyouwishtomakeaclaim') . "</data23>
                                    <data24>" . $this->input->post('Additionalnotes') . "</data24>
                                    <data25>" . $this->input->post('Isthisalinkedpassenger') . "</data25>
                                    <data26>" . $this->input->post('PreferredtimeofContact') . "</data26>
                                    <data27>" . $this->input->post('ClientsOccupation') . "</data27>
                                    <data28>" . $this->input->post('NINumber') . "</data28>
                                    <data29>" . $this->input->post('WastheClientVehiclerepairedortotalloss') . "</data29>
                                    <data30>" . $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage') . "</data30>
                                    <data31>" . $this->input->post('Werethepoliceinvolved') . "</data31>
                                    <data32>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data32>
                                    <data33>" . $this->input->post('Whatwastheweatherlike') . "</data33>
                                    <data34>" . $this->input->post('HowmanyOccupantsinthevehicle') . "</data34>
                                    <data35>" . $this->input->post('PreferredTimetoCall') . "</data35>
                                    <data36>" . $this->input->post('ClientPassword') . "</data36>
                                    <data40>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data40>
                                    <data41>" . $this->input->post('EmployersName-Address-TelephoneNumber') . "</data41>
                                    <data42>" . $this->input->post('MedNegOnly') . "</data42>
                                    <data44>" . $this->input->post('OLPLONLY') . "</data44>
                                    <data45>" . $this->input->post('CreditHireorVehicleReplacement') . "</data45>
                                    <data46>" . $this->input->post('IsInjuryOngoingInjury-Physio') . "</data46>
                                    <data47>" . $this->input->post('ThirdpartypolicyNumber') . "</data47>
                                    <data49>" . $this->input->post('InterpreterName') . "</data49>
                                    <data50>" . $this->input->post('Interpreterpaid') . "</data50>
                                  </lead>
                                </data>";

           

// consumercreditjustice Flg Integration 
            //str_replace(find,replace,string,count)
            $xml_data = str_replace('&', '&#38;', $xml_data);
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_ENCODING, "");
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);
               
            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);

            

            
//            $api_ids = array('consumercreditjustice_flg' => $lead_id , 'claimline365_flg' => $lead_id_1, 'round1solutions_fld' => $lead_id_2);
            $api_ids = array('consumercreditjustice_flg' => $lead_id);
            
            /* ---------------------------flg hit end------------------ */

//            if ($hit_message == 'OK' && $hit_message_2 == 'OK' && $hit_message_1 == 'OK') {
            if ($hit_message == 'OK') {
                $ClaimHnadlerUser  = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', 260);
                $handler_id = 260;
                $handle_rname = $ClaimHnadlerUser[0]->userName;
                $leadData = array(
                    'user_id' => $userID,
                    'wip_agent' => $agnet_name,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : Null,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                    'client_car_registration' => $ClientCarRegistrationNumb,
                    'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                    'client_insurer' => $this->input->post('ClientInsurer'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                    'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('ClientsOccupation'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                    'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                    'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ClientPassword'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                    'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => 245,
                    /* 'lead_status' => $this->input->post('leadstatusId'),*/
                    'campaign_id' => $campaign_id,
                    "number_of_passengers" => $this->input->post('number_of_passengers'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'api_inseration_id' => json_encode($api_ids),
                    "reference_id" => $reference_id,
                    "duplicateLeadofEmail" => $StatusofEmailDuplication,
                    "duplicateLeadofPhone" => $StatusofPhoneDuplication,
                    "duplicateLeadofPhone1" => $StatusofPhone1Duplication,
                    "duplicateLeadofpost_code" => $StatusofPostcodDuplication,
                    "duplicateLeadofVehicle" => $StatusofVehicleRegistrationDuplication,
                    "duplicateLeadofVehicleTP" => $StatusofTPVehicleRegistrationDuplication,
                    "flg_ccj_id" => $lead_ccj_id,
                   /* "flg_ros_id" => $lead_ros_id,*/
                    'handler_id'   => $handler_id,
                    'handler_name' => $handle_rname,
                    'created_at' => date("y-m-d H:i:s")
                );

                /*echo "<pre>";
                print_r($leadData);
               die();     */           
                
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
               
                
                
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }


                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new PI lead.' : 'User add new PI lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New PI Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');

//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW PI Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW PI Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Position on Liability</td>
                                                    <td>' . $getleadData[0]->position_on_liability  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Insurer Details-Name</td>
                                                    <td>' . $getleadData[0]->tp_insurer_details_name  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Accident Circumstances</td>
                                                    <td>' . $getleadData[0]->accident_circumstances  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Status in Accident</td>
                                                    <td>' . $getleadData[0]->client_status_in_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Are you a Litigation Friend</td>
                                                    <td>' . $getleadData[0]->are_you_a_litigation_friend  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Replacement invoice Number</td>
                                                    <td>' . $getleadData[0]->replacement_invoice_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>If litigation friend, name and date of birth of the claimant</td>
                                                    <td>' . $getleadData[0]->if_litigation_friend_name_and_date_of_birth_of_the_claimant  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Date of Accident</td>
                                                    <td>' . $date_of_accident . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Time of Accident</td>
                                                    <td>' . $getleadData[0]->time_of_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What Injuries did you suffer?</td>
                                                    <td>' . $getleadData[0]->what_injuries_did_you_suffer  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Did you seek Medical Attention</td>
                                                    <td>' . $getleadData[0]->did_you_seek_medical_attention  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Who do you blame for the accident?</td>
                                                    <td>' . $getleadData[0]->who_do_you_blame_for_the_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Do you have access to the details of the party you blame?</td>
                                                    <td>' . $getleadData[0]->do_you_have_access_to_the_details_of_the_party_you_blame  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Car Registration</td>
                                                    <td>' . $getleadData[0]->client_car_registration  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Car Make Model</td>
                                                    <td>' . $getleadData[0]->client_car_make_model  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Insurer</td>
                                                    <td>' . $getleadData[0]->client_insurer  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Policy Number</td>
                                                    <td>' . $getleadData[0]->client_policy_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Car Registration</td>
                                                    <td>' . $getleadData[0]->tp_car_registration  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Car Make Model</td>
                                                    <td>' . $getleadData[0]->tp_car_make_model  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Have you claimed before?</td>
                                                    <td>' . $getleadData[0]->have_you_claimed_before  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Do you wish to make a claim?</td>
                                                    <td>' . $getleadData[0]->do_you_wish_to_make_a_claim  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Additional notes</td>
                                                    <td>' . $getleadData[0]->additional_notes  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Is this a linked passenger</td>
                                                    <td>' . $getleadData[0]->is_this_a_linked_passenger  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Preferred time of Contact</td>
                                                    <td>' . $getleadData[0]->preferred_time_of_contact  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Clients Occupation</td>
                                                    <td>' . $getleadData[0]->clients_occupation  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>NI Number</td>
                                                    <td>' . $getleadData[0]->ni_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Was the Client Vehicle repaired or total loss</td>
                                                    <td>' . $getleadData[0]->was_the_client_vehicle_repaired_or_total_loss  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Has the client been paid out for hisher vehicle damage?</td>
                                                    <td>' . $getleadData[0]->has_the_client_been_paid_out_for_his_her_vehicle_damage  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Were the police involved?</td>
                                                    <td>' . $getleadData[0]->were_the_police_involved  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What was the exact location of the accident?</td>
                                                    <td>' . $getleadData[0]->what_was_the_exact_location_of_the_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What was the weather like?</td>
                                                    <td>' . $getleadData[0]->what_was_the_weather_like  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>How many Occupants in the vehicle</td>
                                                    <td>' . $getleadData[0]->how_many_occupants_in_the_vehicle  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Preferred Time to Call</td>
                                                    <td>' . $getleadData[0]->preferred_time_to_call  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Password</td>
                                                    <td>' . $getleadData[0]->client_password  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Was Accident reported or recorded in the accident Book?</td>
                                                    <td>' . $getleadData[0]->was_accident_reported_or_recorded_in_the_accident_book  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Employers Name, Address, Telephone Number</td>
                                                    <td>' . $getleadData[0]->employers_name_address_telephone_number  . '</td>
                                                </tr> 
                                                <tr>
                                                    <td>Med Neg Only</td>
                                                    <td>' . $getleadData[0]->med_neg_only  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>OL PL ONLY</td>
                                                    <td>' . $getleadData[0]->ol_pl_only  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Credit Hire or Vehicle Replacement Required</td>
                                                    <td>' . $getleadData[0]->credit_hire_or_vehicle_replacement  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Is Injury Ongoing Injury- Physio Required</td>
                                                    <td>' . $getleadData[0]->is_injury_on_going_injury_physio  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Third party policy Number</td>
                                                    <td>' . $getleadData[0]->third_party_policy_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Interpreter Name</td>
                                                    <td>' . $getleadData[0]->interpreter_name  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Interpreter paid</td>
                                                    <td>' . $getleadData[0]->interpreter_paid  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {
                            $realleadid = $leadInsert; 
                            $lead_status = 245;
                            
                            $leadDataCheker = array(
                                'first_name' => $this->input->post('firstName'),
                                'last_name' => $this->input->post('lastName'),
                                'phone_1' => $this->input->post('phone1'),
                                'email' => $this->input->post('email'),
                                'post_code' => $this->input->post('postcode'),
                                'campaign_id' => $campaign_id,
                                'exceptLead_id' => $realleadid
                             );
                            $isDuplicate = $this->BeforeRealLeadDuplicateCheck($leadDataCheker);
    
                            if($isDuplicate == 1){ 
                                $lead_status = 11; 
                            }
                            
                            $leadData = array(
                                'first_name' => $this->input->post('firstName'),
                                'last_name' => $this->input->post('lastName'),
                                'job_title' => $this->input->post('jobtitle'),
                                'phone_1' => $this->input->post('phone1'),
                                'phone_2' => $this->input->post('phone2'),
                                'email' => $this->input->post('email'),
                                'address' => $this->input->post('address'),
                                'address_2' => $this->input->post('address2'),
                                'address_3' => $this->input->post('address3'),
                                'town_city' => $this->input->post('towncity'),
                                'post_code' => $this->input->post('postcode'),
                                'lead_status'            => $lead_status,
                                'realleadID'            => $realleadid,
                                'isStatusChangeLocked'  => 1
                                );
                            $wipid =  $this->uri->segment(3);
                            
                            $updatelead = $this->Mods->update($table_name = 'leadswip', $conditionField = array('lead_id' => $wipid), $permissionId = $wipid, $data = $leadData);
                          /*  echo $updatelead;
                            die();*/
                            //$del = $this->Mods->delete_single($companyId = $wipid, $conditionField = 'lead_id', $table_name = 'leadswip'); 
                            if($updatelead){
                            $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                            redirect(base_url('Mod/manageWIP'));
                            }
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
              
                $xmlToArrany    = json_decode(json_encode($item), 1);
    
                
                $_SESSION['Errors'] = array($xmlToArrany['item']);
               // print_r($_SESSION['Errors']);
                /*$this->createLeadfromwip($id);*/
                /*$this->Leadswiptoreal($id);*/
                redirect(base_url('Mod/Leadswiptoreal/'.$id));
                
                }
            }
        }
    }
    public function updateLeadswip(){
        $campaignflg = 1;
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
        if ($lead_campaign[0]->campaign_name == "Energy Campaign"){
            if($this->form_validation->run('updateEnergyLead') == FALSE) {
            $this->editLeadswip($id);
            $campaignflg = 0;
            }
        }else{
            if($this->form_validation->run('aupdateLeadwip') == FALSE) {
            $this->editLeadswip($id);
            $campaignflg = 0;
            }
        }
        if($campaignflg ==1){

            date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id=$userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            $flg_ros_id      = $lead[0]->flg_ros_id;
            //echo 'flg_ccj_id'.$flg_ccj_id.'<br>';
            //echo 'flg_ros_id'.$flg_ros_id.'<br>';
            /*flg ids*/
            
            /*start of  of update checks*/
            $duplicateLead = "";      
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $company_id);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date)); 
            $dateOf_Birth = $this->input->post('dateOfBirth');
            ($dateOf_Birth) ? $dateOf_Birth : NULL;
            if($dateOf_Birth !=""){
                $dateOf_Birth = $dateOf_Birth;
            }else{
                $dateOf_Birth = NULL;
            }
            /*echo $dateOf_Birth;
            die();*/
            if ($lead_campaign[0]->campaign_name == "Energy Campaign"){
               
                $leadData = array(
                            "title" => $this->input->post('title'),
                            "first_name" => $this->input->post('firstName'),
                            "last_name" => $this->input->post('lastName'),
                            "company_name" => $companyName,
                            "job_title" => $this->input->post('jobtitle'),
                            "phone_1" => $this->input->post('phone1'),
                            "phone_2" => $this->input->post('phone2'),
                            "email" => $this->input->post('email'),
                            "address" => $this->input->post('address'),
                            "address_2" => $this->input->post('address2'),
                            "address_3" => $this->input->post('address3'),
                            "town_city" => $this->input->post('towncity'),
                            "post_code" => $this->input->post('postcode'),
                            "date_of_birth" => $dateOf_Birth,
                            /*'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,*/
                            "contact_phone" => $this->input->post('contactphone'),
                            "contact_sms" => $this->input->post('contactsms'),
                            "contact_email" => $this->input->post('contactemail'),
                            "contact_mail" => $this->input->post('contactmail'),
                            "contact_time" => $this->input->post('contacttime'),
                            "ec_repid" => $this->input->post('RepId'),
                            "ec_language" => $this->input->post('ECLanguage'),
                            "ec_auth_fname" => $this->input->post('AuthorizerFirstname'),
                            "ec_auth_lname" => $this->input->post('AuthorizerLastName'),
                            "ec_acc_fname" => $this->input->post('AccountHolderFirstName'),
                            "ec_acc_lname" => $this->input->post('AccountHolderLastName'),
                            "ec_state" => $this->input->post('State'),
                            "ec_relationship" => $this->input->post('Relationship'),
                            "ec_accountclass" => $this->input->post('AccountClass'),
                            "ec_salestype" => $this->input->post('SalesType'),
                            "ec_commodity" => $this->input->post('Commodity'),
                            "ec_accounttype" => $this->input->post('Accounttype'),
                            "ec_utillity" => $this->input->post('Utillity'),
                            "ec_plancode" => $this->input->post('PlanCode'),
                            "ec_accountnumber" => $this->input->post('AccountNumber'),
                            "ec_meternumber" => $this->input->post('MeterNumber'),
                            "ec_namekey" => $this->input->post('NameKey'),
                            "ec_servicezip" => $this->input->post('ServiceZip'),
                            "ec_servicecity" => $this->input->post('ServiceCity'),
                            "ec_servicestate" => $this->input->post('ServiceState'),
                            "ec_serviceaddress" => $this->input->post('ServiceAddress'),
                            "ec_servicepsuite" => $this->input->post('ServiceAptSuite'),
                            "ec_billingzip" => $this->input->post('BillingZip'),
                            "ec_billingcity" => $this->input->post('BillingCity'),
                            "ec_billingstate" => $this->input->post('BillingState'),
                            "ec_billingaddress" => $this->input->post('BillingAddress'),
                            "ec_billingapsuite" => $this->input->post('BillingAptSuite'),
                            "ec_budgetbilling" => $this->input->post('BudgetBilling'),
                            'lead_update_user_id' => $userID,
                            'lead_update_company_id' => $companyId,
                            'updated_at'                    => date("Y-m-d H:i:s"),
                        );
            }
            if (($lead_campaign[0]->campaign_name == "Car Hire")||($lead_campaign[0]->campaign_name == "Personal Injury")){
                /*echo "we must have to be in Car Hir or Personal injury campaign";
                die();*/
                $date_accident = $this->input->post('DateofAccident');                
                $date               = str_replace('/', '-', $date_accident);
                $date_of_accident   = date("Y-m-d", strtotime($date));            
                
                $leadData = array(

                        'first_name' => $this->input->post('firstName'),
                        'last_name' => $this->input->post('lastName'),
                        'job_title' => $this->input->post('jobtitle'),
                        'phone_1' => $this->input->post('phone1'),
                        'phone_2' => $this->input->post('phone2'),
                        'email' => $this->input->post('email'),
                        'address' => $this->input->post('address'),
                        'address_2' => $this->input->post('address2'),
                        'address_3' => $this->input->post('address3'),
                        'town_city' => $this->input->post('towncity'),
                        'post_code' => $this->input->post('postcode'),
                        "date_of_birth" => $dateOf_Birth,
                        'contact_phone' => $this->input->post('contactphone'),
                        'contact_sms' => $this->input->post('contactsms'),
                        'contact_email' => $this->input->post('contactemail'),
                        'contact_mail' => $this->input->post('contactmail'),
                        'contact_time' => $this->input->post('contacttime'),
                        'position_on_liability' => $this->input->post('PositiononLiability'),
                        'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                        'accident_circumstances' => $this->input->post('accidentCircumstances'),
                        'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                        'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                        'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                        'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                        'date_of_accident' => $date_of_accident,
                        'time_of_accident' => $this->input->post('TimeofAccident'),
                        'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                        'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                        'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                        'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                        'client_car_registration' => $ClientCarRegistrationNumb,
                        'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                        'client_insurer' => $this->input->post('ClientInsurer'),
                        'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                        'tp_car_registration' => $TPCarRegistrationNumb,
                        'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                        'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                        'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                        'additional_notes' => $this->input->post('Additionalnotes'),
                        'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                        'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                        'clients_occupation' => $this->input->post('ClientsOccupation'),
                        'ni_number' => $this->input->post('NINumber'),
                        'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                        'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                        'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                        'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                        'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                        'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                        'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                        'client_password' => $this->input->post('ClientPassword'),
                        'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                        'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                        'med_neg_only' => $this->input->post('MedNegOnly'),
                        'ol_pl_only' => $this->input->post('OLPLONLY'),
                        'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                        'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                        'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                        'interpreter_name' => $this->input->post('InterpreterName'),
                        'interpreter_paid' => $this->input->post('Interpreterpaid'),
                        'marketing_source' => $this->input->post('marketing_source'),                
                        "number_of_passengers" => $this->input->post('number_of_passengers'),
                        "passenger_1" => $this->input->post('passenger_1'),
                        "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                        "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                        "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                        "passenger_2" => $this->input->post('passenger_2'),
                        "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                        "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                        "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                        "passenger_3" => $this->input->post('passenger_3'),
                        "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                        "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                        "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                        "passenger_4" => $this->input->post('passenger_4'),
                        "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                        "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                        "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                        "passenger_5" => $this->input->post('passenger_5'),
                        "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                        "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                        "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                        "passenger_6" => $this->input->post('passenger_6'),
                        "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                        "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                        "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                        'lead_update_user_id' => $userID,
                        'lead_update_company_id' => $companyId,
                        "referred_by_your_name"         => $this->input->post('referred_by_your_name'),
                        "referrer_contact_number"       => $this->input->post('referrer_contact_number'),
                        "best_time_to_call_client"      => $this->input->post('best_time_to_call_client'),
                        "introducer_name"               => $this->input->post('introducer_name'),
                        "best_day_and_time_to_call"     => $this->input->post('best_day_and_time_to_call'),
                        "type_of_hire_car"              => $this->input->post('type_of_hire_car'),
                        "hire_provided_by"              => $this->input->post('hire_provided_by'),
                        "date_hire_provided"            => $this->input->post('date_hire_provided'),
                        "invoice_number"                => $this->input->post('invoice_number'),
                        "date_invoice_paid"             => $this->input->post('date_invoice_paid'),
                        "date_introducer_paid"          => $this->input->post('date_introducer_paid'),
                        "date_agent_paid"               => $this->input->post('date_agent_paid'),
                        "ref_date"                      => $this->input->post('ref_date'),
                        "rep_due"                       => $this->input->post('rep_due'),
                        'updated_at'                    => date("Y-m-d H:i:s"),

                );
            }
            if ($lead_campaign[0]->campaign_name == "Housing Disrepair"){  
                    $leadData = array(
                            "title" => $this->input->post('title'),
                            "first_name" => $this->input->post('firstName'),
                            "last_name" => $this->input->post('lastName'),
                            "company_name" => $companyName,
                            "job_title" => $this->input->post('jobtitle'),
                            "phone_1" => $this->input->post('phone1'),
                            "phone_2" => $this->input->post('phone2'),
                            "email" => $this->input->post('email'),
                            "address" => $this->input->post('address'),
                            "address_2" => $this->input->post('address2'),
                            "address_3" => $this->input->post('address3'),
                            "town_city" => $this->input->post('towncity'),
                            "post_code" => $this->input->post('postcode'),
                            "date_of_birth" => $dateOf_Birth,
                            "contact_phone" => $this->input->post('contactphone'),
                            "contact_sms" => $this->input->post('contactsms'),
                            "contact_email" => $this->input->post('contactemail'),
                            "contact_mail" => $this->input->post('contactmail'),
                            "contact_time" => $this->input->post('contacttime'),
                            "position_on_liability" => $this->input->post('PositiononLiability'),
                            "are_you_a_litigation_friend" => $this->input->post('AreyouaLitigationFriend'),
                            "replacement_invoice_number" => $this->input->post('replacement_invoice_number'),
                            "if_litigation_friend_name_and_date_of_birth_of_the_claimant" => $this->input->post('Iflitigationfriendnameanddateofbirthoftheclaimant'),
                            "have_you_claimed_before" => $this->input->post('Haveyouclaimedbefore'),
                            "additional_notes" => $this->input->post('additional_notes'),
                            "clients_occupation" => $this->input->post('ClientsOccupation'),
                            "ni_number" => $this->input->post('NINumber'),
                            "client_password" => $this->input->post('ClientPassword'),
                            "invoice_number" => $this->input->post('invoice_number'),
                            "marital_status" => $this->input->post('Maritalstatus'),
                            "full_address_of_property_if_different_from_the_one_you_are_livin" => $this->input->post('FullAddressofPropertyifdifferentfromtheoneyouarelivinginnow'),
                            "name_of_landlord_address" => $this->input->post('NameofLandlordAddress'),
                            "number_of_occupants_residing_in_the_house_including_children" => $this->input->post('NumberofoccupantsresidingintheHouseIncludingChildren'),
                            "names_and_date_of_birth_of_all_occupants" => $this->input->post('NamesandDateofBirthofalloccupants'),
                            "what_is_your_monthly_rent" => $this->input->post('WhatisyourmonthlyRent'),
                            "if_you_pay_weekly_how_much_do_you_pay" => $this->input->post('Ifyoupayweeklyhowmuchdoyoupay'),
                            "do_you_pay_rent_cash_or_dss" => $this->input->post('DoyoupayrentCashorDSS'),
                            "do_you_claim_housing_benefit" => $this->input->post('DoyouclaimHousingBenefit'),
                            "how_is_this_payment_made" => $this->input->post('Howisthispaymentmade'),
                            "do_you_have_a_copy_of_tenancy_agreement" => $this->input->post('DoyouhaveacopyofTenancyagreement'),
                            "nature_of_disrepair" => $this->input->post('NatureofDisrepair'),
                            "date_disrepair_first_notice" => $this->input->post('DateDisrepairfirstnotice'),
                            "were_you_injured" => $this->input->post('WereyouInjured'),
                            "description_of_injuries" => $this->input->post('DescriptionofInjuries'),
                            "have_you_noticed_any_issues_outside_the_house" => $this->input->post('Haveyounoticedanyissuesoutsidethehouse'),
                            "do_the_windows_and_doors_open_freely" => $this->input->post('Dothewindowsanddoorsopenfreely'),
                            "do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work" => $this->input->post('DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly'),
                            "date_triage_invoice_paid" => $this->input->post('DatetriageInvoicePaid'),
                            "office_use_only_rejection_reason" => $this->input->post('rejectionreason'),
                            "notes" => $this->input->post('Note'),
                            "preferred_date_to_call" => $this->input->post('preferred_date_to_call'),
                            "triage_invoive_number" => $this->input->post('triage_invoive_number'),
                            "date_instructed" => $this->input->post('date_instructed'),
                            "tenancy_document" => $this->input->post('tenancy_document'),
                            "copy_of_complaint_letter" => $this->input->post('copy_of_complaint_letter'),
                            "pictures_of_disrepair_supplied" => $this->input->post('pictures_of_disrepair_supplied'),
                            "date_hrd_noticed" => $this->input->post('date_HDR_noticed'),
                            'lead_update_user_id' => $userID,
                            'lead_update_company_id' => $companyId,
                            'updated_at'                    => date("Y-m-d H:i:s"),
                        );
            }
           
            /*echo "<pre>";
            print_r($leadData);
            die();*/
            $this->load->model('Mods');
            
            $updatelead = $this->Mods->update($table_name = 'leadswip', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);
            if ($updatelead){
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

            if ($lead_campaign[0]->campaign_short_name == "PI"){
                $note = "'user Update PI Lead'";
            }elseif($lead_campaign[0]->campaign_short_name == "HDR"){
                $note = "'user Update HDR Lead'";                
            }elseif($lead_campaign[0]->campaign_short_name == "CH"){
                $note = "'user Update CH Lead'";                
            }elseif($lead_campaign[0]->campaign_short_name == "EC"){
                $note = "'user Update EC Lead'";                
            } 
                                
                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'editLead',
                                    "module_id" => $id,
                                    "note" => $note,
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                
                
                $this->session->set_flashdata('Successupdatelead', 'Lead Status Record Update.');
                redirect(base_url('Mod/manageWIP'));
            }
            
        }                 
    }
    /*WIP Leds*/
    public function editLead($id = ""){
        $permission_view = $_SESSION['adminData']['Leads']['permission_view'];
        $permission_update = $_SESSION['adminData']['Leads']['permission_update'];
        $permission_delete = $_SESSION['adminData']['Leads']['permission_delete'];
        if($permission_update ==1){
             $this->load->model('Mods');
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';

            if (is_array($lead)) {

                $this->data['leadData']      = $lead[0];
                $lead_campaign               = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';            
                $this->data['lead_campaign'] = $lead_campaign;            

            } else {

                $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
                $this->data['leadData'] = '';
                $this->data['lead_campaign'] = "";            

            }

            if($lead_campaign[0]->campaign_short_name=="TR"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/editTRLead', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name=="SO"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/editSolicitor', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name=="MIB"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/editMIBlead', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name=="CICA"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/editCICAlead', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name=="EM"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/editEMPlead', $this->data);
                $this->load->view('Mod/footer/footer');  
            }else{
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/editLead', $this->data);                
                $this->load->view('Mod/footer/footer');     
            }    
            
        }else{
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/permissiontothis');                
            $this->load->view('Mod/footer/footer');  
        }
        
        
    }
    
    public function updateLead(){
        $campaignflg = 1;
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
        if ($lead_campaign[0]->campaign_name == "Energy Campaign"){
            if($this->form_validation->run('updateEnergyLead') == FALSE) {
            $this->editLead($id);
            $campaignflg = 0;
            }
        }else{
            if($this->form_validation->run('updateLead') == FALSE) {
            $this->editLead($id);
            $campaignflg = 0;
            }
        }
        if($campaignflg ==1){

            date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id=$userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            
            $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            $flg_ros_id      = $lead[0]->flg_ros_id;
            //echo 'flg_ccj_id'.$flg_ccj_id.'<br>';
            //echo 'flg_ros_id'.$flg_ros_id.'<br>';
            /*flg ids*/
            
            /*start of  of update checks*/
            $duplicateLead = "";      
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $company_id);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date)); 
            //echo $this->input->post('ClientCarRegistration');
            //echo $this->input->post('TPCarRegistration');
            /*
            echo '1hello-$user_id'.$user_id.'<br>';
            echo '2hello-$company_id'.$company_id.'<br>';
            echo '3hello-$email_address'.$email_address.'<br>';
            echo '4hello-$phone_number'.$phone_number.'<br>';
            echo '5hello-$date_of_accident'.$date_of_accident.'<br>';
            echo '6hello-$campaign_id'.$campaign_id.'<br>';
            */
            if ($lead_campaign[0]->campaign_name == "Energy Campaign"){
               
                $leadData = array(
                            "title" => $this->input->post('title'),
                            "first_name" => $this->input->post('firstName'),
                            "last_name" => $this->input->post('lastName'),
                            "company_name" => $companyName,
                            "job_title" => $this->input->post('jobtitle'),
                            "phone_1" => $this->input->post('phone1'),
                            "phone_2" => $this->input->post('phone2'),
                            "email" => $this->input->post('email'),
                            "address" => $this->input->post('address'),
                            "address_2" => $this->input->post('address2'),
                            "address_3" => $this->input->post('address3'),
                            "town_city" => $this->input->post('towncity'),
                            "post_code" => $this->input->post('postcode'),
                            "date_of_birth" => $this->input->post('dateOfBirth'),
                            "contact_phone" => $this->input->post('contactphone'),
                            "contact_sms" => $this->input->post('contactsms'),
                            "contact_email" => $this->input->post('contactemail'),
                            "contact_mail" => $this->input->post('contactmail'),
                            "contact_time" => $this->input->post('contacttime'),
                            "ec_repid" => $this->input->post('RepId'),
                            "ec_language" => $this->input->post('ECLanguage'),
                            "ec_auth_fname" => $this->input->post('AuthorizerFirstname'),
                            "ec_auth_lname" => $this->input->post('AuthorizerLastName'),
                            "ec_acc_fname" => $this->input->post('AccountHolderFirstName'),
                            "ec_acc_lname" => $this->input->post('AccountHolderLastName'),
                            "ec_state" => $this->input->post('State'),
                            "ec_relationship" => $this->input->post('Relationship'),
                            "ec_accountclass" => $this->input->post('AccountClass'),
                            "ec_salestype" => $this->input->post('SalesType'),
                            "ec_commodity" => $this->input->post('Commodity'),
                            "ec_accounttype" => $this->input->post('Accounttype'),
                            "ec_utillity" => $this->input->post('Utillity'),
                            "ec_plancode" => $this->input->post('PlanCode'),
                            "ec_accountnumber" => $this->input->post('AccountNumber'),
                            "ec_meternumber" => $this->input->post('MeterNumber'),
                            "ec_namekey" => $this->input->post('NameKey'),
                            "ec_servicezip" => $this->input->post('ServiceZip'),
                            "ec_servicecity" => $this->input->post('ServiceCity'),
                            "ec_servicestate" => $this->input->post('ServiceState'),
                            "ec_serviceaddress" => $this->input->post('ServiceAddress'),
                            "ec_servicepsuite" => $this->input->post('ServiceAptSuite'),
                            "ec_billingzip" => $this->input->post('BillingZip'),
                            "ec_billingcity" => $this->input->post('BillingCity'),
                            "ec_billingstate" => $this->input->post('BillingState'),
                            "ec_billingaddress" => $this->input->post('BillingAddress'),
                            "ec_billingapsuite" => $this->input->post('BillingAptSuite'),
                            "ec_budgetbilling" => $this->input->post('BudgetBilling'),
                            'lead_update_user_id' => $userID,
                            'lead_update_company_id' => $companyId,
                            'updated_at'                    => date("Y-m-d H:i:s"),
                        );
            }
            if (($lead_campaign[0]->campaign_name == "Car Hire")||($lead_campaign[0]->campaign_name == "Personal Injury")){
                /*echo "we must have to be in Car Hir or Personal injury campaign";
                die();*/
                $date_accident = $this->input->post('DateofAccident');                
                $date               = str_replace('/', '-', $date_accident);
                $date_of_accident   = date("Y-m-d", strtotime($date));            
                
                $leadData = array(

                        'first_name' => $this->input->post('firstName'),
                        'last_name' => $this->input->post('lastName'),
                        'job_title' => $this->input->post('jobtitle'),
                        'phone_1' => $this->input->post('phone1'),
                        'phone_2' => $this->input->post('phone2'),
                        'email' => $this->input->post('email'),
                        'address' => $this->input->post('address'),
                        'address_2' => $this->input->post('address2'),
                        'address_3' => $this->input->post('address3'),
                        'town_city' => $this->input->post('towncity'),
                        'post_code' => $this->input->post('postcode'),
                        'date_of_birth' => $this->input->post('dateOfBirth'),
                        'contact_phone' => $this->input->post('contactphone'),
                        'contact_sms' => $this->input->post('contactsms'),
                        'contact_email' => $this->input->post('contactemail'),
                        'contact_mail' => $this->input->post('contactmail'),
                        'contact_time' => $this->input->post('contacttime'),
                        'position_on_liability' => $this->input->post('PositiononLiability'),
                        'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                        'accident_circumstances' => $this->input->post('accidentCircumstances'),
                        'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                        'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                        'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                        'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                        'date_of_accident' => $date_of_accident,
                        'time_of_accident' => $this->input->post('TimeofAccident'),
                        'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                        'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                        'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                        'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                        'client_car_registration' => $ClientCarRegistrationNumb,
                        'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                        'client_insurer' => $this->input->post('ClientInsurer'),
                        'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                        'tp_car_registration' => $TPCarRegistrationNumb,
                        'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                        'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                        'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                        'additional_notes' => $this->input->post('Additionalnotes'),
                        'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                        'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                        'clients_occupation' => $this->input->post('ClientsOccupation'),
                        'ni_number' => $this->input->post('NINumber'),
                        'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                        'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                        'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                        'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                        'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                        'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                        'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                        'client_password' => $this->input->post('ClientPassword'),
                        'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                        'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                        'med_neg_only' => $this->input->post('MedNegOnly'),
                        'ol_pl_only' => $this->input->post('OLPLONLY'),
                        'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                        'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                        'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                        'interpreter_name' => $this->input->post('InterpreterName'),
                        'interpreter_paid' => $this->input->post('Interpreterpaid'),
                        'marketing_source' => $this->input->post('marketing_source'),                
                        "number_of_passengers" => $this->input->post('number_of_passengers'),
                        "passenger_1" => $this->input->post('passenger_1'),
                        "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                        "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                        "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                        "passenger_2" => $this->input->post('passenger_2'),
                        "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                        "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                        "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                        "passenger_3" => $this->input->post('passenger_3'),
                        "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                        "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                        "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                        "passenger_4" => $this->input->post('passenger_4'),
                        "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                        "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                        "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                        "passenger_5" => $this->input->post('passenger_5'),
                        "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                        "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                        "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                        "passenger_6" => $this->input->post('passenger_6'),
                        "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                        "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                        "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                        'lead_update_user_id' => $userID,
                        'lead_update_company_id' => $companyId,
                        "referred_by_your_name"         => $this->input->post('referred_by_your_name'),
                        "referrer_contact_number"       => $this->input->post('referrer_contact_number'),
                        "best_time_to_call_client"      => $this->input->post('best_time_to_call_client'),
                        "introducer_name"               => $this->input->post('introducer_name'),
                        "best_day_and_time_to_call"     => $this->input->post('best_day_and_time_to_call'),
                        "type_of_hire_car"              => $this->input->post('type_of_hire_car'),
                        "hire_provided_by"              => $this->input->post('hire_provided_by'),
                        "date_hire_provided"            => $this->input->post('date_hire_provided'),
                        "invoice_number"                => $this->input->post('invoice_number'),
                        "date_invoice_paid"             => $this->input->post('date_invoice_paid'),
                        "date_introducer_paid"          => $this->input->post('date_introducer_paid'),
                        "date_agent_paid"               => $this->input->post('date_agent_paid'),
                        "ref_date"                      => $this->input->post('ref_date'),
                        "rep_due"                       => $this->input->post('rep_due'),
                        'updated_at'                    => date("Y-m-d H:i:s"),

                );
            }
            if ($lead_campaign[0]->campaign_name == "Housing Disrepair"){  
                    $leadData = array(
                            "title" => $this->input->post('title'),
                            "first_name" => $this->input->post('firstName'),
                            "last_name" => $this->input->post('lastName'),
                            "company_name" => $companyName,
                            "job_title" => $this->input->post('jobtitle'),
                            "phone_1" => $this->input->post('phone1'),
                            "phone_2" => $this->input->post('phone2'),
                            "email" => $this->input->post('email'),
                            "address" => $this->input->post('address'),
                            "address_2" => $this->input->post('address2'),
                            "address_3" => $this->input->post('address3'),
                            "town_city" => $this->input->post('towncity'),
                            "post_code" => $this->input->post('postcode'),
                            "date_of_birth" => $this->input->post('dateOfBirth'),
                            "contact_phone" => $this->input->post('contactphone'),
                            "contact_sms" => $this->input->post('contactsms'),
                            "contact_email" => $this->input->post('contactemail'),
                            "contact_mail" => $this->input->post('contactmail'),
                            "contact_time" => $this->input->post('contacttime'),
                            "position_on_liability" => $this->input->post('PositiononLiability'),
                            "are_you_a_litigation_friend" => $this->input->post('AreyouaLitigationFriend'),
                            "replacement_invoice_number" => $this->input->post('replacement_invoice_number'),
                            "if_litigation_friend_name_and_date_of_birth_of_the_claimant" => $this->input->post('Iflitigationfriendnameanddateofbirthoftheclaimant'),
                            "have_you_claimed_before" => $this->input->post('Haveyouclaimedbefore'),
                            "additional_notes" => $this->input->post('additional_notes'),
                            "clients_occupation" => $this->input->post('ClientsOccupation'),
                            "ni_number" => $this->input->post('NINumber'),
                            "client_password" => $this->input->post('ClientPassword'),
                            "invoice_number" => $this->input->post('invoice_number'),
                            "marital_status" => $this->input->post('Maritalstatus'),
                            "full_address_of_property_if_different_from_the_one_you_are_livin" => $this->input->post('FullAddressofPropertyifdifferentfromtheoneyouarelivinginnow'),
                            "name_of_landlord_address" => $this->input->post('NameofLandlordAddress'),
                            "number_of_occupants_residing_in_the_house_including_children" => $this->input->post('NumberofoccupantsresidingintheHouseIncludingChildren'),
                            "names_and_date_of_birth_of_all_occupants" => $this->input->post('NamesandDateofBirthofalloccupants'),
                            "what_is_your_monthly_rent" => $this->input->post('WhatisyourmonthlyRent'),
                            "if_you_pay_weekly_how_much_do_you_pay" => $this->input->post('Ifyoupayweeklyhowmuchdoyoupay'),
                            "do_you_pay_rent_cash_or_dss" => $this->input->post('DoyoupayrentCashorDSS'),
                            "do_you_claim_housing_benefit" => $this->input->post('DoyouclaimHousingBenefit'),
                            "how_is_this_payment_made" => $this->input->post('Howisthispaymentmade'),
                            "do_you_have_a_copy_of_tenancy_agreement" => $this->input->post('DoyouhaveacopyofTenancyagreement'),
                            "nature_of_disrepair" => $this->input->post('NatureofDisrepair'),
                            "date_disrepair_first_notice" => $this->input->post('DateDisrepairfirstnotice'),
                            "were_you_injured" => $this->input->post('WereyouInjured'),
                            "description_of_injuries" => $this->input->post('DescriptionofInjuries'),
                            "have_you_noticed_any_issues_outside_the_house" => $this->input->post('Haveyounoticedanyissuesoutsidethehouse'),
                            "do_the_windows_and_doors_open_freely" => $this->input->post('Dothewindowsanddoorsopenfreely'),
                            "do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work" => $this->input->post('DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly'),
                            "date_triage_invoice_paid" => $this->input->post('DatetriageInvoicePaid'),
                            "office_use_only_rejection_reason" => $this->input->post('rejectionreason'),
                            "notes" => $this->input->post('Note'),
                            "preferred_date_to_call" => $this->input->post('preferred_date_to_call'),
                            "triage_invoive_number" => $this->input->post('triage_invoive_number'),
                            "date_instructed" => $this->input->post('date_instructed'),
                            "tenancy_document" => $this->input->post('tenancy_document'),
                            "copy_of_complaint_letter" => $this->input->post('copy_of_complaint_letter'),
                            "pictures_of_disrepair_supplied" => $this->input->post('pictures_of_disrepair_supplied'),
                            "date_hrd_noticed" => $this->input->post('date_HDR_noticed'),
                            'lead_update_user_id' => $userID,
                            'lead_update_company_id' => $companyId,
                            'updated_at'                    => date("Y-m-d H:i:s"),
                        );
            } 
            
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Lead Updated');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = ' Lead Updated - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Updated Lead </h2>
                                            <p>Please be advised that the following lead has been edited and a change to the lead has been made</p>
                                            <table>
                                                
                                                <tr>
                                                    <td>Email</td>
                                                    <td>'. $this->input->post('email') .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $this->input->post('firstName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $this->input->post('lastName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Phone</td>
                                                    <td>' . $this->input->post('phone1') . '</td>
                                                </tr>
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        $this->mailer->send();
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            /* echo 'after exception Hello';*/
            /*flf update*/
            if($this->input->post('dateOfBirth')=="0000-00-00"){
                $dobDay = 1;
                $dobMonth = 1;
                $dobYear = 1990;
            }else{
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            }
            
                if($lead_campaign[0]->campaign_name != "Energy Campaign"){
                    if($flg_ccj_id != NULL){
                    $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead>
                                        <key>2QFfQJZmch2JGCuqENlFGCbWRfzqqi5F</key>
                                        <id>".$flg_ccj_id."</id>
                                        <firstname>" . $this->input->post('firstName') . "</firstname>
                                        <lastname>" . $this->input->post('lastName') . "</lastname>
                                        <jobtitle>" . $this->input->post('jobtitle') . "</jobtitle>
                                        <phone1>" . $this->input->post('phone1') . "</phone1>
                                        <phone2>" . $this->input->post('phone2') . "</phone2>
                                        <email>" . $this->input->post('email') . "</email>
                                        <address>" . $this->input->post('address') . "</address>
                                        <address2>" . $this->input->post('address2') . "</address2>
                                        <address3>" . $this->input->post('address3') . "</address3>
                                        <towncity>" . $this->input->post('towncity') . "</towncity>
                                        <postcode>" . $this->input->post('postcode') . "</postcode>
                                        <dobday>" . $dobDay . "</dobday>
                                        <dobmonth>" . $dobMonth . "</dobmonth>
                                        <dobyear>" . $dobYear . "</dobyear>
                                        <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                        <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                        <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                        <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                        <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                        <data2>" . $this->input->post('PositiononLiability') . "</data2>
                                        <data3>" . $this->input->post('TPInsurerDetailsName') . "</data3>
                                        <data4>" . $this->input->post('accidentCircumstances') . "</data4>
                                        <data5>" . $this->input->post('ClientStatusinAccident') . "</data5>
                                        <data6>" . $this->input->post('AreyouaLitigationFriend') . "</data6>
                                        <data7>" . $this->input->post('replacementInvoiceNumber') . "</data7>
                                        <data8>" . $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant') . "</data8>
                                        <data9>" . $this->input->post('DateofAccident') . "</data9>
                                        <data10>" . $this->input->post('TimeofAccident') . "</data10>
                                        <data12>" . $this->input->post('WhatInjuriesdidyousuffer') . "</data12>
                                        <data13>" . $this->input->post('DidyouseekMedicalAttention') . "</data13>
                                        <data14>" . $this->input->post('Whodoyoublamefortheaccident') . "</data14>
                                        <data15>" . $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame') . "</data15>
                                        <data16>" . $this->input->post('ClientCarRegistration') . "</data16>
                                        <data17>" . $this->input->post('ClientCarMakeModel') . "</data17>
                                        <data18>" . $this->input->post('ClientInsurer') . "</data18>
                                        <data19>" . $this->input->post('ClientPolicyNumber') . "</data19>
                                        <data20>" . $this->input->post('TPCarRegistration') . "</data20>
                                        <data21>" . $this->input->post('TPCarMakeModel') . "</data21>
                                        <data22>" . $this->input->post('Haveyouclaimedbefore') . "</data22>
                                        <data23>" . $this->input->post('Doyouwishtomakeaclaim') . "</data23>
                                        <data24>" . $this->input->post('Additionalnotes') . "</data24>
                                        <data25>" . $this->input->post('Isthisalinkedpassenger') . "</data25>
                                        <data26>" . $this->input->post('PreferredtimeofContact') . "</data26>
                                        <data27>" . $this->input->post('ClientsOccupation') . "</data27>
                                        <data28>" . $this->input->post('NINumber') . "</data28>
                                        <data29>" . $this->input->post('WastheClientVehiclerepairedortotalloss') . "</data29>
                                        <data30>" . $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage') . "</data30>
                                        <data31>" . $this->input->post('Werethepoliceinvolved') . "</data31>
                                        <data32>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data32>
                                        <data33>" . $this->input->post('Whatwastheweatherlike') . "</data33>
                                        <data34>" . $this->input->post('HowmanyOccupantsinthevehicle') . "</data34>
                                        <data35>" . $this->input->post('PreferredTimetoCall') . "</data35>
                                        <data36>" . $this->input->post('ClientPassword') . "</data36>
                                        <data40>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data40>
                                        <data41>" . $this->input->post('EmployersName-Address-TelephoneNumber') . "</data41>
                                        <data42>" . $this->input->post('MedNegOnly') . "</data42>
                                        <data44>" . $this->input->post('OLPLONLY') . "</data44>
                                        <data45>" . $this->input->post('CreditHireorVehicleReplacement') . "</data45>
                                        <data46>" . $this->input->post('IsInjuryOngoingInjury-Physio') . "</data46>
                                        <data47>" . $this->input->post('ThirdpartypolicyNumber') . "</data47>
                                        <data49>" . $this->input->post('InterpreterName') . "</data49>
                                        <data50>" . $this->input->post('Interpreterpaid') . "</data50>
                                      </lead>
                                    </data>";
                             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                            $ch = curl_init($URL);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                            curl_setopt($ch, CURLOPT_POST, 1);
                        $xml_data = str_replace('&', '&#38;', $xml_data);
                            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                                'Content-Type: application/xml',
                                'Content-Length: ' . strlen($xml_data))
                            );
                            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                            $output = curl_exec($ch);
                        }
                }
                   
            
            //die();
            
            $this->load->model('Mods');
            
            $updatelead = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);
            
            $sqlCheckDuplicateLead = "SELECT count(*) AS 'CountoFDuplicateEntery' FROM `leads` WHERE user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";
            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            
            $duplicateLead = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable, Duplicate Lead Entery Found." : "";
            // if (!empty($duplicateLead)){// $this->session->set_flashdata('duplicateLeadError', $duplicateLead);// $this->addLead($id);// }}
            $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone'  ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";   
       /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'inside not empty';*/
    }else{
       /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'outside empty';*/
        $StatusofPhone1Duplication =0;
    }
    
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
            
    if(!empty($ClientCarRegistrationNumb)){
      /*duplicate Client Vehicle*/
    $sqlCheckDuplicateVehicle = "SELECT count(*) AS 'CountoFDuplicateVehicl' 
                                FROM `leads` WHERE client_car_registration = '$ClientCarRegistrationNumb' 
                                OR tp_car_registration = '$ClientCarRegistrationNumb' ";
    $CheckDuplicateVehicle    = $this->db->query($sqlCheckDuplicateVehicle)->result_array();
    $duplicateLeadofVehicle   = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? "1" : " ";
   
    //$duplicateLeadofVehiclemessg      = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? " Both are checked 1" : "";
    $StatusofVehicleRegistrationDuplication = $duplicateLeadofVehicle;
    }    
    
    if(!empty($TPCarRegistrationNumb)){
        /*duplicate Client TPVehicle*/
    $sqlCheckDuplicateVehicleTP = "SELECT count(*) AS 'CountoFDuplicateVehiclTP' 
                                FROM `leads` WHERE client_car_registration = '$TPCarRegistrationNumb' 
                                OR tp_car_registration = '$TPCarRegistrationNumb' ";
    $CheckDuplicateVehicleTP    = $this->db->query($sqlCheckDuplicateVehicleTP)->result_array();
    $duplicateLeadofVehicleTP   = ($CheckDuplicateVehicleTP[0]['CountoFDuplicateVehiclTP'] > 0) ? "1" : " ";
    $StatusofTPVehicleRegistrationDuplication = $duplicateLeadofVehicleTP; 
    }       
    
/*echo '<pre>';
echo $id.' leadid';
print_r($StatusofPhone1Duplication);
echo "Here first statuses of duplications<br>"; */           
            if (empty($duplicateLead) || !empty($duplicateLead)){
            if((!empty($ClientCarRegistrationNumb))&&(!empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    tp_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
            else { 
                if(!empty($ClientCarRegistrationNumb)){
                //echo 'inside client car='.$ClientCarRegistrationNumb;
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
                if(!empty($TPCarRegistrationNumb)){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
            }
            if((empty($ClientCarRegistrationNumb))&&(empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                    )
                                 OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
                
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  

        
        /*echo "<pre>";
        echo $duplicateLeadofEmail;
        echo '<br>';
        echo $duplicateLeadofPhone;
        echo '<br>';
        echo $duplicateLeadofPhone1;
        echo '<br>';
        echo $duplicateLeadofpost_code;
        echo '<br>';
        echo $duplicateLeadofVehicle;
        echo '<br>';
        echo $duplicateLeadofVehiclemessg;
        die();*/
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID          = $_SESSION['adminData']['user_id'];
            $getCompanyID    = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);        
            $companyId       = $getCompanyID[0]->company_id;
            $BDMName         = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName  = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName     = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                if ($updatelead){ 
                    $this->load->model('Mods');
                    $getlinkedrecrd=$this->Mods->getIdByName($table_name = "linked_leads", $condition = "lead_id", $data = $updatelead);
                    
                    if($getlinkedrecrd !=NULL){
                        $num = 0;
                        if ($checkLinkedLead){
                               foreach ($getlinkedrecrd as $dblinkedLead){
                                    foreach ($checkLinkedLead as $linkedLead){
                                      if(($id != $linkedLead['lead_id'])&&(($dblinkedLead->link_lead_id) != ($linkedLead['lead_id']))){
                                         $linkLeadData = array( 
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $linkedLead['LinkedLead'], 
                                                ); 
                                        $num = $this->db->get_where('linked_leads', $linkLeadData)->num_rows();
                                       
                                        if($num == 0){ $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData); }
                                        $linkLeadData1 = array(
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $lead_campaign[0]->campaign_name.' During Update with new date-'.$num,
                                                );
                                        $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                    }
                                    
                                }
                            }
                               /* echo '<br>'.'After loop array';
                                echo '<pre>';
                                print_r($linkLeadData);
                                echo '<br>'.'nothing in this array';*/
                        }
                    }else{
                        if ($checkLinkedLead){                        
                            foreach ($checkLinkedLead as $linkedLead){
                                if($id != $linkedLead['lead_id']){
                                     $linkLeadData = array( 
                                    'lead_id'       => $updatelead, 
                                    'link_lead_id'  => $linkedLead['lead_id'], 
                                    'status'        => $linkedLead['LinkedLead'], 
                                    ); 
                                    
                                    $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData);
                                
                                    $linkLeadData1 = array(
                                         'lead_id'       => $updatelead, 
                                         'link_lead_id'  => $linkedLead['lead_id'], 
                                         'status'        => $lead_campaign[0]->campaign_name.' During Update with new date',
                                     );
                                    $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                }
                                
                            }
                        } 
                    }
                    //echo '<br>'.'linked data new data';
                    //echo '<pre>';
                    //print_r($checkLinkedLead);
                    
                }
            }
            /*end of update checks*/
            /*echo '<pre>';
            print_r($lead);
            die();*/
                
            if ($updatelead){
                

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

            if ($lead_campaign[0]->campaign_short_name == "PI"){
                $note = "'user Update PI Lead'";
            }elseif($lead_campaign[0]->campaign_short_name == "HDR"){
                $note = "'user Update HDR Lead'";                
            }elseif($lead_campaign[0]->campaign_short_name == "CH"){
                $note = "'user Update CH Lead'";                
            }elseif($lead_campaign[0]->campaign_short_name == "EC"){
                $note = "'user Update EC Lead'";                
            } 
                                
                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'editLead',
                                    "module_id" => $id,
                                    "note" => $note,
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                
                
                $this->session->set_flashdata('Successupdatelead', 'Lead Status Record Update.');
                 //$this->editLead($id);
               /* redirect(base_url('Mod/manageLeads'));*/
                redirect(base_url('Mod/editLead/'.$id));
            }
            
        }                 
    }

// Done    
    
    public function changeStatusMultipleLeads(){
       $dualidFlg = 0;
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
        $this->load->model('Mods');
        
        foreach($json_data as $singlearr){
        $sql_Singlelead      = "SELECT leads.lead_id, leads.first_name, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id  WHERE lead_id = $singlearr ";
            $Singlelead             = $this->db->query($sql_Singlelead)->result();
            $OneCampaign_id         = $Singlelead[0]->campaign_id;
        }
       
        $leadrecord = array();
        $campaignrecords = array();
        foreach($json_data as $singlearr){
            // echo $singlearr;
            $sql_leads      = "SELECT leads.lead_id, leads.first_name, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id  WHERE lead_id = $singlearr ";
            $lead          = $this->db->query($sql_leads)->result();
           array_push($leadrecord, $lead);
           array_push($campaignrecords, $lead[0]->campaign_id);
        if($OneCampaign_id != $lead[0]->campaign_id){
            $dualidFlg = 1;
        }
        if (is_array($lead)) {
            
            //$this->data['LeadRecords'] = $lead[0];
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $this->data['leadsStatuses']    = $leadsStatuses;
            
        }
    }
        $this->data['LeadRecords'] = $leadrecord;
        $this->data['CampaignId'] = $campaign_id;
        $this->data['DualCampaignIdFlg'] = $dualidFlg;
        
      
        
        $this->headerV($this->title="Leads Portal");
/* $this->changeLeadStatus($id);*/
        $this->load->view('Mod/leads/changeMultipleLeadStatus', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function Multiple_Delete_Leads(){
       /* $sql_userrecd = "select firstName, lastName, email, avatar from users where id = " . $_SESSION['adminData']['user_id'];
                $user_resultofema = $this->db->query($sql_userrecd)->result();
                $loggedin_email= $user_resultofema[0]->email;*/
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
//        $json_data = json_encode($array);
        /*echo "<pre>";
        print_r($json_data);
        */
        $this->load->model('Mods');
        $leadrecord = array();
        foreach($json_data as $singlearr){
            $del = $this->Mods->delete_single($companyId = $singlearr, $conditionField = 'lead_id', $table_name = 'leads');
        }
       
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/manageLeads');
        $this->load->view('Mod/footer/footer');
        
    }
    public function AddMultipleLeadsNotes(){
      
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
        
        $this->load->library('ckeditor');
		$this->load->library('ckfinder');
        $this->ckeditor->basePath = base_url().'assets/ckeditor/';
		$this->ckeditor->config['toolbar'] = array(
        array( 'Source', '-', 'Bold', 'Italic', 'Underline', '-','Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo','-','NumberedList','BulletedList','-','Link','Unlink','-','TextColor','Format','Font','FontSize'));
            $this->ckeditor->config['language'] = 'en';
            $this->ckeditor->config['allowedContent'] = true;
        
        $this->load->model('Mods');
        $leadrecord = array();
        foreach($json_data as $singlearr){
            // echo $singlearr;
            $sql_leads      = "SELECT leads.lead_id, leads.first_name, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id  WHERE lead_id = $singlearr ";
            $lead          = $this->db->query($sql_leads)->result();
           array_push($leadrecord, $lead);
        if (is_array($lead)) {
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $this->data['leadsStatuses']    = $leadsStatuses;
            
        }
    }
        $this->data['LeadRecords'] = $leadrecord;        
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/addMultipledsNotes', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function SendMultipleLeadsEmailsToClient(){
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
        
        $this->load->model('Mods');
        $leadrecord = array();
        foreach($json_data as $singlearr){
            // echo $singlearr;
            $sql_leads      = "SELECT leads.lead_id, leads.first_name, leads.email, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id  WHERE lead_id = $singlearr ";
            $lead          = $this->db->query($sql_leads)->result();
           array_push($leadrecord, $lead);
        if (is_array($lead)) {
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $this->data['leadsStatuses']    = $leadsStatuses;
            
            }
        }
        $this->data['LeadRecords'] = $leadrecord;
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/emails/MultipledsEmailsOfClient', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function MultipleLeadsUserChange(){
       	$dualidFlg = 0;
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
        $this->load->model('Mods');
        $users                          = $this->Mods->getUsers();
       
        $Allusers = array();
            foreach($users as $singleuser){
                    $temp = array();
                    $temp['id'] = $singleuser->id;
                    $temp['userName'] = $singleuser->userName;
                    $temp['role_name'] = $singleuser->role_name;
                    $temp['company_name'] = $singleuser->company_name;
                    array_push($Allusers, $temp);
            }
        
        $leadrecord = array();
        $campaignrecords = array();
        foreach($json_data as $singlearr){
            // echo $singlearr;
            $sql_leads      = "SELECT leads.lead_id, leads.email, leads.first_name, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name, UZR.userName AS UserName, UZRCH.userName AS ClaimHandlerName, UZRWIP.userName AS WIPAgentName,  CONCAT(first_name, ' ', last_name) as FullNameOfClient  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id INNER JOIN users UZR ON UZR.id = leads.user_id LEFT JOIN users UZRCH ON UZRCH.id = leads.handler_id LEFT JOIN users UZRWIP ON UZRWIP.id = leads.agent_id WHERE lead_id = $singlearr ";
            $lead          = $this->db->query($sql_leads)->result();
           array_push($leadrecord, $lead);
        if (is_array($lead)) {
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $this->data['leadsStatuses']    = $leadsStatuses;
        }
    }
        $this->data['LeadRecords'] = $leadrecord;
        $this->data['AllUersList'] = $Allusers;
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/MultipledsUserChange', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function changeLeadStatus($id = ""){
       $permission_view = $_SESSION['adminData']['Leads']['permission_view'];
        $permission_update = $_SESSION['adminData']['Leads']['permission_update'];
        $perChngStatus = $_SESSION['adminData']['Leads']['permission_changestatus'];
        $permission_delete = $_SESSION['adminData']['Leads']['permission_delete'];
        if($permission_update == 1 || $perChngStatus == 1){
             $this->load->model('Mods');
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            if (is_array($lead)) {
                $this->data['changeLeadStatus'] = $lead[0];
                $campaign_id                    = $lead[0]->campaign_id;
                $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
                $this->data['leadsStatuses']    = $leadsStatuses;            
            } else {
                $this->session->set_flashdata('changeLeadStatusDataError', 'Record Not Exists.');
                $this->data['changeLeadStatus'] = '';
                $this->data['leadsStatuses']    = '';  
            }

            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/changeLeadStatus', $this->data);
            $this->load->view('Mod/footer/footer');
            
        }else{
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/permissiontothis');                
            $this->load->view('Mod/footer/footer');  
        }
        
        
    }
     public function addMultilpleLeadNotes(){
        $SelectedLeads = unserialize(base64_decode($_POST['Multipleleads_Id']));
         if ($this->form_validation->run('addLeadNote') == FALSE) {
            $this->manageLeads($id);
        } else {
             $bdmEmailId = '';
                date_default_timezone_set('Europe/London');
                foreach($SelectedLeads as $singlead){
                        $id = $singlead;
                        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
                    $leadNoteData = array(
                    "lead_id" => $lead[0]->lead_id, 
                    "lead_status_id" => $lead[0]->lead_status, 
                    "user_id" => $_SESSION['adminData']['user_id'], 
                    "note" => $this->input->post('note'), 
                    "added_date" => date('Y-m-d H:i:s')
                    );
                    $addLeadNote = $this->Mods->single_insert('lead_notes', $leadNoteData); 
                    
                   
                    
                if ($addLeadNote){
                $this->load->library('user_agent');
                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'lead_notes',                        
                        "module_name" => 'addLeadNote',
                        "module_id" => $addLeadNote,
                        "note" => 'User Add a new Lead Note By using Multiple Selection',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                
                
                
            $sql = "select 
                        users.email, 
                        leads.first_name, 
                        leads.last_name, 
                        leads.phone_1, 
                        lead_statuses.status_name, 
                        lead_statuses.lead_type, 
                        lead_notes.note, 
                        company_name,
                        lead_notes.added_date 
                    from 
                        users 
                    INNER JOIN 
                        leads 
                    ON 
                        leads.user_id = users.id 
                    INNER JOIN 
                        lead_notes 
                    ON 
                        leads.lead_id = lead_notes.lead_id 
                    INNER JOIN 
                        lead_statuses 
                    ON 
                        lead_notes.lead_status_id = lead_statuses.id 
                    WHERE 
                        leads.lead_id = $id 
                    AND 
                        lead_notes.lead_note_id = $addLeadNote";
                       
             $results = $this->db->query($sql)->result();
                  /*  echo $id."Hi id<br>";
                    echo $addLeadNote."Hi Note id<br>";
                    echo "<pre>";
                    print_r($results);
                    die();*/
            $comp_name          = ($results) ? $results[0]->company_name : 'All';
            $userData           = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $_SESSION['adminData']['user_id']);
            $Note_addedby       = $userData[0]->firstName." ".$userData[0]->lastName;
            $username           = $userData[0]->userName;
            $bdmNama            = $userData[0]->bdm_name;
            $bdmEmailId         = get_userEmailByName($bdmNama);
                
            
            $mailTitle = $results[0]->first_name . "-" . $results[0]->last_name . "-" . $results[0]->phone_1 . "-" . $results[0]->status_name;

            

                        //Recipients
                       $notes = str_replace(" ","&nbsp;",$results[0]->note); 
                       $email_to  = $results[0]->email;
                        
                        $email_sub = 'Leads Portal - Notes Change | ' . $mailTitle ;
                        
                        $email_body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Leads Portal - Status Change' . $mailTitle . '</h2>
                                            <h2>Note:</h2><p style="color:#f3612a;">'.$notes.'</p>
                                            <table>
                                            
                                                <tr>
                                                    <th>Sr #</th>
                                                    <th>Partner Name</th>
                                                    <th>User Name</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    
                                                    <th>Note Added by</th>
                                                    <th>Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>1</td>
                                                    <td>'. $comp_name . '</td>
                                                    <td>'. $username . '</td>
                                                    <td>'. $results[0]->first_name . '</td>
                                                    <td>'. $results[0]->last_name . '</td>
                                                    <td>'. $results[0]->phone_1 . '</td>
                                                    <td>'. $results[0]->status_name . '</td>
                                                    <td>'. $results[0]->lead_type . '</td>
                                                    
                                                    <td>'. $Note_addedby . '</td>
                                                    <td>'. $results[0]->added_date . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        $this->mailer->CharSet = 'UTF-8';           
                    $this->sendmyemails($email_to,$bdmEmailId,$email_sub,$email_body);
                }
            }
             $this->session->set_flashdata('SuccessupdateChangeleadStatus', 'Lead Status Record Update.');
            $this->manageLeads();
         }
     }
    public function MultipleupdateChangeLeadStatus(){
        $SelectedLeads = unserialize(base64_decode($_POST['Multipleleads_Id']));
        //print_r($postvalue); // Your desired array data will be printed here
        //$SelectedLeads = $_POST['Multipleleads_Id'];
       /* echo "<pre>";
        print_r($SelectedLeads);
        die();*/
        
        if ($this->form_validation->run('updateChangeLeadStatus') == FALSE) {
            $this->manageLeads($id);
        } else {
            $bdmEmailId = '';
            date_default_timezone_set('Europe/London');
            foreach($SelectedLeads as $singlead){ 
               $id = $singlead;
            $leadData = array(

                'lead_status'               => $this->input->post('status'),
                'status_change_by_user_id'  => $_SESSION['adminData']['user_id'],
                'date_of_status_change'     => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updateleadStatus = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);            
            
            if ($updateleadStatus){
                   $user_of_lead_email ='';
                   $reciveremail = '';
                   $lead_data       = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
             
                   $campaign_data   = ($lead_data[0]->campaign_id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead_data[0]->campaign_id) : '';
                   $user_data = ($lead_data[0]->user_id) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead_data[0]->user_id) : '';
                
                //echo $lead_data[0]->user_id;
                
                $sql_userrecd       = "select email, bdm_name from users where id = " . $lead_data[0]->user_id;
                $user_resultofema   = $this->db->query($sql_userrecd)->result();
                $user_of_lead_email = $user_resultofema[0]->email;
                $bdmNama            = $user_resultofema[0]->bdm_name;
                $bdmEmailId         = get_userEmailByName($bdmNama);
                $reciveremail       = $user_of_lead_email;
                
                   $status_data     = ($lead_data[0]->lead_status) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $lead_data[0]->lead_status) : '';

                    $status_log_data = array(
                        
                        "lead_id"           => $lead_data[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $lead_data[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                 
                $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'leads',                        
                        "module_name" => 'changeLeadStatus',
                        "module_id" => $id,
                        "note" => 'User Update Lead Ststus By using Multiple selections to ' . $status_data[0]->status_name,
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                   
                   
                   $mailTitle       = $campaign_data[0]->campaign_short_name . ' Lead Status Changed - Client Name: ' . $lead_data[0]->first_name . ' ' . $lead_data[0]->last_name . ' - Lead Status: ' . $status_data[0]->status_name . ' - User Name: ' . $user_data[0]->userName;
                    
                       

                        //Recipients
                       
                        //$this->mailer->setFrom('kwikcarhire12@gmail.com', $campaign_data[0]->campaign_short_name . ' Leads Status Changed');
                        //$this->mailer->addAddress($reciveremail);
                        //$this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $email_to           = $reciveremail;
                        $email_sub  = $mailTitle;
                        $email_body   = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>Sr #</th>
                                                    <th>Client First Name</th>
                                                    <th>Client Last Name</th>
                                                    <th>Client Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Status Changed By</th>
                                                   <th>Date Of Status Change</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>1</td>
                                                    <td>'. $lead_data[0]->first_name . '</td>
                                                    <td>'. $lead_data[0]->last_name . '</td>
                                                    <td>'. $lead_data[0]->phone_1 . '</td>
                                                    <td>'. $status_data[0]->status_name . '</td>
                                                    <td>'. $status_data[0]->lead_type . '</td>
                                                    <td>'. $user_data[0]->userName . '</td>
                                                    <td>'. $lead_data[0]->date_of_status_change . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';
                        $this->sendmyemails($email_to,$bdmEmailId,$email_sub,$email_body);
                }
            }
            $_SESSION['session_url_of_status'] = 'changeLeadStatus/'.$id;
            $this->session->set_flashdata('SuccessupdateChangeleadStatus', 'Lead Status Record Update.');
            
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/leads');
                $this->load->view('Mod/footer/footer');
            //redirect(('Mod/manageLeads'));
        }
        
    }
     public function updateChangeLeadStatus(){
        
        /*$sql_userrecd = "select firstName, lastName, email, avatar from users where id = " . $_SESSION['adminData']['user_id'];
                $user_resultofema = $this->db->query($sql_userrecd)->result();
                $loggedin_email= $user_resultofema[0]->email;*/
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('changeLeadStatusDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateChangeLeadStatus') == FALSE) {
            $this->changeLeadStatus($id);
        } else {
            $bdmEmailId = '';
            date_default_timezone_set('Europe/London');
            
            $leadData = array(

                'lead_status'               => $this->input->post('status'),
                'status_change_by_user_id'  => $_SESSION['adminData']['user_id'],
                'date_of_status_change'     => date('Y-m-d H:i:s'),
                
            );
             $leadDataWip = array(
                'lead_status'               => $this->input->post('status'),
                'status_change_by_user_id'  => $_SESSION['adminData']['user_id'],
                'date_of_status_change'     => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updateleadStatus = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);    
            if($updateleadStatus){
                $updateleadStatusWip =  $this->Mods->update($table_name = 'leadswip', $conditionField = array('realleadID' => $id), $permissionId = $id, $data = $leadDataWip);    
            }
            
            
            if ($updateleadStatusWip){
                
                   $lead_data       = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
             
                   $campaign_data   = ($lead_data[0]->campaign_id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead_data[0]->campaign_id) : '';
                   $user_data       = ($lead_data[0]->user_id) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead_data[0]->status_change_by_user_id) : '';
                
                //echo $lead_data[0]->user_id;
                
                $sql_userrecd       = "select email, bdm_name from users where id = " . $lead_data[0]->user_id;
                $user_resultofema   = $this->db->query($sql_userrecd)->result();
                $user_of_lead_email = $user_resultofema[0]->email;
                $bdmNama            = $user_resultofema[0]->bdm_name;
                $bdmEmailId         = get_userEmailByName($bdmNama);
                /*echo $user_of_lead_email;
                 echo '<pre>';
                print_r($user_data);
                echo '<br>';
                print_r($lead_data);
                die();*/
                   $status_data     = ($lead_data[0]->lead_status) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $lead_data[0]->lead_status) : '';

                    $status_log_data = array(
                        
                        "lead_id"           => $lead_data[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $lead_data[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                   
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'leads',                        
                        "module_name" => 'changeLeadStatus',
                        "module_id" => $id,
                        "note" => 'User Update Lead Ststus to ' . $status_data[0]->status_name,
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);

                   
                   $mailTitle       = $campaign_data[0]->campaign_short_name . ' Lead Status Changed - Client Name: ' . $lead_data[0]->first_name . ' ' . $lead_data[0]->last_name . ' - Lead Status: ' . $status_data[0]->status_name . ' - User Name: ' . $user_data[0]->userName;
                    
                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaign_data[0]->campaign_short_name . ' Leads Status Changed');
                    
                        $this->mailer->addAddress($user_of_lead_email);
                        if(isset($bdmEmailId)){
                          $this->mailer->addBCC($bdmEmailId);  
                        }
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        //$this->mailer->addBCC('roundoneweb@gmail.com', 'Management');
                        $this->mailer->isHTML(true);
                        
                        $this->mailer->Subject = $mailTitle;
                        
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>Sr #</th>
                                                    <th>Client First Name</th>
                                                    <th>Client Last Name</th>
                                                    <th>Client Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Status Changed By</th>
                                                   <th>Date Of Status Change</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>1</td>
                                                    <td>'. $lead_data[0]->first_name . '</td>
                                                    <td>'. $lead_data[0]->last_name . '</td>
                                                    <td>'. $lead_data[0]->phone_1 . '</td>
                                                    <td>'. $status_data[0]->status_name . '</td>
                                                    <td>'. $status_data[0]->lead_type . '</td>
                                                    <td>'. $user_data[0]->userName . '</td>
                                                    <td>'. $lead_data[0]->date_of_status_change . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                if ($this->mailer->send()) {
                    $_SESSION['session_url_of_status'] = 'changeLeadStatus/'.$id;
                    $this->session->set_flashdata('SuccessupdateChangeleadStatus', 'Lead Status Record Update.');
                    redirect(base_url('Mod/changeLeadStatus/'.$id));
                   // redirect(base_url('Mod/manageLeads'));
                }                
                
            }
            
        }
        
    }

    public function viewLeadStatusLogs($lead_id) {
        
        $status_log = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads_statuses_logs', $condition = 'id', $lead_id) : '';
        
        if (is_array($status_log)) {
            
            $sql = "SELECT 
                        leads_statuses_logs.id, leads_statuses_logs.created_at, leads_statuses_logs.created_at,
                        lead_statuses.status_name, lead_statuses.lead_type,
                        users.userName,
                        leads.reference_id, leads.first_name, leads.last_name, leads.last_name, leads.phone_1,
                        companies.company_name,
                        campaign.campaign_name
                    FROM 
                        leads_statuses_logs 
                    INNER JOIN leads ON leads.lead_id = leads_statuses_logs.lead_id
                    left JOIN lead_statuses ON lead_statuses.id = leads_statuses_logs.lead_status_id
                    left JOIN users ON users.id = leads_statuses_logs.user_id 
                    left JOIN companies ON companies.id = leads.company_id 
                    left JOIN campaign ON campaign.campaign_id = leads.campaign_id 
                    where 
                        leads_statuses_logs.id = " . $status_log[0]->id;
            
            $leads_statuses_logs = $this->db->query($sql)->result();
            
            $this->data['leads_statuses_logs'] = $leads_statuses_logs[0];
            
        } else {
            $this->session->set_flashdata('viewLeadStatusLogsDataError', 'Record Not Exists.');
            $this->data['leads_statuses_logs'] = "";
        }
        
        $this->headerV($this->title = "View Lead Status Log");
        $this->load->view('Mod/leads/viewLeadStatusLogs', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function adminLoadLeadStatusLogs($lead_id) {

        if (!is_int($lead_id) && empty($lead_id)){
            echo "What Are You Doing Here."; 
            die();
        }
        
        $aColumns = array(
            "leads_statuses_logs.id", "leads_statuses_logs.lead_id", "leads_statuses_logs.user_id", "leads_statuses_logs.lead_status_id", "leads_statuses_logs.created_at", "lead_statuses.status_name", "lead_statuses.lead_type", "users.userName", "leads.reference_id"
        );

        $aColumns_for_sorting = array("leads_statuses_logs.id", "leads.reference_id", "lead_statuses.status_name", "lead_statuses.lead_type", "users.userName", "leads_statuses_logs.created_at");
        
        $aColumns_for_loop = array("reference_id", "status_name" ,"lead_type", "userName", "created_at");

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "leads_statuses_logs";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }

        /*0
         * Ordering
         */
        
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */

        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
            $sWhere .= "AND leads_statuses_logs.lead_id=" . $lead_id ;            
            
//            $sWhere .= "AND  id='" . 1 . "' ";
            
            $sWhere .=  "";
            
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
            
           $sWhere .= "WHERE leads_statuses_logs.lead_id=" . $lead_id ;            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }



        

        /*
         * SQL queries
         * Get data to display
         */
        
        $joins = " INNER JOIN leads ON leads.lead_id = leads_statuses_logs.lead_id
                   left JOIN lead_statuses ON lead_statuses.id = leads_statuses_logs.lead_status_id
                   left JOIN users ON users.id = leads_statuses_logs.user_id";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();


                $aRow['created_at'] = date("d-M-Y H:i:s", strtotime($aRow['created_at']));
//                $aRow['campaign_status'] = ($aRow['campaign_status']) ? 'Active' : 'In-Active';
                $row[] = $x;

            if ($aRow['lead_type'] == "new") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Converted") {
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Validated") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Closed") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Invalidated") {

                $aRow['lead_type'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Qualified") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Contacted") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

//            $update = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a href="' . base_url('Mod/editCampaign/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-pencil-alt"></i></a>' : '';
//            $view = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a href="' . base_url('Mod/viewCampaign/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" ><i class="ti-search"></i></a>' : '';
//            $delete = ($_SESSION['adminData']['Companies']['permission_delete'] == 1 && $aRow['campaign_id'] != $_SESSION['adminData']['company_id'] ) ? '<button class="btn btn-info btn-outline btn-circle btn-lg m-r-5" onclick="deleteCampaign('.$aRow['campaign_id'].')" name="del" data-value="'.$aRow['campaign_id'].'"><i class="ti-trash"></i></<button>' : '';

            $update             = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Change Lead Status" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadStatus/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            $view               = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="View Lead status Log" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/viewLeadStatusLogs/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            
//            $row[] = $update . $view . $delete;
            $row[] = $update . $view;
//            $row[] = $view ;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                
            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
    }   
    
// Done    
    
    public function changeLeadStatuswip($id = ""){
       /* $sql_userrecd = "select firstName, lastName, email, avatar from users where id = " . $_SESSION['adminData']['user_id'];
                $user_resultofema = $this->db->query($sql_userrecd)->result();
                $loggedin_email= $user_resultofema[0]->email;*/
        //$this->data['changeLeadStatusAccess'] = 1;
        $this->load->model('Mods');
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
        
        if (is_array($lead)) {
            $this->data['changeLeadStatusAccess'] = $lead[0]->isStatusChangeLocked;
            if($lead[0]->isStatusChangeLocked == 0){
                $this->data['changeLeadStatus'] = $lead[0];
                $campaign_id                    = $lead[0]->campaign_id;
                $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
                $this->data['leadsStatuses']    = $leadsStatuses;   
            }else{
                $this->data['changeLeadStatusAccess'] = $lead[0]->isStatusChangeLocked;
            }            
        } else {
            $this->data['changeLeadStatusAccess'] = $lead[0]->isStatusChangeLocked;
            $this->session->set_flashdata('changeLeadStatusDataError', 'Record Not Exists.');
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
        }
        /*echo "<pre>";
        print_r($this->data);
        die();*/
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/changeLeadStatusWIP', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function updateChangeLeadStatuswip(){
        
        /*$sql_userrecd = "select firstName, lastName, email, avatar from users where id = " . $_SESSION['adminData']['user_id'];
                $user_resultofema = $this->db->query($sql_userrecd)->result();
                $loggedin_email= $user_resultofema[0]->email;*/
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('changeLeadStatusDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateChangeLeadStatus') == FALSE) {
            $this->changeLeadStatus($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $leadData = array(

                'lead_status'               => $this->input->post('status'),
                'status_change_by_user_id'  => $_SESSION['adminData']['user_id'],
                'date_of_status_change'     => date('Y-m-d H:i:s'),
                
            );
            
            $this->load->model('Mods');
            
            $updateleadStatus = $this->Mods->update($table_name = 'leadswip', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);            
            
            if ($updateleadStatus){
                
                   $lead_data       = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
             
                   $campaign_data   = ($lead_data[0]->campaign_id) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead_data[0]->campaign_id) : '';
                   $user_data       = ($lead_data[0]->user_id) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead_data[0]->status_change_by_user_id) : '';
                
                //echo $lead_data[0]->user_id;
                
                $sql_userrecd = "select email from users where id = " . $lead_data[0]->user_id;
                $user_resultofema = $this->db->query($sql_userrecd)->result();
                $user_of_lead_email= $user_resultofema[0]->email;
                /*echo $user_of_lead_email;
                 echo '<pre>';
                print_r($user_data);
                echo '<br>';
                print_r($lead_data);
                die();*/
                   $status_data     = ($lead_data[0]->lead_status) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $lead_data[0]->lead_status) : '';

                    $status_log_data = array(
                        
                        "lead_id"           => $lead_data[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $lead_data[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    
                   
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'leads',                        
                        "module_name" => 'changeLeadStatus',
                        "module_id" => $id,
                        "note" => 'User Update Lead Ststus in the WIP to ' . $status_data[0]->status_name,
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);

                   
                   $mailTitle       = $campaign_data[0]->campaign_short_name . ' Lead Status Changed - Client Name: ' . $lead_data[0]->first_name . ' ' . $lead_data[0]->last_name . ' - Lead Status: ' . $status_data[0]->status_name . ' - User Name: ' . $user_data[0]->userName;
                    
                       
               /* if ($this->mailer->send()) {*/
                    $_SESSION['session_url_of_status'] = 'changeLeadStatus/'.$id;
                    $this->session->set_flashdata('SuccessupdateChangeleadStatus', 'Lead Status Record Update.');
                    /*redirect(base_url('Mod/changeLeadStatus/' . $lead[0]->lead_id));*/
                    redirect(base_url('Mod/manageWIP'));
               /* }   */             
                
            }
            
        }
        
    }
    
    public function addLeadNote($id){
        $permission_view = $_SESSION['adminData']['Leads']['permission_view'];
        $permission_update = $_SESSION['adminData']['Leads']['permission_update'];
        $permission_delete = $_SESSION['adminData']['Leads']['permission_delete'];
        $this->load->library('ckeditor');
		$this->load->library('ckfinder');
        $this->ckeditor->basePath = base_url().'assets/ckeditor/';
		$this->ckeditor->config['toolbar'] = array(
        array( 'Source', '-', 'Bold', 'Italic', 'Underline', '-','Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo','-','NumberedList','BulletedList','-','Link','Unlink','-','TextColor','Format','Font','FontSize'));
            $this->ckeditor->config['language'] = 'en';
            $this->ckeditor->config['allowedContent'] = true;

        if(1==1){
             $this->load->model('Mods');
        
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';

            if (is_array($lead)) {

                $this->data['changeLeadStatus'] = $lead[0];
                $leadsStatuses                  = $this->Mods->getAllData($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses");
                $this->data['leadsStatuses']    = $leadsStatuses;
                 

            } else {

                $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
                $this->data['changeLeadStatus'] = '';
                $this->data['leadsStatuses']    = '';            

            }
            
            $this->headerV($this->title = "Add Lead Note");
            $this->load->view('Mod/leads/addLeadNote', $this->data);
            $this->load->view('Mod/footer/footer');
            
        }else{
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/permissiontothis');                
            $this->load->view('Mod/footer/footer');  
        }
        
        
    }
    
    public function createLeadNote(){
         
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('changeLeadStatusDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('addLeadNote') == FALSE) {
            $this->addLeadNote($id);
        } else {
            $bdmEmailId = '';
            date_default_timezone_set('Europe/London');
            
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            $leadcreator_UID    = $lead[0]->user_id;
            $reciever           = $lead[0]->user_id;
            //get BDM name
            $bdmNama = get_BDMName($leadcreator_UID);
            $bdmEmailId = get_userEmailByName($bdmNama);
            
            $sender     = $_SESSION['adminData']['user_id'];
            $UniqueId   = uniqid();
            $message_thread_code   = substr(md5(rand(100000000, 20000000000)), 0, 15);
            $message_thread_code = $message_thread_code.$UniqueId;
            $leadNoteData = array(
                
                "lead_id" => $lead[0]->lead_id, 
                "lead_status_id" => $lead[0]->lead_status, 
                "user_id" => $_SESSION['adminData']['user_id'], 
//                "company_id" => $_SESSION['adminData']['company_id'], 
                "note" => $this->input->post('note'), 
                "added_date" => date('Y-m-d H:i:s')
                
            );
            
            $addLeadNote = $this->Mods->single_insert('lead_notes', $leadNoteData);             
            $senderName = $_SESSION['adminData']['user_name'];
            if ($addLeadNote){
                $data_message_thread['message_thread_code'] = $message_thread_code;
                $data_message_thread['sender']              = $sender;
                $data_message_thread['reciever']            = $reciever;
                $data_message_thread['lead_id']             = $lead[0]->lead_id;
                $data_message_thread['is_note_added']       = 1;
                $data_message_thread['lead_note_id']        = $addLeadNote;
                
                $this->db->insert('message_thread', $data_message_thread);
                $message_data = array(
                        'message_thread_code'       => $message_thread_code,
                        'message'                   => $this->input->post('note'),
                        'sender'                    => $sender,
                        'sendername'                => $senderName,
                        'timestamp	'               => date('Y-m-d H:i:s'),
                        'read_status'               => 0
                        );
                $this->Mods->single_insert('message', $message_data);
                $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'lead_notes',                        
                        "module_name" => 'addLeadNote',
                        "module_id" => $addLeadNote,
                        "note" => 'User Add a new Lead Note',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                
                
                
            $sql = "select 
                        users.email, 
                        leads.first_name, 
                        leads.last_name, 
                        leads.phone_1, 
                        lead_statuses.status_name, 
                        lead_statuses.lead_type, 
                        lead_notes.note, 
                        company_name,
                        lead_notes.added_date 
                    from 
                        users 
                    INNER JOIN 
                        leads 
                    ON 
                        leads.user_id = users.id 
                    INNER JOIN 
                        lead_notes 
                    ON 
                        leads.lead_id = lead_notes.lead_id 
                    INNER JOIN 
                        lead_statuses 
                    ON 
                        lead_notes.lead_status_id = lead_statuses.id 
                    WHERE 
                        leads.lead_id = $id 
                    AND 
                        lead_notes.lead_note_id = $addLeadNote";
                       
             $results = $this->db->query($sql)->result();     
            $comp_name    = ($results) ? $results[0]->company_name : 'All';
            $userData = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $_SESSION['adminData']['user_id']);
            $Note_addedby    = $userData[0]->firstName." ".$userData[0]->lastName;
            $username = $userData[0]->userName;
                
            
            $mailTitle = $results[0]->first_name . "-" . $results[0]->last_name . "-" . $results[0]->phone_1 . "-" . $results[0]->status_name;

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Leads Notification');
                        //                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        if(isset($bdmEmailId)){
                          $this->mailer->addBCC($bdmEmailId);  
                        }
                        $this->mailer->addAddress($results[0]->email);
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        //$this->mailer->addBCC('roundoneweb@gmail.com', 'Management');
                        $this->mailer->isHTML(true);
                        
                        $this->mailer->Subject = 'Leads Portal - Status Change | ' . $mailTitle ;
                        
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Leads Portal - Status Change' . $mailTitle . '</h2>
                                            <h2>Note:</h2><p style="color:#f3612a;">'.$results[0]->note.'</p>
                                            <table>
                                            
                                                <tr>
                                                    <th>Sr #</th>
                                                    <th>Partner Name</th>
                                                    <th>User Name</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    
                                                    <th>Note Added by</th>
                                                    <th>Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>1</td>
                                                    <td>'. $comp_name . '</td>
                                                    <td>'. $username . '</td>
                                                    <td>'. $results[0]->first_name . '</td>
                                                    <td>'. $results[0]->last_name . '</td>
                                                    <td>'. $results[0]->phone_1 . '</td>
                                                    <td>'. $results[0]->status_name . '</td>
                                                    <td>'. $results[0]->lead_type . '</td>
                                                    
                                                    <td>'. $Note_addedby . '</td>
                                                    <td>'. $results[0]->added_date . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        $this->mailer->CharSet = 'UTF-8';

                if ($this->mailer->send()) {
                    /*$_SESSION['session_url_of_status'] = 'changeLeadStatus/'.$id;*/
                    $this->session->set_flashdata('leadNoteSuccess', 'Lead Status Record Update.');
                    redirect(base_url('Mod/addLeadNote/' . $lead[0]->lead_id));
                    
                }                
                
            }
            
        }
        
    }
    
    public function addLeadNoteWIP($id){
        
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';

        if (is_array($lead)) {
            
            $this->data['changeLeadStatus'] = $lead[0];
            $leadsStatuses                  = $this->Mods->getAllData($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses");
            $this->data['leadsStatuses']    = $leadsStatuses;
            
        } else {
            
            $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            
        }
        
        $this->headerV($this->title = "Add Lead Note");
        $this->load->view('Mod/leads/addLeadNotewip', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function createLeadNoteWIP(){
         
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('changeLeadStatusDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('addLeadNote') == FALSE) {
            $this->addLeadNoteWIP($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
            
            $leadNoteData = array(
                
                "lead_id" => $lead[0]->lead_id, 
                "lead_status_id" => $lead[0]->lead_status, 
                "user_id" => $_SESSION['adminData']['user_id'], 
//                "company_id" => $_SESSION['adminData']['company_id'], 
                "note" => $this->input->post('note'), 
                "added_date" => date('Y-m-d H:i:s')
                
            );
            
            $addLeadNote = $this->Mods->single_insert('lead_notes_wip', $leadNoteData);             
            
            if ($addLeadNote){

        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'lead_notes',                        
                        "module_name" => 'addLeadNoteWIP',
                        "module_id" => $addLeadNote,
                        "note" => 'User Add a new Lead Note with in WIP',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                
               
         
                    /*$_SESSION['session_url_of_status'] = 'changeLeadStatus/'.$id;*/
                    $this->session->set_flashdata('leadNoteSuccess', 'Lead Status Record Update.');
                    redirect(base_url('Mod/addLeadNotewip/' . $lead[0]->lead_id)); 
                
            }
            
        }
        
    }
// Done    
    
    public function editLeadNote($id){
        
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'lead_notes', $condition = 'lead_note_id', $id) : '';

        if (is_array($lead)) {
            
            $leadsNoteSql = "SELECT
                                lead_notes.lead_note_id,
                                lead_notes.lead_id,
                                lead_notes.note,
                                lead_notes.added_date,
                                leads.first_name,
                                leads.last_name,
                                leads.phone_1,
                                leads.lead_status,
                                (select lead_statuses.status_name from lead_statuses WHERE lead_statuses.id = leads.lead_status) AS 'Current_Lead_Status',
                                (select lead_statuses.lead_type from lead_statuses WHERE lead_statuses.id = leads.lead_status) AS 'Current_Lead_TYPE',    
                                lead_statuses.status_name,
                                lead_statuses.lead_type
                            FROM
                                lead_notes
                            INNER JOIN lead_statuses ON lead_statuses.id = lead_notes.lead_status_id 
                            INNER JOIN leads ON leads.lead_id = lead_notes.lead_id 
                            WHERE
                                lead_notes.lead_note_id = " . $lead[0]->lead_note_id;

            $query = $this->db->query($leadsNoteSql)->result();
            $this->data['leadNote'] = $query[0];

        } else {

            $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
            $this->data['leadNote'] = "";
            
        }
        
        $this->headerV($this->title = "Edit Lead Note");
        $this->load->view('Mod/leads/editLeadNote', $this->data);
        $this->load->view('Mod/footer/footer');
        
        
    }
    
    public function updateLeadNote(){
        
        // updateLeadNote - Form validation
         
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadNote') == FALSE) {
            $this->editLeadNote($id);
        } else {

            date_default_timezone_set('Europe/London');
            
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'lead_notes', $condition = 'lead_note_id', $id) : '';
             
            $leadNoteData = array(
                
                "note" => $this->input->post('note'), 
                "updated_at" => date('Y-m-d H:i:s')
                
            );
            
            $this->load->model('Mods');
            
            $updateLeadNote  = $this->Mods->update($table_name = 'lead_notes', $conditionField = array('lead_note_id' => $id), $permissionId = $id, $data = $leadNoteData);            

            if ($updateLeadNote){
                
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'lead_notes',                        
                        "module_name" => 'editLeadNote',
                        "module_id" => $id,
                        "note" => 'User Edit Lead Note',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                
                
            
            $sql = "select 
                        users.email, 
                        leads.first_name, 
                        leads.last_name, 
                        leads.phone_1, 
                        lead_statuses.status_name, 
                        lead_statuses.lead_type, 
                        lead_notes.note, 
                        lead_notes.added_date 
                    from 
                        users 
                    INNER JOIN 
                        leads 
                    ON 
                        leads.user_id = users.id 
                    INNER JOIN 
                        lead_notes 
                    ON 
                        leads.lead_id = lead_notes.lead_id 
                    INNER JOIN 
                        lead_statuses 
                    ON 
                        lead_notes.lead_status_id = lead_statuses.id 
                    WHERE 
                        lead_notes.lead_note_id = $id";
            
            $results = $this->db->query($sql)->result();            
            
            $mailTitle = $results[0]->first_name . "-" . $results[0]->last_name . "-" . $results[0]->phone_1 . "-" . $results[0]->status_name;

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', ' Leads Notification');
                        //                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress($results[0]->email);
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        
                        $this->mailer->Subject = 'Leads Portal -  Lead Status Changed. | ' . $mailTitle ;
                        
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Leads Portal -  Lead Status Changed. | ' . $mailTitle . '</h2>
                                            
                                            
                                                <h2>Note:</h2><p style="color:#f3612a;">'.$results[0]->note.'</p>
                                            <table>
                                            
                                                <tr>
                                                    <th>Sr #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    
                                                    <th>Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>1</td>
                                                    <td>'. $results[0]->first_name . '</td>
                                                    <td>'. $results[0]->last_name . '</td>
                                                    <td>'. $results[0]->phone_1 . '</td>
                                                    <td>'. $results[0]->status_name . '</td>
                                                    <td>'. $results[0]->lead_type . '</td>
                                                    
                                                    <td>'. $results[0]->added_date . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                    $this->mailer->CharSet = 'UTF-8';
                        
                        
                if ($this->mailer->send()) {
                    
                    $this->session->set_flashdata('updateleadNoteSuccess', 'Lead Status Record Update.');
                    redirect(base_url('Mod/addLeadNote/') . $lead[0]->lead_id);
                    
                }                
                
            }
            
        }
        
    }
    
    public function viewLinkedLeads($id){
        //echo $id;
        $this->load->model('Mods');
        $linkedLead = ($id) ? $this->Mods->getIdByName($table_name = 'linked_leads', $condition = 'lead_id', $id) : '';
       /* echo '<pre>';
        print_r($linkedLead);
        die();*/
        if (is_array($linkedLead)) {
            $this->data['linkedLead'] = '';
        } else {
            $this->session->set_flashdata('linkedLeadDataError', 'Record Not Exists.');
            $this->data['linkedLead'] = "";
        }
        
        $this->headerV($this->title = "View Linked Leads");
        $this->load->view('Mod/leads/linkedLeads', $this->data);
        $this->load->view('Mod/footer/footer');        
        
    }
    
    public function viewLeadNote($id){
        $this->data['leadNoteID'] = $id;
        $LoggedInUserID = $_SESSION['adminData']['user_id'];
        $this->load->model('Mods');
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'lead_notes', $condition = 'lead_note_id', $id) : '';
        $NoteleadID = $lead[0]->lead_id;
          $leadsIdSql = "SELECT user_id FROM leads WHERE lead_id = $NoteleadID";
          $LeadUser = $this->db->query($leadsIdSql)->result();
         
        $LeadUser[0]->user_id;
       
        if($LoggedInUserID == $LeadUser[0]->user_id){
            $this->data['leadNoteAccessStatusOfThisUser'] = 1;
            $this->db->where('lead_note_id' , $id);
            $message_threads    =   $this->db->get('message_thread')->result_array();
            $ThreadData = $message_threads[0];
            $threadCode = $ThreadData['message_thread_code'];
            $this->Mods->delete_single($companyId = $threadCode, $conditionField = 'message_thread_code', $table_name = 'message_thread'); 
            $this->Mods->delete_single($companyId = $threadCode, $conditionField = 'message_thread_code', $table_name = 'message');
        }else{
            $this->data['leadNoteAccessStatusOfThisUser'] = 0;
        }
    
        if (is_array($lead)) {
            
            $leadsNoteSql = "SELECT
                                lead_notes.lead_note_id,
                                lead_notes.lead_id,
                                lead_notes.note,
                                lead_notes.added_date,
                                leads.first_name,
                                leads.last_name,
                                leads.phone_1,
                                leads.lead_status,
                                (select lead_statuses.status_name from lead_statuses WHERE lead_statuses.id = leads.lead_status) AS 'Current_Lead_Status',
                                (select lead_statuses.lead_type from lead_statuses WHERE lead_statuses.id = leads.lead_status) AS 'Current_Lead_TYPE',    
                                lead_statuses.status_name,
                                lead_statuses.lead_type,
                                (select users.userName from users where users.id in (lead_notes.user_id)) as 'lead_addded_by'
                            FROM
                                lead_notes
                            INNER JOIN lead_statuses ON lead_statuses.id = lead_notes.lead_status_id 
                            INNER JOIN leads ON leads.lead_id = lead_notes.lead_id 
                            WHERE
                                lead_notes.lead_note_id = " . $lead[0]->lead_note_id;

            $query = $this->db->query($leadsNoteSql)->result();
            $this->data['leadNote'] = $query[0];

        } else {

            $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
            $this->data['leadNote'] = "";
            
        }
        
        $this->headerV($this->title = "View Lead Note");
        $this->load->view('Mod/leads/viewLeadNote', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function viewLeadNoteWIP($id){
        
        $this->load->model('Mods');
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'lead_notes_wip', $condition = 'lead_note_id', $id) : '';

        if (is_array($lead)) {
            
            $leadsNoteSql = "SELECT
                                lead_notes_wip.lead_note_id,
                                lead_notes_wip.lead_id,
                                lead_notes_wip.note,
                                lead_notes_wip.added_date,
                                leadswip.first_name,
                                leadswip.last_name,
                                leadswip.phone_1,
                                leadswip.lead_status,
                                (select lead_statuses.status_name from lead_statuses WHERE lead_statuses.id = leadswip.lead_status) AS 'Current_Lead_Status',
                                (select lead_statuses.lead_type from lead_statuses WHERE lead_statuses.id = leadswip.lead_status) AS 'Current_Lead_TYPE',    
                                lead_statuses.status_name,
                                lead_statuses.lead_type,
                                (select users.userName from users where users.id in (lead_notes_wip.user_id)) as 'lead_addded_by'
                            FROM
                                lead_notes_wip
                            INNER JOIN lead_statuses ON lead_statuses.id = lead_notes_wip.lead_status_id 
                            INNER JOIN leadswip ON leadswip.lead_id = lead_notes_wip.lead_id 
                            WHERE
                                lead_notes_wip.lead_note_id = " . $lead[0]->lead_note_id;

            $query = $this->db->query($leadsNoteSql)->result();
            $this->data['leadNote'] = $query[0];

        } else {

            $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
            $this->data['leadNote'] = "";
            
        }
        
        $this->headerV($this->title = "View Lead Note");
        $this->load->view('Mod/leads/viewLeadNoteWIP', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
// Done  
    
    public function deleteLeadNote(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        
        $leadData = ($id) ? $this->Mods->getIdByName($table_name = 'lead_notes', $condition = 'lead_note_id', $id) : '';
        
        if (is_array($leadData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'lead_note_id', $table_name = 'lead_notes');            
            
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'lead_notes',                        
                        "module_name" => 'deleteLeadNote',
                        "module_id" => $id,
                        "note" => 'User Delete lead Note',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
            
            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;        
        
    }
    
// Done    
    
    public function changeLeadUser($id){
        $permission_view        = $_SESSION['adminData']['Leads']['permission_view'];
        $permission_update      = $_SESSION['adminData']['Leads']['permission_update'];
        $permission_delete      = $_SESSION['adminData']['Leads']['permission_delete'];
        if($permission_update ==1){
            $this->load->model('Mods');
            $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';

            if (is_array($lead)) {

                $campaign_id                    = $lead[0]->campaign_id;
                $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
                $users                          = $this->Mods->getUsers();
                $lead_user                      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
                $partner                        = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
                $campaign                       = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);

                $this->data['leadsStatuses']    = $leadsStatuses;
                $this->data['users']            = $users;
                $this->data['changeLeadStatus'] = $lead[0];

                $this->data['lead_user']        = $lead_user;
                $this->data['partner']          = $partner;
                $this->data['campaign']         = $campaign;

            } else {

                $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');

                $this->data['changeLeadStatus'] = '';
                $this->data['leadsStatuses']    = '';            
                $this->data['users']            = '';

                $this->data['lead_user']        = "";
                $this->data['partner']          = "";
                $this->data['campaign']         = "";

            }

            $this->title = "Change Lead User";

            $this->headerV($this->title);
            $this->load->view('Mod/leads/changeLeadUser', $this->data);
            $this->load->view('Mod/footer/footer');
            
        }else{
            $this->headerV($this->title);
            $this->load->view('Mod/leads/permissiontothis');                
            $this->load->view('Mod/footer/footer');  
        }
        
        
    } 
    
    public function updateLeadUser(){
        
        $id =   !empty(@$_POST['leadId']) ? 
                base64_decode(@$_POST['leadId']) : 
                $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadUser') == FALSE) {
            $this->changeLeadUser($id);
        } else {

            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            
            $lead_id        = base64_decode(@$_POST['leadId']);
            $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $lead_id) : '';
            $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
            $user_campaign  = json_decode($user_data[0]->campaign_id);

            if ($user_campaign[0] == 0){
                
                $user_campaigns = $this->db->query('SELECT campaign_id FROM `campaign` WHERE campaign_status = 1')->result();
                $user_campaign  = array();                
                
                foreach ($user_campaigns as $campaign){
                    $user_campaign[] = $campaign->campaign_id;
                }
                
            }else{
                $user_campaign  = json_decode($user_data[0]->campaign_id);
            }
           /* echo "lead campaing".$lead[0]->campaign_id."<br>";
            echo "usr campaign".$user_campaign."<br>";
            print_r($user_campaign);
            echo "<pre>";
            print_r($user_campaign);
            die();*/
            
            if (in_array($lead[0]->campaign_id, $user_campaign)){
                
               /* echo "lead campaing".$lead[0]->campaign_id."<br>";
            echo "usr campaign".$user_campaign."<br>";
            print_r($user_campaign);
            echo "<pre>";
            print_r($user_campaign);
            die();*/
                $old_user_data = array(

                    'lead_id'       => $lead[0]->lead_id, 
                    'old_user_id'   => $lead[0]->user_id, 
                    'added_date'    => date('Y-m-d H:i:s'), 

                );
                
                $lead_users = $this->Mods->single_insert('lead_users', $old_user_data);             

                /* echo "<pre>";
                print_r($lead_users);
                die(); */
                
                if ($lead_users){
                    
                    $lead_data = array(
                        
                        'user_id'                   => $user_data[0]->id,
                        'company_id'                => $user_data[0]->company_id,
                        'lead_update_user_id'       => $_SESSION['adminData']['user_id'],
                        'lead_update_company_id'    => $_SESSION['adminData']['campaign_id'],
                        'updated_at'                => date('Y-m-d H:i:s'),

                    );                    
                    
            $update_lead_user = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data);            

                    if ($update_lead_user){
                        
                        
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                    {
                        $device_type        = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'leads',                        
                        "module_name" => 'changeLeadUser',
                        "module_id" => $lead[0]->lead_id,
                        "note" => 'User Change There Lead User',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        $this->session->set_flashdata('SuccessUpdateLeadUser', 'Lead User Updated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            }else{
                
                $this->session->set_flashdata('update_lead_user_error', "Selected User Don't Have access to transfer this lead into this account. Please Contant to admin.");
                $this->changeLeadUser($id);
                
            }
            
        }
        
    }    
    
    /*######claim handler#####*/
    public function changeLeadClaimHandler($id){
        
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        
        if (is_array($lead)) {
            
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $users                          = $this->Mods->getUsers();
            /*echo "<pre>";
            print_r($users);*/
            $claimhandlerusers = array();
            foreach($users as $singleuser){
                //echo $singleuser->id;
                //die();
                if($singleuser->role_name == "Claim Handler"){
                    $temp = array();
                    $temp['id'] = $singleuser->id;
                    $temp['userName'] = $singleuser->userName;
                    $temp['role_name'] = $singleuser->role_name;
                    $temp['company_name'] = $singleuser->company_name;
                    array_push($claimhandlerusers, $temp);
                }/*else{
                    $claimhandlerusers = NULL;
                }*/
            }
            /*echo "<pre>";
            print_r($claimhandlerusers);
            die();*/
            $lead_user                      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
            $partner                        = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
            $campaign                       = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);
            
            $this->data['leadsStatuses']    = $leadsStatuses;
            $this->data['users']            = $claimhandlerusers;
            $this->data['changeLeadStatus'] = $lead[0];
            
            $this->data['lead_user']        = $lead_user;
            $this->data['partner']          = $partner;
            $this->data['campaign']         = $campaign;
            
        } else {
            
            $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
            
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            $this->data['users']            = '';

            $this->data['lead_user']        = "";
            $this->data['partner']          = "";
            $this->data['campaign']         = "";

            
        }
        
        $this->title = "Change Lead Claim Handler";
        
        $this->headerV($this->title);
        $this->load->view('Mod/leads/changeLeadClaimHandler', $this->data);
        $this->load->view('Mod/footer/footer');
        
    } 
     
    public function updateLeadHandler(){
        
        $id =   !empty(@$_POST['leadId']) ? 
                base64_decode(@$_POST['leadId']) : 
                $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadUser') == FALSE) {
            $this->changeLeadClaimHandler($id);
        } else {
            $selectedhandler    =   $this->input->post('users');
            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            
            $lead_id        = base64_decode(@$_POST['leadId']);
            $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $lead_id) : '';
            $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
            
            $handler_id = $selectedhandler;
            $handle_rname = $user_data[0]->userName;
          
            /*if updated*/
            if ($handler_id){
                    
                    $lead_data = array(

                        'handler_id'                   => $user_data[0]->id,
                        'handler_name'                => $handle_rname,
                        'updated_at'                => date('Y-m-d H:i:s'),

                    );                    
                    
                    $update_lead_handler = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data);            

                    if ($update_lead_handler){    
                            $this->load->library('user_agent');
                            if ($this->agent->is_browser())
                            {
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();
                                $device_type        = "Desktop";
                            }
                    
                        elseif ($this->agent->isRobot())
                        {
                                $device_type = $this->agent->robot();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        elseif ($this->agent->isMobile())
                        {
                                $device_type = $this->agent->getMobile();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }
                        else
                        {
                                $device_type = 'Unidentified User Agent';
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        $activity_data = array(

                            "user_id" => $_SESSION['adminData']['user_id'],
                            "company_id" => $_SESSION['adminData']['company_id'], 
                            "database_table_name" => 'leads',                        
                            "module_name" => 'changeLeadClaimHandler',
                            "module_id" => $lead[0]->lead_id,
                            "note" => 'Claim Handler Changed',
                            'ip_address' => $ip_address,
                            'platform' => $platform,
                            'browser' => $agent,
                            'browser_version' => $browser_version,
                            'device_type' => $device_type,
                            "created_at" => date('Y-m-d H:i:s'),

                        );

                        $this->load->model('Mods');
                        $this->Mods->single_insert('user_activities', $activity_data);
                            $this->session->set_flashdata('SuccessUpdateLeadHandler', 'Lead Claim Handler Updated.');
                            redirect(base_url('Mod/manageLeads'));
                        }
                    
                }
            else{
                
                $this->session->set_flashdata('update_lead_user_error', "Selected User Don't Have access .");
                $this->changeLeadUser($id);
                
            }    
            
            /*if updated*/
            
            
            
        }
        
    }  
    /*######claim handler#####*/
    

/*Begin User Changing in Wip*/
public function ChangeWIPLeadUser($id){
        $LogedinUserRoleName    = $_SESSION['adminData']['role_name']; 
        $uid_logedin            = $_SESSION['adminData']['user_id'];
        $logged_user            = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $uid_logedin);
        $usercompany            = $logged_user[0]->company_id;
        
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
        if($LogedinUserRoleName != "Client" && $LogedinUserRoleName != "Closer" && $LogedinUserRoleName != "Supervisor"){
            if (is_array($lead)){
                $campaign_id                    = $lead[0]->campaign_id;
                $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
                $users                          = $this->Mods->getUsersbycompany();
                $claimhandlerusers = array();
                foreach($users as $singleuser){
                    if(($singleuser->company_id == $usercompany) ){
                        $temp = array();
                        $temp['id'] = $singleuser->id;
                        $temp['userName'] = $singleuser->userName;
                        $temp['role_name'] = $singleuser->role_name;
                        $temp['company_name'] = $singleuser->company_name;
                        array_push($claimhandlerusers, $temp);
                        }
                }

                $lead_user                      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
                $partner                        = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
                $campaign                       = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);

                $this->data['leadsStatuses']    = $leadsStatuses;
                $this->data['users']            = $claimhandlerusers;
                $this->data['changeLeadStatus'] = $lead[0];

                $this->data['lead_user']        = $lead_user;
                $this->data['partner']          = $partner;
                $this->data['campaign']         = $campaign;
            }
        } else {
            
            $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
            
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            $this->data['users']            = '';

            $this->data['lead_user']        = "";
            $this->data['partner']          = "";
            $this->data['campaign']         = "";

            
        }
        
        $this->title = "Change wip Lead Agent";
        
        $this->headerV($this->title);
        $this->load->view('Mod/leads/changeLeadWIPUser', $this->data);
        $this->load->view('Mod/footer/footer');
        
    } 
public function UpdateLeadUserInWIP(){
        
        $id =   !empty(@$_POST['leadId']) ? 
                base64_decode(@$_POST['leadId']) : 
                $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadUser') == FALSE) {
            $this->changewipAgent($id);
        } else {
            $selectedAgent    =   $this->input->post('users');
            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            
            $lead_id        = base64_decode(@$_POST['leadId']);
            $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $lead_id) : '';
            $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
            
            $agent_id = $selectedAgent;
            $agent_rname = $user_data[0]->userName;
          
            /*if updated*/
            if ($agent_id){
                    
                    $lead_data = array(

                        'user_id'                   => $user_data[0]->id,
                        'updated_at'                => date('Y-m-d H:i:s'),

                    );                    
                    
                    $update_agent = $this->Mods->update($table_name = 'leadswip', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data);            

                    if ($update_agent){    
                            $this->load->library('user_agent');
                            if ($this->agent->is_browser())
                            {
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();
                                $device_type        = "Desktop";
                            }
                    
                        elseif ($this->agent->isRobot())
                        {
                                $device_type = $this->agent->robot();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        elseif ($this->agent->isMobile())
                        {
                                $device_type = $this->agent->getMobile();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }
                        else
                        {
                                $device_type = 'Unidentified User Agent';
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        $activity_data = array(

                            "user_id" => $_SESSION['adminData']['user_id'],
                            "company_id" => $_SESSION['adminData']['company_id'], 
                            "database_table_name" => 'WIP leads',                        
                            "module_name" => 'changeLeadUser',
                            "module_id" => $lead[0]->lead_id,
                            "note" => 'WIP leads New User Changed',
                            'ip_address' => $ip_address,
                            'platform' => $platform,
                            'browser' => $agent,
                            'browser_version' => $browser_version,
                            'device_type' => $device_type,
                            "created_at" => date('Y-m-d H:i:s'),

                        );

                        $this->load->model('Mods');
                        $this->Mods->single_insert('user_activities', $activity_data);
                            $this->session->set_flashdata('SuccessUpdateWIPUserChanged', 'Lead WIP User Updated.');
                            redirect(base_url('Mod/manageWIP'));
                        }
                    
                }
            else{
                
                $this->session->set_flashdata('update_lead_user_error', "Selected User Don't Have access .");
                $this->changewipAgent($id);
                
            }    
        }
        
    } 
/*End of User Changing in Wip*/
    public function changewipAgent($id){
        $uid_logedin = $_SESSION['adminData']['user_id'];
        $logged_user    = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $uid_logedin);
        $usercompany    = $logged_user[0]->company_id;
        
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
        
        if (is_array($lead)) {
            
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
             $users                          = $this->Mods->getUsersbycompany();
            /*echo "<pre>";
            print_r($users);*/
            $claimhandlerusers = array();
            foreach($users as $singleuser){
                //echo $singleuser->id;
                //die();
                 if(($singleuser->role_name == "Client") && ($singleuser->company_id == $usercompany) ){
                    $temp = array();
                    $temp['id'] = $singleuser->id;
                    $temp['userName'] = $singleuser->userName;
                    $temp['role_name'] = $singleuser->role_name;
                    $temp['company_name'] = $singleuser->company_name;
                    array_push($claimhandlerusers, $temp);
                }/*else{
                    $claimhandlerusers = NULL;
                }*/
            }
            /*echo "<pre>";
            print_r($claimhandlerusers);
            die();*/
            $lead_user                      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
            $partner                        = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
            $campaign                       = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);
            
            $this->data['leadsStatuses']    = $leadsStatuses;
            $this->data['users']            = $claimhandlerusers;
            $this->data['changeLeadStatus'] = $lead[0];
            
            $this->data['lead_user']        = $lead_user;
            $this->data['partner']          = $partner;
            $this->data['campaign']         = $campaign;
            
        } else {
            
            $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
            
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            $this->data['users']            = '';

            $this->data['lead_user']        = "";
            $this->data['partner']          = "";
            $this->data['campaign']         = "";

            
        }
        
        $this->title = "Change wip Lead Agent";
        
        $this->headerV($this->title);
        $this->load->view('Mod/leads/changeLeadWIPAgent', $this->data);
        $this->load->view('Mod/footer/footer');
        
    } 
    public function updateLeadAgnet(){
        
        $id =   !empty(@$_POST['leadId']) ? 
                base64_decode(@$_POST['leadId']) : 
                $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadUser') == FALSE) {
            $this->changewipAgent($id);
        } else {
            $selectedAgent    =   $this->input->post('users');
            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            
            $lead_id        = base64_decode(@$_POST['leadId']);
            $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $lead_id) : '';
            $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
            
            $agent_id = $selectedAgent;
            $agent_rname = $user_data[0]->userName;
          
            /*if updated*/
            if ($agent_id){
                    
                    $lead_data = array(

                        'agent_id'                   => $user_data[0]->id,
                        'agent_name'                => $agent_rname,
                        'updated_at'                => date('Y-m-d H:i:s'),

                    );                    
                    
                    $update_agent = $this->Mods->update($table_name = 'leadswip', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data);            

                    if ($update_agent){    
                            $this->load->library('user_agent');
                            if ($this->agent->is_browser())
                            {
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();
                                $device_type        = "Desktop";
                            }
                    
                        elseif ($this->agent->isRobot())
                        {
                                $device_type = $this->agent->robot();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        elseif ($this->agent->isMobile())
                        {
                                $device_type = $this->agent->getMobile();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }
                        else
                        {
                                $device_type = 'Unidentified User Agent';
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        $activity_data = array(

                            "user_id" => $_SESSION['adminData']['user_id'],
                            "company_id" => $_SESSION['adminData']['company_id'], 
                            "database_table_name" => 'leads',                        
                            "module_name" => 'changeLeadAgent',
                            "module_id" => $lead[0]->lead_id,
                            "note" => 'Agent Changed',
                            'ip_address' => $ip_address,
                            'platform' => $platform,
                            'browser' => $agent,
                            'browser_version' => $browser_version,
                            'device_type' => $device_type,
                            "created_at" => date('Y-m-d H:i:s'),

                        );

                        $this->load->model('Mods');
                        $this->Mods->single_insert('user_activities', $activity_data);
                            $this->session->set_flashdata('SuccessUpdateagentChanged', 'Lead Claim Handler Updated.');
                            redirect(base_url('Mod/manageWIP'));
                        }
                    
                }
            else{
                
                $this->session->set_flashdata('update_lead_user_error', "Selected User Don't Have access .");
                $this->changewipAgent($id);
                
            }    
            
            /*if updated*/
            
            
            
        }
        
    } 
    public function changeLeadAgent($id){
        
        $uid_logedin = $_SESSION['adminData']['user_id'];
        
        $logged_user    = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $uid_logedin);
        $usercompany    = $logged_user[0]->company_id;
        
        /*echo "<pre>";
        print_r($logged_user);*/
        //die();
        
        $this->load->model('Mods');
        
        $lead = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        
        if (is_array($lead)) {
            
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $users                          = $this->Mods->getUsersbycompany();
            /*echo "<pre>";
            print_r($users);*/
            $claimhandlerusers = array();
            foreach($users as $singleuser){
               /*echo "<pre>";
                print_r($singleuser);
                die();*/
                if(($singleuser->role_name == "Client"||$singleuser->role_name == "Closer") && ($singleuser->company_id == $usercompany) ){
                    $temp = array();
                    $temp['id'] = $singleuser->id;
                    $temp['userName'] = $singleuser->userName;
                    $temp['role_name'] = $singleuser->role_name;
                    $temp['company_name'] = $singleuser->company_name;
                    array_push($claimhandlerusers, $temp);
                }/*else{
                    $claimhandlerusers = NULL;
                }*/
            }
            /*echo "<pre>";
            print_r($claimhandlerusers);
            die();*/
            $lead_user                      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
            $partner                        = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
            $campaign                       = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);
            
            $this->data['leadsStatuses']    = $leadsStatuses;
            $this->data['users']            = $claimhandlerusers;
            $this->data['changeLeadStatus'] = $lead[0];
            
            $this->data['lead_user']        = $lead_user;
            $this->data['partner']          = $partner;
            $this->data['campaign']         = $campaign;
            
        } else {
            
            $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
            
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            $this->data['users']            = '';

            $this->data['lead_user']        = "";
            $this->data['partner']          = "";
            $this->data['campaign']         = "";

            
        }
        
        $this->title = "Change  Lead Agent";
        
        $this->headerV($this->title);
        $this->load->view('Mod/leads/changeRealLeadAgent', $this->data);
        $this->load->view('Mod/footer/footer');
        
    } 
    public function updateRealLeadAgnet(){
        
        $id =   !empty(@$_POST['leadId']) ? 
                base64_decode(@$_POST['leadId']) : 
                $this->session->set_flashdata('changeLeadUserDataError', 'Record Not Exists.');
        
        if ($this->form_validation->run('updateLeadUser') == FALSE) {
            $this->changewipAgent($id);
        } else {
            $selectedAgent    =   $this->input->post('users');
            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            
            $lead_id        = base64_decode(@$_POST['leadId']);
            $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $lead_id) : '';
            $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
            
            $agent_id = $selectedAgent;
            $agent_rname = $user_data[0]->userName;
          
            /*if updated*/
            if ($agent_id){
                    
                    $lead_data = array(

                        'agent_id'                   => $user_data[0]->id,
                        'wip_agent'                => $agent_rname,
                        'updated_at'                => date('Y-m-d H:i:s'),

                    );                    
                    
                    $update_agent = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data);            

                    if ($update_agent){    
                            $this->load->library('user_agent');
                            if ($this->agent->is_browser())
                            {
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();
                                $device_type        = "Desktop";
                            }
                    
                        elseif ($this->agent->isRobot())
                        {
                                $device_type = $this->agent->robot();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        elseif ($this->agent->isMobile())
                        {
                                $device_type = $this->agent->getMobile();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }
                        else
                        {
                                $device_type = 'Unidentified User Agent';
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        $activity_data = array(

                            "user_id" => $_SESSION['adminData']['user_id'],
                            "company_id" => $_SESSION['adminData']['company_id'], 
                            "database_table_name" => 'leads',                        
                            "module_name" => 'changeLeadAgent',
                            "module_id" => $lead[0]->lead_id,
                            "note" => 'Agent Changed',
                            'ip_address' => $ip_address,
                            'platform' => $platform,
                            'browser' => $agent,
                            'browser_version' => $browser_version,
                            'device_type' => $device_type,
                            "created_at" => date('Y-m-d H:i:s'),

                        );

                        $this->load->model('Mods');
                        $this->Mods->single_insert('user_activities', $activity_data);
                            $this->session->set_flashdata('SuccessUpdateagentChanged', 'Lead Claim Handler Updated.');
                            redirect(base_url('Mod/manageLeads'));
                        }
                    
                }
            else{
                
                $this->session->set_flashdata('update_lead_user_error', "Selected User Don't Have access .");
                $this->changeRealLeadAgent($id);
                
            }    
            
            /*if updated*/
            
            
            
        }
        
    } 
    public function UpdateMultipleLeadsAgents(){
        $SelectedLeads = unserialize(base64_decode($_POST['Multipleleads_Id']));
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');
            
            foreach($SelectedLeads as $singlead){
                $lead_id        = $singlead;
                $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $lead_id) : '';
                $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
                $selectedAgent    =   $this->input->post('users');
                $agent_id = $this->input->post('users');
                $agent_rname = $user_data[0]->userName;
                $user_campaign  = json_decode($user_data[0]->campaign_id);

                if ($user_campaign[0] == 0){

                    $user_campaigns = $this->db->query('SELECT campaign_id FROM `campaign` WHERE campaign_status = 1')->result();
                    $user_campaign  = array();                

                    foreach ($user_campaigns as $campaign){
                        $user_campaign[] = $campaign->campaign_id;
                    }

                    }else{
                    $user_campaign  = json_decode($user_data[0]->campaign_id);
                }
                if (in_array($lead[0]->campaign_id, $user_campaign)){

                    $lead_data = array(
                                 'agent_id'                     => $user_data[0]->id,
                                 'wip_agent'                    => $agent_rname,
                                 'updated_at'                   => date('Y-m-d H:i:s'),
                                );                    
                        $update_lead_user = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data); 
                        if ($update_lead_user){
                            
                            $this->load->library('user_agent');

                            if ($this->agent->is_browser())
                            {
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();
                                $device_type        = "Desktop";
                            }

                            elseif ($this->agent->isRobot())
                            {
                                    $device_type = $this->agent->robot();
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();

                            }

                            elseif ($this->agent->isMobile())
                            {
                                    $device_type = $this->agent->getMobile();
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();

                            }
                            else
                            {
                                $device_type        = 'Unidentified User Agent';
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();

                            }

                            $activity_data = array(
                                "user_id" => $_SESSION['adminData']['user_id'],
                                "company_id" => $_SESSION['adminData']['company_id'], 
                                "database_table_name" => 'leads',                        
                                "module_name" => 'changeLead Agent User',
                                "module_id" => $lead[0]->lead_id,
                                "note" => 'User Change There Lead Agent by multiple selection',
                                'ip_address' => $ip_address,
                                'platform' => $platform,
                                'browser' => $agent,
                                'browser_version' => $browser_version,
                                'device_type' => $device_type,
                                "created_at" => date('Y-m-d H:i:s'),
                                );

                            $this->load->model('Mods');
                            $this->Mods->single_insert('user_activities', $activity_data);
                        }
                  }
            }
        $this->session->set_flashdata('SuccessUpdateagentChanged', 'Lead User Updated.');
        redirect(base_url('Mod/manageLeads'));
            
    }
    public function UpdateMultipleLeadsUsers(){
        $SelectedLeads = unserialize(base64_decode($_POST['Multipleleads_Id']));
            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            foreach($SelectedLeads as $singlead){
                $lead_id        = $singlead;
                $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $lead_id) : '';
                $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));
                
                
                $user_campaign  = json_decode($user_data[0]->campaign_id);

                if ($user_campaign[0] == 0){

                    $user_campaigns = $this->db->query('SELECT campaign_id FROM `campaign` WHERE campaign_status = 1')->result();
                    $user_campaign  = array();                

                    foreach ($user_campaigns as $campaign){
                        $user_campaign[] = $campaign->campaign_id;
                    }

                    }else{
                    $user_campaign  = json_decode($user_data[0]->campaign_id);
                }
                if (in_array($lead[0]->campaign_id, $user_campaign)){

                        $old_user_data = array(
                            'lead_id'       => $lead[0]->lead_id, 
                            'old_user_id'   => $lead[0]->user_id, 
                            'added_date'    => date('Y-m-d H:i:s'), 
                            );

                        $lead_users = $this->Mods->single_insert('lead_users', $old_user_data);             

                        if ($lead_users){

                            $lead_data = array(
                                'user_id'                   => $user_data[0]->id,
                                'company_id'                => $user_data[0]->company_id,
                                'lead_update_user_id'       => $_SESSION['adminData']['user_id'],
                                'lead_update_company_id'    => $_SESSION['adminData']['campaign_id'],
                                'updated_at'                => date('Y-m-d H:i:s'),
                                );                    
                        $update_lead_user = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data); 
                        if ($update_lead_user){
                            
                            $this->load->library('user_agent');

                            if ($this->agent->is_browser())
                            {
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();
                                $device_type        = "Desktop";
                            }

                            elseif ($this->agent->isRobot())
                            {
                                    $device_type = $this->agent->robot();
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();

                            }

                            elseif ($this->agent->isMobile())
                            {
                                    $device_type = $this->agent->getMobile();
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();

                            }
                            else
                            {
                                $device_type        = 'Unidentified User Agent';
                                $agent              = $this->agent->browser();
                                $browser_version    = $this->agent->version();
                                $platform           = $this->agent->platform();
                                $ip_address         = $this->input->ip_address();

                            }

                            $activity_data = array(
                                "user_id" => $_SESSION['adminData']['user_id'],
                                "company_id" => $_SESSION['adminData']['company_id'], 
                                "database_table_name" => 'leads',                        
                                "module_name" => 'changeLeadUser',
                                "module_id" => $lead[0]->lead_id,
                                "note" => 'User Change There Lead User by multiple selection',
                                'ip_address' => $ip_address,
                                'platform' => $platform,
                                'browser' => $agent,
                                'browser_version' => $browser_version,
                                'device_type' => $device_type,
                                "created_at" => date('Y-m-d H:i:s'),
                                );

                            $this->load->model('Mods');
                            $this->Mods->single_insert('user_activities', $activity_data);
                            }
                        }
                  }
            }
        $this->session->set_flashdata('SuccessUpdateLeadUser', 'Lead User Updated.');
        redirect(base_url('Mod/manageLeads'));
            
    }
    public function MultipleLeadsAgentChange(){
       	$dualidFlg = 0;
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
        $this->load->model('Mods');
        $users                          = $this->Mods->getUsers();
       
        $Allusers = array();
            foreach($users as $singleuser){
                 if($singleuser->role_name == "Client"){
                    $temp = array();
                    $temp['id'] = $singleuser->id;
                    $temp['userName'] = $singleuser->userName;
                    $temp['role_name'] = $singleuser->role_name;
                    $temp['company_name'] = $singleuser->company_name;
                    array_push($Allusers, $temp);
                    }
                }
        
        $leadrecord = array();
        $campaignrecords = array();
        foreach($json_data as $singlearr){
            // echo $singlearr;
            $sql_leads      = "SELECT leads.lead_id, leads.email, leads.first_name, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name, UZR.userName AS UserName, UZRCH.userName AS ClaimHandlerName, UZRWIP.userName AS WIPAgentName,  CONCAT(first_name, ' ', last_name) as FullNameOfClient  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id INNER JOIN users UZR ON UZR.id = leads.user_id LEFT JOIN users UZRCH ON UZRCH.id = leads.handler_id LEFT JOIN users UZRWIP ON UZRWIP.id = leads.agent_id WHERE lead_id = $singlearr ";
            $lead          = $this->db->query($sql_leads)->result();
           array_push($leadrecord, $lead);
        if (is_array($lead)) {
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $this->data['leadsStatuses']    = $leadsStatuses;
        }
    }
        $this->data['LeadRecords'] = $leadrecord;
        $this->data['AllUersList'] = $Allusers;
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/MultipledsAgentChange', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function MultipleLeadsClaimHandlerChange(){
       	$dualidFlg = 0;
        $array = $_GET['array'];
        $json_data = json_decode($array);
        $this->data['SlectedLeadRecords'] = $json_data;
        $this->load->model('Mods');
        $users                          = $this->Mods->getUsers();
       
        $Allusers = array();
            foreach($users as $singleuser){
                 if($singleuser->role_name == "Claim Handler"){
                    $temp = array();
                    $temp['id'] = $singleuser->id;
                    $temp['userName'] = $singleuser->userName;
                    $temp['role_name'] = $singleuser->role_name;
                    $temp['company_name'] = $singleuser->company_name;
                    array_push($Allusers, $temp);
                    }
                }
        
        $leadrecord = array();
        $campaignrecords = array();
        foreach($json_data as $singlearr){
            // echo $singlearr;
            $sql_leads      = "SELECT leads.lead_id, leads.email, leads.first_name, leads.last_name, leads.phone_1, leads.lead_status, lead_statuses.id, lead_statuses.status_name, campaign.campaign_id, campaign.campaign_short_name, UZR.userName AS UserName, UZRCH.userName AS ClaimHandlerName, UZRWIP.userName AS WIPAgentName,  CONCAT(first_name, ' ', last_name) as FullNameOfClient  FROM leads JOIN lead_statuses on lead_statuses.id = leads.lead_status JOIN campaign on campaign.campaign_id = leads.campaign_id INNER JOIN users UZR ON UZR.id = leads.user_id LEFT JOIN users UZRCH ON UZRCH.id = leads.handler_id LEFT JOIN users UZRWIP ON UZRWIP.id = leads.agent_id WHERE lead_id = $singlearr ";
            $lead          = $this->db->query($sql_leads)->result();
           array_push($leadrecord, $lead);
        if (is_array($lead)) {
            $campaign_id                    = $lead[0]->campaign_id;
            $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
            $this->data['leadsStatuses']    = $leadsStatuses;
        }
    }
        $this->data['LeadRecords'] = $leadrecord;
        $this->data['AllUersList'] = $Allusers;
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/MultipledsClaimHandlerChange', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function UpdateMultipleLeadsClaimHandlers(){
        $SelectedLeads = unserialize(base64_decode($_POST['Multipleleads_Id']));
            date_default_timezone_set('Europe/London');

            $this->load->model('Mods');
            $selectedhandler    =   $this->input->post('users');
            $user_data      = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $this->input->post('users'));        
            $handler_id = $selectedhandler;
            $handle_rname = $user_data[0]->userName;
    
            foreach($SelectedLeads as $singlead){
                $lead_id        = $singlead;
                $lead           = ($lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $lead_id) : '';
            if ($handler_id){
               $lead_data = array(
                        'handler_id'                   => $user_data[0]->id,
                        'handler_name'                => $handle_rname,
                        'updated_at'                => date('Y-m-d H:i:s'),
                        );  
                $update_lead_handler = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $lead[0]->lead_id), $permissionId = $lead[0]->lead_id, $data = $lead_data);  
                if ($update_lead_handler){    
                    $this->load->library('user_agent');
                    if ($this->agent->is_browser())
                        {
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();
                            $device_type        = "Desktop";
                        }
                    
                        elseif ($this->agent->isRobot())
                        {
                                $device_type = $this->agent->robot();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        elseif ($this->agent->isMobile())
                        {
                                $device_type = $this->agent->getMobile();
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }
                        else
                        {
                                $device_type = 'Unidentified User Agent';
                            $agent              = $this->agent->browser();
                            $browser_version    = $this->agent->version();
                            $platform           = $this->agent->platform();
                            $ip_address         = $this->input->ip_address();

                        }

                        $activity_data = array(

                            "user_id" => $_SESSION['adminData']['user_id'],
                            "company_id" => $_SESSION['adminData']['company_id'], 
                            "database_table_name" => 'leads',                        
                            "module_name" => 'changeLeadClaimHandler',
                            "module_id" => $lead[0]->lead_id,
                            "note" => 'Claim Handler Changed By using multiple selections',
                            'ip_address' => $ip_address,
                            'platform' => $platform,
                            'browser' => $agent,
                            'browser_version' => $browser_version,
                            'device_type' => $device_type,
                            "created_at" => date('Y-m-d H:i:s'),

                        );

                        $this->load->model('Mods');
                        $this->Mods->single_insert('user_activities', $activity_data);
                            
                        }
                }
            }
        $this->session->set_flashdata('SuccessUpdateLeadHandler', 'Lead Claim Handler Updated.');
        redirect(base_url('Mod/manageLeads'));
            
    }
    public function adminLoadLeadNotes($lead_id = 0) {
        
        if (!is_int($lead_id) && empty($lead_id)){
            echo "What Are You Doing Here."; 
            die();
        }
        
        $aColumns = array(
            
                        "lead_notes.lead_note_id",
                        "lead_notes.note",
                        "lead_notes.added_date",
                        "leads.first_name",
                        "leads.last_name",
                        "leads.phone_1",
                        "lead_statuses.status_name",
                        "lead_statuses.lead_type",
                        "users.userName"
                    );

        $aColumns_for_sorting = array(
            
                                    "lead_notes.lead_note_id",
                                    "lead_notes.note",
                                    "lead_notes.added_date",
                                    "leads.first_name",
                                    "leads.last_name",
                                    "leads.phone_1",
                                    "lead_statuses.status_name",
                                    "lead_statuses.lead_type",
                                    "users.userName"            
                                );
        
        $aColumns_for_loop = array(       

                                "first_name",
                                "last_name",
                                "phone_1",
                                "status_name",
//                                "lead_type",
                                "note",
                                "userName",
                                "added_date",
            
                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "lead_note_id";

        /* DB table to use */
        $sTable = "lead_notes";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
            $sWhere .= "AND lead_notes.lead_id=" . $lead_id ;            
            
//            $sWhere .= "AND  id='" . 1 . "' ";
            
            $sWhere .=  "";
            
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
            
           $sWhere .= "WHERE lead_notes.lead_id=" . $lead_id ;            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */

        $joins = " INNER JOIN leads ON leads.lead_id = lead_notes.lead_id
                   left JOIN lead_statuses ON lead_statuses.id = lead_notes.lead_status_id 
                   left JOIN users ON users.id = lead_notes.user_id";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;

        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];
        $countWhere = ($_SESSION['adminData']['role_name'] == "Admin") ? "WHERE lead_notes.lead_id= $lead_id"  : '';                    
        
        /* Total data set length */
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere 
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            
        $row = array();

                $aRow['added_date'] = date("d M Y H:i:s", strtotime($aRow['added_date']));
                $row[] = $x;
                        
            if ($aRow['lead_type'] == "new") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Converted") {
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Validated") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Closed") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Invalidated") {

                $aRow['lead_type'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Qualified") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Contacted") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }
                
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
                
            }

            $update = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Edit Lead Note" style="padding: 0 0 0 0" href="' . base_url('Mod/editLeadNote/') . $aRow['lead_note_id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = '<a title="View Lead Note" style="padding: 0 0 0 0" href="' . base_url('Mod/viewLeadNote/') . $aRow['lead_note_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>';
            $delete = ($_SESSION['adminData']['role_name'] == "Admin") ? '<button title="Delete Lead Note" style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteLeadNote('.$aRow['lead_note_id'].')" name="del" data-value="'.$aRow['lead_note_id'].'"><i class="ti-trash"></i></button>' : '';

            $row[] = $update . $view . $delete;
            
            $output['aaData'][] = $row;
            $x++;

        }
        
        echo json_encode($output);
        
    }   
    public function adminLoadLeadNotesWIP($lead_id = 0) {
        
        if (!is_int($lead_id) && empty($lead_id)){
            echo "What Are You Doing Here."; 
            die();
        }
        
        $aColumns = array(
            
                        "lead_notes_wip.lead_note_id",
                        "lead_notes_wip.note",
                        "lead_notes_wip.added_date",
                        "leadswip.first_name",
                        "leadswip.last_name",
                        "leadswip.phone_1",
                        "lead_statuses.status_name",
                        "lead_statuses.lead_type",
                        "users.userName"
                    );

        $aColumns_for_sorting = array(
            
                                    "lead_notes_wip.lead_note_id",
                                    "lead_notes_wip.note",
                                    "lead_notes_wip.added_date",
                                    "leadswip.first_name",
                                    "leadswip.last_name",
                                    "leadswip.phone_1",
                                    "lead_statuses.status_name",
                                    "lead_statuses.lead_type",
                                    "users.userName"            
                                );
        
        $aColumns_for_loop = array(       

                                "first_name",
                                "last_name",
                                "phone_1",
                                "status_name",
//                                "lead_type",
                                "note",
                                "userName",
                                "added_date",
            
                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "lead_note_id";

        /* DB table to use */
        $sTable = "lead_notes_wip";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
            $sWhere .= "AND lead_notes_wip.lead_id=" . $lead_id ;            
            
//            $sWhere .= "AND  id='" . 1 . "' ";
            
            $sWhere .=  "";
            
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
            
           $sWhere .= "WHERE lead_notes_wip.lead_id=" . $lead_id ;            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */

        $joins = " INNER JOIN leadswip ON leadswip.lead_id = lead_notes_wip.lead_id
                   left JOIN lead_statuses ON lead_statuses.id = lead_notes_wip.lead_status_id 
                   left JOIN users ON users.id = lead_notes_wip.user_id";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;

        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];
        $countWhere = ($_SESSION['adminData']['role_name'] == "Admin") ? "WHERE lead_notes_wip.lead_id= $lead_id"  : '';                    
        
        /* Total data set length */
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere 
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            
        $row = array();

                $aRow['added_date'] = date("d M Y H:i:s", strtotime($aRow['added_date']));
                $row[] = $x;
                        
            if ($aRow['lead_type'] == "new") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Converted") {
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Validated") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Closed") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Invalidated") {

                $aRow['lead_type'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Qualified") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Contacted") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }
                
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
                
            }

            $update = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Edit Lead Note" style="padding: 0 0 0 0" href="' . base_url('Mod/editLeadNote/') . $aRow['lead_note_id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            
            /*$view = '<a title="View Lead Note" style="padding: 0 0 0 0" href="' . base_url('Mod/viewLeadNote/') . $aRow['lead_note_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>';*/
            
            $view = '<a title="View Lead Note" style="padding: 0 0 0 0" href="' . base_url('Mod/viewLeadNoteWIP/') . $aRow['lead_note_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>';
            
            $delete = ($_SESSION['adminData']['role_name'] == "Admin") ? '<button title="Delete Lead Note" style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteLeadNote('.$aRow['lead_note_id'].')" name="del" data-value="'.$aRow['lead_note_id'].'"><i class="ti-trash"></i></button>' : '';

            /*$row[] = $update . $view . $delete;*/
            $row[] = $view;
            $output['aaData'][] = $row;
            $x++;

        }
        
        echo json_encode($output);
        
    }
    
    public function viewLead($id){
        $permission_view = $_SESSION['adminData']['Leads']['permission_view'];
        $permission_update = $_SESSION['adminData']['Leads']['permission_update'];
        $permission_delete = $_SESSION['adminData']['Leads']['permission_delete'];
        if($permission_view ==1){
            $this->load->model('Mods');
            $leadData = ($id) ? $this->Mods->getLeadByID($id) : '';

            if (is_array($leadData)) {

                $this->data['getleadData'] = $leadData;
                $lead_campaign               = ($leadData) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $leadData[0]->campaign_id ) : '';            
                $this->data['lead_campaign'] = $lead_campaign;            
            } else {
                $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
                $this->data['getleadData']      = '';
                $this->data['lead_campaign']    = '';            
            }
            if($lead_campaign[0]->campaign_short_name=="TR"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/viewTRLead', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name=="SO"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/viewSolicitor', $this->data);
                $this->load->view('Mod/footer/footer');  
            }elseif($lead_campaign[0]->campaign_short_name=="MIB"){
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/viewMIBLeads', $this->data);
                $this->load->view('Mod/footer/footer');  
            }else{
                $this->headerV($this->title="Leads Portal");
                $this->load->view('Mod/leads/viewLead', $this->data);
                $this->load->view('Mod/footer/footer');  
            }  
        }else{
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/permissiontothis');                
            $this->load->view('Mod/footer/footer');  
        }   
    }
    
    public function MessagesLeadupdate(){
         /*$sql = "SELECT DISTINCT message_thread_code, `message_thread_id`, `lead_id`, `message_thread_code`, `sender`, `reciever`, `is_note_added`, `lead_note_id`, `last_message_timestamp` FROM `message_thread` WHERE is_note_added = 0";
        $checkmsges = $this->db->query($sql)->result();
        foreach ($checkmsges as $linkedLead){
            $data = array( 
                'sender_id'      => $linkedLead->sender, 
                'reciver_id'     => $linkedLead->reciever, 
                'recverName'     => ''
            );

            $this->db->where('message_thread_code', $linkedLead->reciever);

            $this->db->update('message', $data);
            
            echo "<pre>";
            print_r($data);
            echo "Updte of...............<br>";
        }*/
        
        
    }
    
    public function viewLeadwip($id){
       
        $this->load->model('Mods');
        $leadData = ($id) ? $this->Mods->getwipLeadByID($id) : '';
        /*echo '<pre>';
        print_r($leadData);
        die();*/
        if (is_array($leadData)) {
            
            $this->data['getleadData'] = $leadData;
            $lead_campaign               = ($leadData) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $leadData[0]->campaign_id ) : '';            
            $this->data['lead_campaign'] = $lead_campaign;            
        //    echo '<pre>';
        //print_r($lead_campaign);
        //die();
        } else {
            $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
            $this->data['getleadData']      = '';
            $this->data['lead_campaign']    = '';            
        }
        if($lead_campaign[0]->campaign_short_name=="TR"){
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/viewTRWIPLead', $this->data);
            $this->load->view('Mod/footer/footer');  
        }else{
            /*echo "<pre>";
            print_r($this->data);
            die();*/
            $this->headerV($this->title="Leads Portal");
            $this->load->view('Mod/leads/viewLeadWIP', $this->data);
            $this->load->view('Mod/footer/footer');  
        }
        
    }

// Done 
    
    public function deleteLead(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $leadData = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        
        if (is_array($leadData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'lead_id', $table_name = 'leads');     

                        
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                        {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'leads',                        
                        "module_name" => 'deleteLead',
                        "module_id" => $id,
                        "note" => 'User delete the lead',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                        
            
            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;        
        
    }
    
    public function deleteLeadwip(){
        
        $id = $_POST['delID'];
        
        $this->load->model('Mods');
        $leadData = ($id) ? $this->Mods->getIdByName($table_name = 'leadswip', $condition = 'lead_id', $id) : '';
        
        if (is_array($leadData)) {
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'lead_id', $table_name = 'leadswip');     

                        
        $this->load->library('user_agent');

                    if ($this->agent->is_browser())
                    {
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                        $device_type        = "Desktop";
                    }
                    
                    elseif ($this->agent->isRobot())
                    {
                            $device_type = $this->agent->robot();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    
                    elseif ($this->agent->isMobile())
                    {
                            $device_type = $this->agent->getMobile();
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }
                    else
                        {
                            $device_type = 'Unidentified User Agent';
                        $agent              = $this->agent->browser();
                        $browser_version    = $this->agent->version();
                        $platform           = $this->agent->platform();
                        $ip_address         = $this->input->ip_address();
                            
                    }

                    $activity_data = array(

                        "user_id" => $_SESSION['adminData']['user_id'],
                        "company_id" => $_SESSION['adminData']['company_id'], 
                        "database_table_name" => 'leads',                        
                        "module_name" => 'deleteLead',
                        "module_id" => $id,
                        "note" => 'User delete the lead from wip section',
                        'ip_address' => $ip_address,
                        'platform' => $platform,
                        'browser' => $agent,
                        'browser_version' => $browser_version,
                        'device_type' => $device_type,
                        "created_at" => date('Y-m-d H:i:s'),

                    );
                    
                    $this->load->model('Mods');
                    $this->Mods->single_insert('user_activities', $activity_data);
                        
            
            
        } else {
            $del = FALSE;
        }

        echo ($del) ? TRUE : FALSE;        
        
    }
    
    public function manageLeads(){
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/leads');
        $this->load->view('Mod/footer/footer');
    }
     public function manageEmails(){
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/emails');
        $this->load->view('Mod/footer/footer');
    }
     public function adminLoadEmailData() {

        $aColumns = array(
                "email_history.id", 
                "email_history.send_by_user_id", 
                "users.userName",
                "email_history.sent_from", 
                "email_history.sent_to", 
                "email_history.subject", 
                "email_history.body", 
                "email_history.created_at"
        );

        $aColumns_for_sorting = array(                
                "email_history.id", 
                "users.userName",
                "email_history.sent_to",
                "email_history.subject", 
                "email_history.created_at"
        );
        
        $aColumns_for_loop = array(
                "userName",
                "sent_to",
                "subject", 
//                "ip_address", 
                "created_at"            
        );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "email_history";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND send_by_user_id='$user_id'";            
            
        }           
            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND send_by_user_id='$user_id'";            
            
        }                       
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */
        
        $joins = "  left JOIN users ON users.id = email_history.send_by_user_id ";
                    
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();

                $aRow['created_at'] = date("d-m-Y H:i:s", strtotime($aRow['created_at']));
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $view               = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="View Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/view_emails/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $row[]              = $view ;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
        
    }
    public function adminLoadEmailHistory($lead_id = 0) {
        
        if (!is_int($lead_id) && empty($lead_id)){
            echo "What Are You Doing Here."; 
            die();
        }
        
        $aColumns = array(
                "email_history.id", 
                "email_history.send_by_user_id", 
                "users.userName",
                "email_history.sent_from", 
                "email_history.sent_to", 
                "email_history.subject", 
                "email_history.body", 
                "email_history.created_at"
        );

        $aColumns_for_sorting = array(                
                "email_history.id", 
                "users.userName",
                "email_history.sent_to",
                "email_history.subject", 
                "email_history.created_at"
        );
        
        $aColumns_for_loop = array(
                "userName",
                "sent_to",
                "subject", 
//                "ip_address", 
                "created_at"            
        );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "email_history";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
            $sWhere .= "AND email_history.lead_id=" . $lead_id ;            
            
//            $sWhere .= "AND  id='" . 1 . "' ";
            
            $sWhere .=  "";
            
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
            
           $sWhere .= "WHERE email_history.lead_id=" . $lead_id ;            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */

        $joins = " left JOIN users ON users.id = email_history.send_by_user_id";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;

        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];
        $countWhere = ($_SESSION['adminData']['role_name'] == "Admin") ? "WHERE email_history.lead_id= $lead_id"  : '';                    
        
        /* Total data set length */
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere 
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            
        $row = array();

                $row[] = $x;
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
                
            }

            
            $view = '<a title="View Lead Note" style="padding: 0 0 0 0" href="' . base_url('Mod/view_emails/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>';
            $row[] = $view;
            
            $output['aaData'][] = $row;
            $x++;

        }
        
        echo json_encode($output);
        
    } 
    public function adminLoadEmailDatabySender($param) {

        $aColumns = array(
                "email_history.id", 
                "email_history.send_by_user_id", 
                "users.userName",
                "email_history.sent_from", 
                "email_history.sent_to", 
                "email_history.subject", 
                "email_history.body", 
                "email_history.created_at"
        );

        $aColumns_for_sorting = array(                
                "email_history.id", 
                "users.userName",
                "email_history.sent_to",
                "email_history.subject", 
                "email_history.created_at"
        );
        
        $aColumns_for_loop = array(
                "userName",
                "sent_to",
                "subject", 
//                "ip_address", 
                "created_at"            
        );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "email_history";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND send_by_user_id='$user_id'";            
            
        }           
            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND send_by_user_id='$user_id'";            
            
        }                       
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */
        
        $joins = "  left JOIN users ON users.id = email_history.send_by_user_id ";
                    
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();

                $aRow['created_at'] = date("d-m-Y H:i:s", strtotime($aRow['created_at']));
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $view               = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="View Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/view_emails/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $row[]              = $view ;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
        
    }
      public function view_emails($id){
        
        $this->load->model('Mods');
        
        $activity_data  = ($id) ? $this->Mods->getIdByName($table_name = 'email_history', $condition = 'id', $id) : '';
        $user_data      = ($activity_data) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $activity_data[0]->send_by_user_id) : '';
         /* echo "<pre>";
          print_r($activity_data);
          print_r($user_data);
          die();*/
        $activity_data[0]->user_id      = $user_data[0]->userName;        
               
        
        $this->data['emails_data'] = $activity_data;
         /* echo "<pre>";
          print_r(data['emails_data']);
          die();*/
        $this->headerV($this->title = "View Email");
        $this->load->view('Mod/leads/view_email', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
     public function manageWIP(){
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/leadsWIP');
        $this->load->view('Mod/footer/footer');
    }
    
    public function adminLoadLinkedLeads($leadID) {

        $aColumns = array(
            
                        "leads.lead_id",
                        "leads.user_id",
                        "leads.company_id",
                        "companies.company_name AS 'cmp_name'",
                        "leads.first_name",
                        "leads.last_name",
                        "leads.company_name",
                        "leads.phone_1",
                        "leads.lead_status",
                        "lead_statuses.status_name",
                        "lead_statuses.lead_type",
                        "leads.api_inseration_id",
                        "leads.created_at", 
            
                    );

        $aColumns_for_sorting = array(
            
                                    "leads.lead_id",
                                    "leads.company_name",
                                    "companies.company_name",
                                    "leads.first_name",
                                    "leads.last_name",
                                    "leads.phone_1",
                                    "lead_statuses.status_name",
                                    "lead_statuses.lead_type",
                                    "leads.api_inseration_id",
                                    "leads.created_at" 
            
                                );
        
        $aColumns_for_loop = array(       
            
                                "company_name",
                                "cmp_name",
                                "first_name",
                                "last_name",
                                "phone_1",
                                "status_name",
                                "lead_type",
                                "api_inseration_id",
                                "created_at" 
            
                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "lead_id";

        /* DB table to use */
        $sTable = "leads";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';

//        if ($_SESSION['adminData']['role_name'] != "Admin"){
        if ($_SESSION['adminData']['role_name'] == "Admin"){
            
//            $company_id = $_SESSION['adminData']['company_id'];
//            $user_id = $_SESSION['adminData']['user_id'];
//            $module_permissions = $_SESSION['adminData']['Leads'];
//            
//            $sWhere .= "AND  leads.user_id='" . $user_id . "' AND leads.company_id= '$company_id'";            
            $sWhere .= "AND leads.lead_id = $leadID";            
            
        }            
            
//            $sWhere .= "AND  id='" . 1 . "' ";
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
            
//        if ($_SESSION['adminData']['role_name'] != "Admin"){
        if ($_SESSION['adminData']['role_name'] == "Admin"){
            
//            $company_id = $_SESSION['adminData']['company_id'];
//            $user_id = $_SESSION['adminData']['user_id'];
//            $module_permissions = $_SESSION['adminData']['Leads'];
            
//            $sWhere .= "WHERE leads.user_id='" . $user_id . "' AND leads.company_id= '$company_id'";            
            $sWhere .= "WHERE leads.lead_id = $leadID";            
            
        }            
            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */

        $sWhere = str_replace("companies.company_name AS 'cmp_name'", "companies.company_name", $sWhere);

        $joins = "  INNER JOIN users ON users.id = leads.user_id 
                    left JOIN companies ON companies.id = leads.company_id 
                    INNER JOIN lead_statuses ON lead_statuses.id = leads.lead_status ";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found 
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
       $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];


        /* Total data set length */
        
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
        
        
//        echo $sQuery = "
//		SELECT COUNT(" . $sIndexColumn . ") as result_total
//		FROM   $sTable " . ($_SESSION['adminData']['role_name'] != "Admin") ? "WHERE user_id= $user_id AND company_id= $company_id" : '' 
//	;
        
        $countWhere = ($_SESSION['adminData']['role_name'] != "Admin") ? "WHERE user_id= $user_id AND company_id= $company_id" : '';            
            
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere" 
	;


        
        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
        $row = array();

                $aRow['created_at'] = date("d-M-Y H:i:s", strtotime($aRow['created_at']));
                $row[] = $x;
                        
            if ($aRow['lead_type'] == "new") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Converted") {
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Validated") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Closed") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Invalidated") {

                $aRow['lead_type'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Qualified") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Contacted") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }
                
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $update = ($_SESSION['adminData']['Leads']['permission_update'] == 1) ? '<a title="Edit Lead" style="padding: 0 0 0 0" href="' . base_url('Mod/editLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Leads']['permission_view'] == 1) ? '<a title="View Lead" style="padding: 0 0 0 0" href="' . base_url('Mod/viewLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Leads']['permission_delete'] == 1) ? '<button title="Delete Lead" style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteLead('.$aRow['lead_id'].')" name="del" data-value="'.$aRow['lead_id'].'"><i class="ti-trash"></i></button>' : '';

            $row[] = $update . $view . $delete;
            
            $output['aaData'][] = $row;
            $x++;

        }
        
        echo json_encode($output);
        
    }   
    
    public function adminLoadLinkedLeadsDetials($leadID) {

        $aColumns = array(
            
                        "leads.lead_id",
                        "leads.user_id",
                        "leads.company_id",
                        "companies.company_name AS 'cmp_name'",
                        "leads.first_name",
                        "leads.last_name",
                        "leads.company_name",
                        "leads.phone_1",
                        "leads.lead_status",
                        "lead_statuses.status_name",
                        "lead_statuses.lead_type",
                        "leads.api_inseration_id",
                        "leads.created_at", 
                        "linked_leads.status"
            
                    );

        $aColumns_for_sorting = array(
            
                                    "leads.lead_id",
                                    "leads.company_name",
                                    "companies.company_name",
                                    "leads.first_name",
                                    "leads.last_name",
                                    "leads.phone_1",
                                    "lead_statuses.status_name",
                                    "lead_statuses.lead_type",
                                    "leads.api_inseration_id",
                                    "leads.created_at" 
            
                                );
        
        $aColumns_for_loop = array(       
            
                                "company_name",
                                "cmp_name",
                                "first_name",
                                "last_name",
                                "phone_1",
                                "status_name",
                                "lead_type",
                                "api_inseration_id",
                                "created_at" 
            
                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "lead_id";

        /* DB table to use */
        $sTable = "leads";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';

//        if ($_SESSION['adminData']['role_name'] != "Admin"){
        if ($_SESSION['adminData']['role_name'] == "Admin"){
            
//            $company_id = $_SESSION['adminData']['company_id'];
//            $user_id = $_SESSION['adminData']['user_id'];
//            $module_permissions = $_SESSION['adminData']['Leads'];
//            
//            $sWhere .= "AND  leads.user_id='" . $user_id . "' AND leads.company_id= '$company_id'";            
//            $sWhere .= "WHERE leads.lead_id = $leadID";            
            $sWhere .= "AND leads.lead_id in (select linked_leads.link_lead_id from linked_leads WHERE linked_leads.lead_id = $leadID)";            
            
        }            
            
//            $sWhere .= "AND  id='" . 1 . "' ";
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";
            
//        if ($_SESSION['adminData']['role_name'] != "Admin"){
        if ($_SESSION['adminData']['role_name'] == "Admin"){
            
//            $company_id = $_SESSION['adminData']['company_id'];
//            $user_id = $_SESSION['adminData']['user_id'];
//            $module_permissions = $_SESSION['adminData']['Leads'];
            
//            $sWhere .= "WHERE leads.user_id='" . $user_id . "' AND leads.company_id= '$company_id'";            
            $sWhere .= "WHERE leads.lead_id in (select linked_leads.link_lead_id from linked_leads WHERE linked_leads.lead_id = $leadID)";            
            
        }            
            
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }


        /*
         * SQL queries
         * Get data to display
         */

        $sWhere = str_replace("companies.company_name AS 'cmp_name'", "companies.company_name", $sWhere);

        $joins = "  INNER JOIN users ON users.id = leads.user_id 
                    left JOIN companies ON companies.id = leads.company_id 
                    INNER JOIN lead_statuses ON lead_statuses.id = leads.lead_status 
                    INNER JOIN linked_leads ON linked_leads.link_lead_id = leads.lead_id                    
                    ";
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;


//echo $sQuery;
//die();

        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found 
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
       $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];


        /* Total data set length */
        
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
        
        
//        echo $sQuery = "
//		SELECT COUNT(" . $sIndexColumn . ") as result_total
//		FROM   $sTable " . ($_SESSION['adminData']['role_name'] != "Admin") ? "WHERE user_id= $user_id AND company_id= $company_id" : '' 
//	;
        
        $countWhere = ($_SESSION['adminData']['role_name'] != "Admin") ? "WHERE user_id= $user_id AND company_id= $company_id" : '';            
            
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere" 
	;


        
        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
//
        
        foreach ($rResult as $aRow) {
        $row = array();

                $aRow['created_at'] = date("d-M-Y H:i:s", strtotime($aRow['created_at']));
                $row[] = $x;
                        
            if ($aRow['lead_type'] == "new") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Converted") {
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Validated") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Closed") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Invalidated") {

                $aRow['lead_type'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Qualified") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Contacted") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }
                
                
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $update = ($_SESSION['adminData']['Leads']['permission_update'] == 1) ? '<a title="Edit Lead" style="padding: 0 0 0 0" href="' . base_url('Mod/editLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            $view = ($_SESSION['adminData']['Leads']['permission_view'] == 1) ? '<a title="View Lead" style="padding: 0 0 0 0" href="' . base_url('Mod/viewLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $delete = ($_SESSION['adminData']['Leads']['permission_delete'] == 1) ? '<button title="Delete Lead" style="padding: 0 0 0 0; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteLead('.$aRow['lead_id'].')" name="del" data-value="'.$aRow['lead_id'].'"><i class="ti-trash"></i></button>' : '';

            $row[] = $update . $view . $delete;
            
            $output['aaData'][] = $row;
            $x++;

        }
        
        echo json_encode($output);
        
    }   
    
    public function adminLoadLeads() {
        $aColumns = array(
            
                        "leads.lead_id",
                        "leads.reference_id",
                        "leads.user_id",
                        "leads.handler_id",
                       "leads.handler_name",
                        "leads.wip_agent",
                        "users.userName",
                        "leads.company_id",
                        'campaign.campaign_short_name',
                        "companies.company_name AS 'cmp_name'",
                        "leads.first_name",
                        "leads.last_name",
                        "leads.company_name",
                        "leads.phone_1",
                        "leads.lead_status",
                        "lead_statuses.color",
                        "lead_statuses.status_name",
                        "lead_statuses.lead_type",
                        "leads.client_car_registration",
                        "leads.tp_car_registration",
                        "leads.created_at", 
            "users.userName",
                       "(SELECT  count(linked_leads.lead_id) from linked_leads WHERE linked_leads.lead_id = leads.lead_id GROUP BY linked_leads.lead_id) as 'islinkedLeadsExists'"
                    );

        $aColumns_for_sorting = array(
                                    "leads.lead_id",
                                    "leads.reference_id",
                                    "users.userName",
                                    "leads.handler_name",
                                    "leads.wip_agent",
                                    "companies.company_name",
                                    'campaign.campaign_short_name',
                                    "leads.first_name",
                                    "leads.last_name",
                                    "leads.phone_1",
                                    "lead_statuses.status_name",
                                    "lead_statuses.lead_type",
//                                    "leads.company_name",
//                                    "companies.company_name",
                                    "leads.client_car_registration",
                                    "leads.tp_car_registration",
                                    "leads.created_at" 
            
                                );
        
        $aColumns_for_loop = array(       
                               
                                "reference_id",     
                                "userName",
                                "handler_name",
                                "wip_agent",
                                "cmp_name",
                                'campaign_short_name',
                              
                                "first_name",
                                "last_name",
                                "phone_1",
                                "status_name",
                                "lead_type",
                                "client_car_registration",
                                "tp_car_registration",
                                "created_at" 
            
                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "lead_id";

        /* DB table to use */
        $sTable = "leads";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        
        $sOrder = "ORDER BY leads.lead_id desc ";
        $sql_users = "select user_group_id from users where id = " . $_SESSION['adminData']['user_id'];
        $users = $this->db->query($sql_users)->result();
        if ($users[0]->user_group_id){
            $sql_user_group = "SELECT user_ids FROM user_groups where id = " . $users[0]->user_group_id;
            $user_group = $this->db->query($sql_user_group)->result();
            $user_group_user_id = json_decode($user_group[0]->user_ids);
            if (!in_array($_SESSION['adminData']['user_id'], $user_group_user_id)){
                $user_group_user_id[] = $_SESSION['adminData']['user_id'];
            }
            $user_ids = implode(",", $user_group_user_id);
        }else{
            $user_group_user_id[] = $_SESSION['adminData']['user_id'];
            $user_ids = implode(",", $user_group_user_id);
        }
        //$user_ids = 69;
        /*echo "<pre>";
        print_r($user_ids);
        echo "Users groups ........<br>";*/
//        die();
   
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns) - 1; $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $campaign_id = $_SESSION['adminData']['campaign_id'];
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];   
            if ($_SESSION['adminData']['role_name'] == "Supervisor"){
                $sWhere .= " AND  leads.user_id in ( " . "SELECT user_id FROM leads WHERE company_id IN ($company_id)" . ") and leads.campaign_id in ($campaign_id)";            
            }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                 $sWhere .= " AND leads.handler_id in (" . $user_ids . ") ";
            }else{
                $sWhere .= " AND  leads.user_id in (" . $user_ids . ") AND leads.company_id= '$company_id' and leads.campaign_id in ($campaign_id)"; }              
          }            
            $sWhere .=  "";
        } else {            
            if ($_SESSION['adminData']['role_name'] != "Admin"){

                $campaign_id = $_SESSION['adminData']['campaign_id'];
                $user_id = $_SESSION['adminData']['user_id'];
                $module_permissions = $_SESSION['adminData']['Leads'];
                $company_id = $_SESSION['adminData']['company_id'];

                if ($_SESSION['adminData']['role_name'] == "Supervisor"){
                    $sWhere .= "WHERE leads.user_id in ( " . "SELECT user_id FROM leads WHERE company_id IN ($company_id)" . ") and leads.campaign_id in ($campaign_id)";            
                }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                     $sWhere .= "WHERE leads.handler_id in (" . $user_ids . ") "; 
                }else{
                    $sWhere .= "WHERE leads.user_id in (" . $user_ids . ") AND leads.company_id = '$company_id' and leads.campaign_id in ($campaign_id)";            
                }  
            }            
            
        }
        
/* Individual column filtering */
        
    for ( $i=0 ; $i < count($aColumns_for_sorting) ; $i++ ) {
        if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
            
            if ( $sWhere == "" ) {
                $sWhere = "WHERE ";
            }
            else {
                $sWhere .= " AND ";
            }
            
            $sWhere .= $aColumns_for_sorting[$i]." LIKE '%". $_GET['sSearch_' . $i] ."%' ";
            
        }
    }        
        

        /*
         * SQL queries
         * Get data to display
         */

        $sWhere = str_replace("companies.company_name AS 'cmp_name'", "companies.company_name", $sWhere);
        
//        $sWhere = str_replace("OR (SELECT count(linked_leads.lead_id) from linked_leads WHERE linked_leads.lead_id = leads.lead_id) as 'islinkedLeadsExists' LIKE '%n%'", "", $sWhere);                
        
        $joins = " 
                    left JOIN users ON users.id = leads.user_id
                    left JOIN companies ON companies.id = leads.company_id 
                    left JOIN lead_statuses ON lead_statuses.id = leads.lead_status 
                    left JOIN campaign ON campaign.campaign_id = leads.campaign_id 
";
                    
        
       /* $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;*/
          $sQuery = "SELECT  SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
       /* echo $sQuery;
        die();*/
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found 
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
       $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];


        /* Total data set length */
        
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
        
//        echo $sQuery = "
//		SELECT COUNT(" . $sIndexColumn . ") as result_total
//		FROM   $sTable " . ($_SESSION['adminData']['role_name'] != "Admin") ? "WHERE user_id= $user_id AND company_id= $company_id" : '' 
//	;
        

        $countWhere = "";
            
        if ($_SESSION['adminData']['role_name'] != "Admin"){

            if ($_SESSION['adminData']['role_name'] == "Supervisor"){
                $countWhere = "WHERE company_id= $company_id";            
            }else{
                $countWhere = "WHERE user_id= $user_id AND company_id= $company_id";            
            }
            
        }
        
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere" 
	;


        
        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
//        $x = 1;
        
        foreach ($rResult as $aRow) {
            
        $row = array();
                $aRow['created_at'] = date("d-m-Y H:i:s", strtotime($aRow['created_at']));
                //$aRow['created_at'] = date("d-m-Y", strtotime($aRow['created_at']));
                $row[] = "<input class='multiple_checkbox' type='checkbox'  value= " . $aRow['lead_id'] . " name= " . $aRow['lead_id'] . " id= " . $aRow['lead_id'] . " />";
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-info spaceUnder' style='background: ". $aRow['color'] .";padding: 2px 2px; margin-top: 3em; font-size: 11px; '>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='background:" . $aRow['color'] .";padding: 2px 4px; font-size: 12px;'>" . $aRow['status_name'] . "</button>";

                if ($aRow['islinkedLeadsExists'] > 0 && $_SESSION['adminData']['role_name'] == "Admin"){
                    
                   //$aRow['reference_id'] = "<span style='color: #C70039'>" . $aRow['reference_id'] . "</span>";
                   $aRow['reference_id'] = "<span style='color: #C70039'>" . $aRow['reference_id'] . "</span>";
                   $aRow['userName'] = "<span style='color: #C70039'>" . $aRow['userName'] . "</span>";
                   $aRow['cmp_name'] = "<span style='color: #C70039'>" . $aRow['cmp_name'] . "</span>";
                   $aRow['campaign_short_name'] = "<span style='color: #C70039'>" . $aRow['campaign_short_name'] . "</span>";
                   $aRow['first_name'] = "<span style='color: #C70039'>" . $aRow['first_name'] . "</span>";
                   $aRow['last_name'] = "<span style='color: #C70039'>" . $aRow['last_name'] . "</span>";
                   $aRow['phone_1'] = "<span style='color: #C70039'>" . $aRow['phone_1'] . "</span>";
                   $aRow['status_name'] = "<span style='color: #C70039'>" . $aRow['status_name'] . "</span>";
                   $aRow['lead_type'] = "<span style='color: #C70039'>" . $aRow['lead_type'] . "</span>";
                   $aRow['created_at'] = "<span style='color: #C70039'>" . $aRow['created_at'] . "</span>";
                   
                }else{
                    
                   //$aRow['reference_id']        = $aRow['reference_id'];
                   $aRow['reference_id']        = $aRow['reference_id'];
                   $aRow['userName']            = $aRow['userName'];
                   $aRow['cmp_name']            = $aRow['cmp_name'];
                   $aRow['campaign_short_name'] = $aRow['campaign_short_name'];
                   $aRow['first_name']          = $aRow['first_name'];
                   $aRow['last_name']           = $aRow['last_name'];
                   $aRow['phone_1']             = $aRow['phone_1'];
                   $aRow['status_name']         = $aRow['status_name'];
                   $aRow['lead_type']           = $aRow['lead_type'];
                   $aRow['created_at']          = $aRow['created_at'];
                   
                }
            

            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                   
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }
            
            
            $sql = "SELECT * FROM `lead_manually_api_integration` where lead_id = " . $aRow['lead_id'];
            $api_ins = $this->db->query($sql)->result();

            $update             = ($_SESSION['adminData']['Leads']['permission_update'] == 1) ? '<a target="_blank" title="Edit Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/editLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            /*$clone              = (1 == 1) ? '<a title="Clone Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/cloneLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-clone"></i></a>' : '';*/
            /*$clone              = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Clone Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/cloneLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-clone"></i></a>' : '';*/
             $clone              = (($_SESSION['adminData']['Leads']['permission_clone'] == 1) || ($_SESSION['adminData']['role_name'] == "Admin")|| ($_SESSION['adminData']['role_name'] == "Claim Handler")) ? '<a target="_blank" title="Clone Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/cloneLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-clone"></i></a>' : '';
            
            
            /*$onlyForAdmin       = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Edit Lead Status" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadStatus/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-check-circle"></i></a>' : "";*/
            
            $onlyForAdmin       = (($_SESSION['adminData']['Leads']['permission_changestatus'] == 1) || ($_SESSION['adminData']['role_name'] == "Admin")|| ($_SESSION['adminData']['role_name'] == "Claim Handler")) ? '<a target="_blank" title="Edit Lead Status" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadStatus/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-check-circle"></i></a>' : "";
            
            $onlyForAdmin_4     = (($_SESSION['adminData']['role_name'] == "Admin") || ($_SESSION['adminData']['role_name'] == "Claim Handler")) ? '<a title="Change Lead User" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadUser/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-cog"></i></a>' : "";
            
            $onlyForAdmin_chngh     = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a target="_blank" title="Assign Claim Handler" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadClaimHandler/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-user"></i></a>' : "";
            
            $onlyForAdmin_2   = ($_SESSION['adminData']['role_name'] != "Client") ? '<a target="_blank" title="Add Lead Note" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/addLeadNote/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-sticky-note-o"></i></a>' : ""; 
            //$onlyForAdmin_2     = '<a title="Lead Note" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/addLeadNote/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-sticky-note-o"></i></a>';  
            $onlyForAdmin_2     = '<a target="_blank" title="Lead Note" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/addLeadNote/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-sticky-note-o"></i></a>'; 
            $onlyForAdmin_3     = ($_SESSION['adminData']['role_name'] == "Admin" && $aRow['islinkedLeadsExists'] > 0) ? '<a title="Linked Leads" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/viewLinkedLeads/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-link"></i></a>' : ""; 
            $view               = ($_SESSION['adminData']['Leads']['permission_view'] == 1) ? '<a target="_blank" title="View Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/viewLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $delete             = ($_SESSION['adminData']['Leads']['permission_delete'] == 1) ? '<button title="Delete Lead" style="padding: 5px 5px 5px 5px; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteLead('.$aRow['lead_id'].')" name="del" data-value="'.$aRow['lead_id'].'"><i class="ti-trash"></i></button>' : '';
            /*$HDRDocuments       = (1 == 1) ? '<a title="Upload Documents" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/documents/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-upload"></i></a>' : ""; */
            $HDRDocuments       = (($_SESSION['adminData']['Leads']['permission_uploaddocs'] == 1) || ($_SESSION['adminData']['role_name'] == "Admin") || ($_SESSION['adminData']['role_name'] == "Claim Handler")) ? '<a target="_blank" title="Upload Documents" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/documents/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-upload"></i></a>' : ""; 
            
            $manual_api_integration     = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a target="_blank" title="Manual Api Integration" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/manuallyApiIntegration/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-paper-plane"></i></a>' : "";
            $manual_api_integration_1   = ($_SESSION['adminData']['role_name'] == "Admin" && $api_ins) ? '<a target="_blank" href="#" title="View Manually Inserted Api Integration ID" style="margin-top: 20px" data-toggle="modal" data-target="#manul_flg" onclick="getInsertedApiRec('.$aRow['lead_id'].')"><i class="fa fa-eye"></i></a>' : '';
            
            $send_email   = (1==1) ? '<a target="_blank" title="Email Messages" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/New_messageWithLeads/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-envelope"></i></a>' : "";
            
             $changeAgent               = ($_SESSION['adminData']['role_name'] != "Client") ? '<a target="_blank" title="Change Agent" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadAgent/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-user"></i></a>' : '';
            
            $event_calnders   = (1==1) ? '<a target="_blank" title="Event Tasks " style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/EventsTasksWithLeads/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-calendar"></i></a>' : "";
            
            $sendEmailtoThisClient   = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a target="_blank" title="Send email to cleint" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/send_emailsToSelectedClient/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-paper-plane-o"></i></a>' : "";
//            $row[] = $update . $clone . $onlyForAdmin . $onlyForAdmin_2 . $onlyForAdmin_3 . $view . $delete;
            
            $row[] = '
                    <div class="btn-group">
                    
                            <a class="btn btn-info dropdown-toggle" data-toggle="dropdown" href="#">
                              Action
                              <span class="caret"></span>
                            </a>
  
                            <ul class="dropdown-menu" style="margin-left: -70px;margin-top: 5px; ">' 
                                . $manual_api_integration 
                                . $HDRDocuments 
                                . $update 
                                . $clone 
                                . $onlyForAdmin_4 
                                . $onlyForAdmin_chngh
                                . $onlyForAdmin 
                                . $onlyForAdmin_2 
                                . $onlyForAdmin_3 
                                . $view 
                                . $delete  
                                . $manual_api_integration_1
                                . $send_email
                                . $changeAgent
                                . $event_calnders
                                . $sendEmailtoThisClient
                                .
                            '</ul>
  
                    </div>';
            
//            $output['aaData'][] = $row;
            $output['aaData'][] = $row;
           // $x++;

        }
        if($_SESSION['adminData']['Leads']['permission_view'] == 1 || $_SESSION['adminData']['role_name'] == "Closer" ){
            echo json_encode($output);
        }else{
            $output = NULL;
            echo json_encode($output);
        }
        
        
    }  
    
  public function adminLoadLeadsWIP() {
       $LogedinUserRoleName    = $_SESSION['adminData']['role_name'];
        $aColumns = array(
            
                        "leadswip.lead_id",
                        "leadswip.reference_id",
                        "leadswip.user_id",
                        "leadswip.handler_id",
                       "leadswip.agent_name",
            "leadswip.wip_name",
                        "users.userName",
                        "leadswip.company_id",
                        'campaign.campaign_short_name',
                        "companies.company_name AS 'cmp_name'",
                        "leadswip.first_name",
                        "leadswip.last_name",
                        "leadswip.company_name",
                        "leadswip.phone_1",
                        "leadswip.lead_status",
                        "lead_statuses.status_name",
                        "lead_statuses.lead_type",
                        "leadswip.client_car_registration",
                        "leadswip.tp_car_registration",
                        "leadswip.created_at", 
                        "leadswip.isStatusChangeLocked", 
            "users.userName",
                        "(SELECT count(linked_leads.lead_id) from linked_leads WHERE linked_leads.lead_id = leadswip.lead_id) as 'islinkedLeadsExists'"      
            
                    );

        $aColumns_for_sorting = array(
//                                    "leadswip.lead_id",
                                    "leadswip.reference_id",
                                    "users.userName",
                                    "leadswip.agent_name",
            "leadswip.wip_name",
                                    "companies.company_name",
                                    'campaign.campaign_short_name',
                                    "leadswip.first_name",
                                    "leadswip.last_name",
                                    "leadswip.phone_1",
                                    "lead_statuses.status_name",
                                    "lead_statuses.lead_type",
//                                    "leadswip.company_name",
//                                    "companies.company_name",
                                    "leadswip.client_car_registration",
                                    "leadswip.tp_car_registration",
                                    "leadswip.created_at" 
            
                                );
        
        $aColumns_for_loop = array(       
                                "reference_id",            
                                "userName",
                                "agent_name",
                                "wip_name",
                                "cmp_name",
                                'campaign_short_name',
                              
                                "first_name",
                                "last_name",
                                "phone_1",
                                "status_name",
                                "lead_type",
                                "client_car_registration",
                                "tp_car_registration",
                                "created_at" 
            
                            );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "lead_id";

        /* DB table to use */
        $sTable = "leadswip";

        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        
        $sOrder = "ORDER BY leadswip.lead_id desc ";
        $sql_users = "select user_group_id from users where id = " . $_SESSION['adminData']['user_id'];
        $users = $this->db->query($sql_users)->result();
        if ($users[0]->user_group_id){
            $sql_user_group = "SELECT user_ids FROM user_groups where id = " . $users[0]->user_group_id;
            $user_group = $this->db->query($sql_user_group)->result();
            $user_group_user_id = json_decode($user_group[0]->user_ids);
            if (!in_array($_SESSION['adminData']['user_id'], $user_group_user_id)){
                $user_group_user_id[] = $_SESSION['adminData']['user_id'];
            }
            $user_ids = implode(",", $user_group_user_id);
        }else{
            $user_group_user_id[] = $_SESSION['adminData']['user_id'];
            $user_ids = implode(",", $user_group_user_id);
        }
//        echo "<pre>";
//        print_r($user_ids);
//        die();
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns) - 1; $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $campaign_id = $_SESSION['adminData']['campaign_id'];
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['WIP'];   
            if ($_SESSION['adminData']['role_name'] == "Supervisor" || $_SESSION['adminData']['role_name'] == "Quality Assurance"){
                $sWhere .= "AND  leadswip.user_id in ( " . "SELECT user_id FROM leadswip WHERE company_id IN ($company_id)" . ") and leadswip.campaign_id in ($campaign_id)";            
            }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                 $sWhere .= " AND  leadswip.handler_id = (" . $user_ids . ") "; 
            }else{
                $sWhere .= " AND  leadswip.user_id in (" . $user_ids . ") AND leadswip.company_id= '$company_id' and leadswip.campaign_id in ($campaign_id)";            
            }            
            
        }            
            $sWhere .=  "";
        } else {            
            if ($_SESSION['adminData']['role_name'] != "Admin"){

                $campaign_id = $_SESSION['adminData']['campaign_id'];
                $user_id = $_SESSION['adminData']['user_id'];
                $module_permissions = $_SESSION['adminData']['WIP'];
                $company_id = $_SESSION['adminData']['company_id'];

                if ($_SESSION['adminData']['role_name'] == "Supervisor" || $_SESSION['adminData']['role_name'] == "Quality Assurance"){
                    $sWhere .= "WHERE leadswip.user_id in ( " . "SELECT user_id FROM leadswip WHERE company_id IN ($company_id)" . ") and leadswip.campaign_id in ($campaign_id)";            
                }elseif($_SESSION['adminData']['role_name'] == "Claim Handler"){
                     $sWhere .= "WHERE leadswip.handler_id in (" . $user_ids . ") ";   
                }else{
                    $sWhere .= "WHERE leadswip.user_id in (" . $user_ids . ") AND leadswip.company_id = '$company_id' and leadswip.campaign_id in ($campaign_id)";            
                }  
            }            
            
        }
        
/* Individual column filtering */
        
    for ( $i=0 ; $i < count($aColumns_for_sorting) ; $i++ ) {
       /* $_GET['bSearchable_2'] = true;
        $_GET['sSearch_2'] = 'adil';*/
        if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
            
            if ( $sWhere == "" ) {
                $sWhere = "WHERE ";
            }
            else {
                $sWhere .= " AND ";
            }
            
            $sWhere .= $aColumns_for_sorting[$i]." LIKE '%". $_GET['sSearch_' . $i] ."%' ";
            
        }
    }        
        

        /*
         * SQL queries
         * Get data to display
         */

        $sWhere = str_replace("companies.company_name AS 'cmp_name'", "companies.company_name", $sWhere);
        
//        $sWhere = str_replace("OR (SELECT count(linked_leadswip.lead_id) from linked_leadswip WHERE linked_leadswip.lead_id = leadswip.lead_id) as 'islinkedleadswipExists' LIKE '%n%'", "", $sWhere);                
        
        $joins = " 
                    left JOIN users ON users.id = leadswip.user_id
                    left JOIN companies ON companies.id = leadswip.company_id 
                    left JOIN lead_statuses ON lead_statuses.id = leadswip.lead_status 
                    left JOIN campaign ON campaign.campaign_id = leadswip.campaign_id 
";
                    
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;

        
//        echo $sQuery;
//        die();
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        
        $sQuery = "
		SELECT FOUND_ROWS() as total_found 
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();
        
       $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];


        /* Total data set length */
        
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
        
//        echo $sQuery = "
//		SELECT COUNT(" . $sIndexColumn . ") as result_total
//		FROM   $sTable " . ($_SESSION['adminData']['role_name'] != "Admin") ? "WHERE user_id= $user_id AND company_id= $company_id" : '' 
//	;
        

        $countWhere = "";
            
        if ($_SESSION['adminData']['role_name'] != "Admin"){

            if ($_SESSION['adminData']['role_name'] == "Supervisor"){
                $countWhere = "WHERE company_id= $company_id";            
            }else{
                $countWhere = "WHERE user_id= $user_id AND company_id= $company_id";            
            }
            
        }
        
        
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable $countWhere" 
	;


        
        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
//        $x = 1;
        
        foreach ($rResult as $aRow) {
            
        $row = array();

                $aRow['created_at'] = date("d-m-Y H:i:s", strtotime($aRow['created_at']));
                //$aRow['created_at'] = date("d-m-Y", strtotime($aRow['created_at']));
//                $row[] = $x;
                
            if ($aRow['lead_type'] == "new") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-default' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-default' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Converted") {
                
                $aRow['lead_type'] =   "<button type='button' class='btn btn-success' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-success' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Validated") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-warning' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Closed") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-danger' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Invalidated") {

                $aRow['lead_type'] =   "<button type='button' class='btn' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";

                
            }elseif ($aRow['lead_type'] == "Qualified") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-info' style='padding: 2px 2px; margin-top: 3em; font-size: 11px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-info' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }elseif ($aRow['lead_type'] == "Contacted") {

                $aRow['lead_type'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['lead_type'] . "</button>";
                $aRow['status_name'] =   "<button type='button' class='btn btn-primary' style='padding: 2px 8px; font-size: 13px;'>" . $aRow['status_name'] . "</button>";
                
            }

                /*if ($aRow['islinkedLeadsExists'] > 0 && $_SESSION['adminData']['role_name'] == "Admin"){*/
                if ($aRow['isStatusChangeLocked'] > 0 ){    
                   $aRow['reference_id'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['reference_id'] . "</span>";
                   $aRow['userName'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['userName'] . "</span>";
                   $aRow['cmp_name'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['cmp_name'] . "</span>";
                   $aRow['campaign_short_name'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['campaign_short_name'] . "</span>";
                   $aRow['first_name'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['first_name'] . "</span>";
                   $aRow['last_name'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['last_name'] . "</span>";
                   $aRow['phone_1'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['phone_1'] . "</span>";
                   $aRow['status_name'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['status_name'] . "</span>";
                   $aRow['lead_type'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['lead_type'] . "</span>";
                   $aRow['created_at'] = "<span style='color: #8ad869;text-decoration: line-through;'>" . $aRow['created_at'] . "</span>";
                   
                }else{
                    
                   $aRow['reference_id']        = $aRow['reference_id'];
                   $aRow['userName']            = $aRow['userName'];
                   $aRow['cmp_name']            = $aRow['cmp_name'];
                   $aRow['campaign_short_name'] = $aRow['campaign_short_name'];
                   $aRow['first_name']          = $aRow['first_name'];
                   $aRow['last_name']           = $aRow['last_name'];
                   $aRow['phone_1']             = $aRow['phone_1'];
                   $aRow['status_name']         = $aRow['status_name'];
                   $aRow['lead_type']           = $aRow['lead_type'];
                   $aRow['created_at']          = $aRow['created_at'];
                   
                }
            

            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }
            
            
            $sql = "SELECT * FROM `lead_manually_api_integration` where lead_id = " . $aRow['lead_id'];
            $api_ins = $this->db->query($sql)->result();

            $update             = ($aRow['isStatusChangeLocked'] == 0) ? '<a title="Edit Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/editLeadswip/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-pencil-alt"></i></a>' : '';
            /*$clone              = (1 == 1) ? '<a title="Clone Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/cloneLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-clone"></i></a>' : '';*/
            /*$clone              = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Clone Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/cloneLead/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-clone"></i></a>' : '';*/
             $clone              = ($aRow['isStatusChangeLocked'] == 0) ? '<a title="Convert to real Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/Leadswiptoreal/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-clone"></i></a>' : '';
            
            
            /*$onlyForAdmin       = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="Edit Lead Status" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadStatus/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-check-circle"></i></a>' : "";*/
            
            $onlyForAdmin       = (1==1) ? '<a title="Edit Lead Status" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changeLeadStatuswip/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-check-circle"></i></a>' : "";
            
            
            $onlyForAdmin_2   = ($LogedinUserRoleName != "Client") ? '<a title="Add Lead Note" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/addLeadNoteWIP/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-sticky-note-o"></i></a>' : ""; 
          
            $onlyForAdmin_2     = '<a title="Lead Note" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/addLeadNoteWIP/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-sticky-note-o"></i></a>'; 
          
            $view               = (1 == 1) ? '<a title="View Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/viewLeadwip/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            
             $changeAgent               = ($LogedinUserRoleName != "Client") ? '<a title="Change Agent" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/changewipAgent/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="ti-user"></i></a>' : '';
            
            $changeUser       = ($LogedinUserRoleName != "Client" && $LogedinUserRoleName != "Closer" && $LogedinUserRoleName != "Supervisor") ? '<a title="Change Lead User" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/ChangeWIPLeadUser/') . $aRow['lead_id'] . '" type="button" class="btn" ><i class="fa fa-user"></i></a>' : '';
            
             $delete             = ($LogedinUserRoleName == "Admin" || ($LogedinUserRoleName == "Quality Assurance" && $aRow['lead_status'] == 11)) ? '<button title="Delete Lead" style="padding: 5px 5px 5px 5px; background-color: Transparent; background-repeat:no-repeat; border: none; cursor:pointer; overflow: hidden;outline:none; color: red" class="" onclick="deleteLeadwip('.$aRow['lead_id'].')" name="del" data-value="'.$aRow['lead_id'].'"><i class="ti-trash"></i></button>' : '';'';
          
              
//            $row[] = $update . $clone . $onlyForAdmin . $onlyForAdmin_2 . $onlyForAdmin_3 . $view . $delete;
            
            $row[] = '
                    <div class="btn-group">
                    
                            <a class="btn btn-info dropdown-toggle" data-toggle="dropdown" href="#">
                              Action
                              <span class="caret"></span>
                            </a>
  
                            <ul class="dropdown-menu" style="margin-left: -70px;margin-top: 5px; ">' 
                                . $update 
                                . $onlyForAdmin_2 
                                . $changeUser
                                . $clone  
                                . $onlyForAdmin
                                . $changeAgent
                                . $view 
                                . $delete .
                            '</ul>
  
                    </div>';
            
//            $output['aaData'][] = $row;
            $output['aaData'][] = $row;
//            $x++;

        }
            echo json_encode($output);
        
    }     

    public function getInsertedApiRec(){
        
        $id = $this->input->post('getInsertedApiRec');
        
        $sql = ($id) ? "select * from lead_manually_api_integration where lead_id = $id order by lead_id desc" : '';
        $apiData = ($sql) ? $this->db->query($sql)->result() : '';
        
        $html = "";
        
        if ($apiData){
            
            
            foreach ($apiData as $data){
                
                $api_insertion_id = json_decode($data->api_insertion_id);
                
                $html .= "<tr>";            
                $html .= "<td style='text-align: left'>API Insertion ID</td>";
                $html .= "<td>";
                $html .= "<table>";


                
                foreach ($api_insertion_id as $key => $api_id){
                    $array = json_decode(json_encode($api_id),true);
                    $html .= "<tr><td style='text-align: left'>" . $key . " = " . $array[0] . "</td><tr>";   
                }                
                $html .= "</table>";
                
                $html .= "</td>"; 
                $html .= "</tr>";            
                
            }
            
        }
        
        echo $html;        
        
    }
    
// Done     
    
    public function manuallyApiIntegration($lead_id){
        
        $this->load->model('Mods');
        $getLeadData = ($lead_id) ? $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $lead_id) : '';
        
        if ($getLeadData){
            $lead_campaign_id   = $getLeadData[0]->campaign_id;
            $getCampaignData    = ($lead_campaign_id) ? $this->Mods->getIdByName($table_name = "campaign", $condition = "campaign_id", $data = $lead_campaign_id) : '';
            if($getCampaignData[0]->campaign_short_name == "PI"){
                
                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
                
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';
                
                $firstName                                          = $getLeadData[0]->first_name; 
                $lastName                                           = $getLeadData[0]->last_name;
                $phone1                                             = $getLeadData[0]->phone_1;
                $phone2                                             = $getLeadData[0]->phone_2;
                $email                                              = $getLeadData[0]->email;
                $address                                            = $getLeadData[0]->address;
                $address2                                           = $getLeadData[0]->address_2;
                $address3                                           = $getLeadData[0]->address_3;
                $towncity                                           = $getLeadData[0]->town_city;
                $postcode                                           = $getLeadData[0]->post_code;
                $contactphone                                       = $getLeadData[0]->contact_phone;
                $contactsms                                         = $getLeadData[0]->contact_sms;
                $contactemail                                       = $getLeadData[0]->contact_email;
                $contactmail                                        = $getLeadData[0]->contact_mail;
                $contacttime                                        = $getLeadData[0]->contact_time;
                $PositiononLiability                                = $getLeadData[0]->position_on_liability;
                $TPInsurerDetailsName                               = $getLeadData[0]->tp_insurer_details_name;
                $accidentCircumstances                              = $getLeadData[0]->accident_circumstances;
                $ClientStatusinAccident                             = $getLeadData[0]->client_status_in_accident;
                $AreyouaLitigationFriend                            = $getLeadData[0]->are_you_a_litigation_friend;
                $replacementInvoiceNumber                           = $getLeadData[0]->replacement_invoice_number;
                $iflitigationfriendnameanddateofbirthoftheclaimant  = $getLeadData[0]->if_litigation_friend_name_and_date_of_birth_of_the_claimant;
                $DateofAccident                                     = $getLeadData[0]->date_of_accident;
                $TimeofAccident                                     = $getLeadData[0]->time_of_accident;
                $WhatInjuriesdidyousuffer                           = $getLeadData[0]->what_injuries_did_you_suffer;
                $DidyouseekMedicalAttention                         = $getLeadData[0]->did_you_seek_medical_attention;
                $Whodoyoublamefortheaccident                        = $getLeadData[0]->who_do_you_blame_for_the_accident;
                $Doyouhaveaccesstothedetailsofthepartyyoublame      = $getLeadData[0]->do_you_have_access_to_the_details_of_the_party_you_blame;
                $ClientCarRegistration                              = $getLeadData[0]->client_car_registration;
                $ClientCarMakeModel                                 = $getLeadData[0]->client_car_make_model;
                $ClientInsurer                                      = $getLeadData[0]->client_insurer;
                $ClientPolicyNumber                                 = $getLeadData[0]->client_policy_number;
                $TPCarRegistration                                  = $getLeadData[0]->tp_car_registration;
                $TPCarMakeModel                                     = $getLeadData[0]->tp_car_make_model;
                $Haveyouclaimedbefore                               = $getLeadData[0]->have_you_claimed_before;
                $Doyouwishtomakeaclaim                              = $getLeadData[0]->do_you_wish_to_make_a_claim;
                $Additionalnotes                                    = $getLeadData[0]->additional_notes;
                $Isthisalinkedpassenger                             = $getLeadData[0]->is_this_a_linked_passenger;
                $PreferredtimeofContact                             = $getLeadData[0]->preferred_time_of_contact;
                $ClientsOccupation                                  = $getLeadData[0]->clients_occupation;
                $NINumber                                           = $getLeadData[0]->ni_number;
                $WastheClientVehiclerepairedortotalloss             = $getLeadData[0]->was_the_client_vehicle_repaired_or_total_loss;
                $Hastheclientbeenpaidoutforhis_hervehicledamage     = $getLeadData[0]->has_the_client_been_paid_out_for_his_her_vehicle_damage;
                $Werethepoliceinvolved                              = $getLeadData[0]->were_the_police_involved;
                $Whatwastheexactlocationoftheaccident               = $getLeadData[0]->what_was_the_exact_location_of_the_accident;
                $Whatwastheweatherlike                              = $getLeadData[0]->what_was_the_weather_like;
                $HowmanyOccupantsinthevehicle                       = $getLeadData[0]->how_many_occupants_in_the_vehicle;
                $PreferredTimetoCall                                = $getLeadData[0]->preferred_time_to_call;
                $ClientPassword                                     = $getLeadData[0]->client_password;
                $WasAccidentreportedorrecordedintheaccidentBook     = $getLeadData[0]->was_accident_reported_or_recorded_in_the_accident_book;
                $EmployersName_Address_TelephoneNumber              = $getLeadData[0]->employers_name_address_telephone_number;
                $MedNegOnly                                         = $getLeadData[0]->med_neg_only;
                $OLPLONLY                                           = $getLeadData[0]->ol_pl_only;
                $CreditHireorVehicleReplacement                     = $getLeadData[0]->credit_hire_or_vehicle_replacement;
                $IsInjuryOngoingInjury_Physio                       = $getLeadData[0]->is_injury_on_going_injury_physio;
                $ThirdpartypolicyNumber                             = $getLeadData[0]->third_party_policy_number;
                $InterpreterName                                    = $getLeadData[0]->interpreter_name;
                $Interpreterpaid                                    = $getLeadData[0]->interpreter_paid;
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead>
                                        <key>2QFfQJZmch2JGCuqENlFGCbWRfzqqi5F</key>
                                        <leadgroup>50672</leadgroup>
                                        <site>0</site>
                                        <introducer>0</introducer>
                                        <type></type>
                                        <user></user>
                                        <status></status>
                                        <reference></reference>
                                        <source>" . $companyName . "</source>
                                        <medium>" . $companyName . "</medium>
                                        <term>$BDMName</term>
                                        <cost></cost>
                                        <value></value>
                                        <title></title>
                                        <firstname>" . $firstName . "</firstname>
                                        <lastname>" . $lastName . "</lastname>
                                        <company>" . $companyName . "</company>
                                        <jobtitle>" . $BDMName . "</jobtitle>
                                        <phone1>" . $phone1 . "</phone1>
                                        <phone2>" . $phone2 . "</phone2>
                                        <email>" . $email . "</email>
                                        <address>" . $address . "</address>
                                        <address2>" . $address2 . "</address2>
                                        <address3>" . $address3 . "</address3>
                                        <towncity>" . $towncity . "</towncity>
                                        <postcode>" . $postcode . "</postcode>
                                        <dobday>" . $dobDay . "</dobday>
                                        <dobmonth>" . $dobMonth . "</dobmonth>
                                        <dobyear>" . $dobYear . "</dobyear>
                                        <contactphone>" . $contactphone . "</contactphone>
                                        <contactsms>" . $contactsms . "</contactsms>
                                        <contactemail>" . $contactemail . "</contactemail>
                                        <contactmail>" . $contactmail . "</contactmail>
                                        <contacttime>" . $contacttime . "</contacttime>
                                        <data2>" . $PositiononLiability . "</data2>
                                        <data3>" . $TPInsurerDetailsName . "</data3>
                                        <data4>" . $accidentCircumstances . "</data4>
                                        <data5>" . $ClientStatusinAccident . "</data5>
                                        <data6>" . $AreyouaLitigationFriend . "</data6>
                                        <data7>" . $replacementInvoiceNumber . "</data7>
                                        <data8>" . $iflitigationfriendnameanddateofbirthoftheclaimant . "</data8>
                                        <data9>" . $DateofAccident . "</data9>
                                        <data10>" . $TimeofAccident . "</data10>
                                        <data12>" . $WhatInjuriesdidyousuffer . "</data12>
                                        <data13>" . $DidyouseekMedicalAttention . "</data13>
                                        <data14>" . $Whodoyoublamefortheaccident . "</data14>
                                        <data15>" . $Doyouhaveaccesstothedetailsofthepartyyoublame . "</data15>
                                        <data16>" . $ClientCarRegistration . "</data16>
                                        <data17>" . $ClientCarMakeModel . "</data17>
                                        <data18>" . $ClientInsurer . "</data18>
                                        <data19>" . $ClientPolicyNumber. "</data19>
                                        <data20>" . $TPCarRegistration . "</data20>
                                        <data21>" . $TPCarMakeModel . "</data21>
                                        <data22>" . $Haveyouclaimedbefore . "</data22>
                                        <data23>" . $Doyouwishtomakeaclaim . "</data23>
                                        <data24>" . $Additionalnotes . "</data24>
                                        <data25>" . $Isthisalinkedpassenger . "</data25>
                                        <data26>" . $PreferredtimeofContact . "</data26>
                                        <data27>" . $ClientsOccupation . "</data27>
                                        <data28>" . $NINumber . "</data28>
                                        <data29>" . $WastheClientVehiclerepairedortotalloss . "</data29>
                                        <data30>" . $Hastheclientbeenpaidoutforhis_hervehicledamage . "</data30>
                                        <data31>" . $Werethepoliceinvolved . "</data31>
                                        <data32>" . $Whatwastheexactlocationoftheaccident . "</data32>
                                        <data33>" . $Whatwastheweatherlike . "</data33>
                                        <data34>" . $HowmanyOccupantsinthevehicle . "</data34>
                                        <data35>" . $PreferredTimetoCall . "</data35>
                                        <data36>" . $ClientPassword . "</data36>
                                        <data40>" . $WasAccidentreportedorrecordedintheaccidentBook . "</data40>
                                        <data41>" . $EmployersName_Address_TelephoneNumber . "</data41>
                                        <data42>" . $MedNegOnly . "</data42>
                                        <data44>" . $OLPLONLY . "</data44>
                                        <data45>" . $CreditHireorVehicleReplacement . "</data45>
                                        <data46>" . $IsInjuryOngoingInjury_Physio . "</data46>
                                        <data47>" . $ThirdpartypolicyNumber . "</data47>
                                        <data49>" . $InterpreterName . "</data49>
                                        <data50>" . $Interpreterpaid . "</data50>
                                      </lead>
                                    </data>";


                $xml_data_2 = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead>
                                        <key>jdSVRnQ5KhynWMqf5auToImoBmAdO6GJ</key>
                                        <leadgroup>55264</leadgroup>
                                        <site>18111</site>
                                        <introducer>0</introducer>
                                        <type></type>
                                        <user></user>
                                        <status></status>
                                        <reference></reference>
                                        <source>$companyName</source>
                                        <medium>$companyName</medium>
                                        <term>$BDMName</term>
                                        <cost></cost>
                                        <value></value>
                                        <title></title>
                                        <firstname>". $firstName ."</firstname>
                                        <lastname>". $lastName ."</lastname>
                                        <company>". $companyName ."</company>
                                        <jobtitle>". $BDMName ."</jobtitle>
                                        <phone1></phone1>
                                        <phone2></phone2>
                                        <fax></fax>
                                        <email></email>
                                        <address></address>
                                        <address2></address2>
                                        <address3></address3>
                                        <towncity></towncity>
                                        <postcode></postcode>
                                        <dobday></dobday>
                                        <dobmonth></dobmonth>
                                        <dobyear></dobyear>
                                        <contactphone></contactphone>
                                        <contactsms></contactsms>
                                        <contactemail></contactemail>
                                        <contactmail></contactmail>
                                        <contactfax></contactfax>
                                        <contacttime></contacttime>
                                        <data1></data1>
                                        <data2></data2>
                                        <data3></data3>
                                        <data4></data4>
                                        <data5></data5>
                                        <data6></data6>
                                        <data7></data7>
                                      </lead>
                                    </data>";

    // consumercreditjustice Flg Integration 

                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);
    // Round 1 Flg Integration 

                $URL_2 = "https://round1solutions.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch_2 = curl_init($URL_2);

                curl_setopt($ch_2, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch_2, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch_2, CURLOPT_POST, 1);
                $xml_data_2 = str_replace('&', '&#38;', $xml_data_2);
                curl_setopt($ch_2, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data_2))
                );

                curl_setopt($ch_2, CURLOPT_POSTFIELDS, $xml_data_2);
                curl_setopt($ch_2, CURLOPT_RETURNTRANSFER, 1);

                $output_2 = curl_exec($ch_2);
                $item_2 = new SimpleXMLElement($output_2);
                $hit_message_2 = $item_2->item[0]->message;
                $lead_id_2 = $item_2->item[0]->id;

                curl_close($ch_2);

                $xml_2          = simplexml_load_string($output_2, "SimpleXMLElement", LIBXML_NOCDATA);
                $json_2         = json_encode($xml_2);
                $outputArray_2  = json_decode($json_2, TRUE);

//                $api_ids = array('consumercreditjustice_flg' => $lead_id , 'claimline365_flg' => $lead_id_1, 'round1solutions_fld' => $lead_id_2);
                $api_ids = array('consumercreditjustice_flg' => $lead_id , 'round1solutions_fld' => $lead_id_2);

                /* ---------------------------flg hit end------------------ */

//                if ($hit_message == 'OK' && $hit_message_2 == 'OK' && $hit_message_1 == 'OK') {
                if ($hit_message == 'OK' && $hit_message_2 == 'OK') {
                    
                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add PI Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'PI - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
                
                
            }   
            elseif($getCampaignData[0]->campaign_short_name == "HDR"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
                
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                                                              = $getLeadData[0]->title;
                $firstName                                                          = $getLeadData[0]->first_name;
                $lastName                                                           = $getLeadData[0]->last_name;
                $phone1                                                             = $getLeadData[0]->phone_1;
                $phone2                                                             = $getLeadData[0]->phone_2;
                $email                                                              = $getLeadData[0]->email;
                $address                                                            = $getLeadData[0]->address;
                $address2                                                           = $getLeadData[0]->address_2;
                $address3                                                           = $getLeadData[0]->address_3;
                $towncity                                                           = $getLeadData[0]->town_city;
                $postcode                                                           = $getLeadData[0]->post_code; 
                $contactphone                                                       = $getLeadData[0]->contact_phone; 
                $contactsms                                                         = $getLeadData[0]->contact_sms; 
                $contactemail                                                       = $getLeadData[0]->contact_email;
                $contactmail                                                        = $getLeadData[0]->contact_mail; 
                $contactfax                                                         = $getLeadData[0]->contact_fax; 
                $contacttime                                                        = $getLeadData[0]->contact_time; 
                $invoice_number                                                     = $getLeadData[0]->invoice_number;
                $PositiononLiability                                                = $getLeadData[0]->position_on_liability; 
                $AreyouaLitigationFriend                                            = $getLeadData[0]->are_you_a_litigation_friend;
                $replacement_invoice_number                                         = $getLeadData[0]->replacement_invoice_number; 
                $Iflitigationfriendnameanddateofbirthoftheclaimant                  = $getLeadData[0]->if_litigation_friend_name_and_date_of_birth_of_the_claimant;
                $preferred_date_to_call                                             = $getLeadData[0]->preferred_date_to_call;
                $ClientsOccupation                                                  = $getLeadData[0]->clients_occupation; 
                $NINumber                                                           = $getLeadData[0]->ni_number;
                $ClientPassword                                                     = $getLeadData[0]->client_password;
                $rejectionreason                                                    = $getLeadData[0]->office_use_only_rejection_reason;
                $Maritalstatus                                                      = $getLeadData[0]->marital_status; 
                $NatureofDisrepair                                                  = $getLeadData[0]->nature_of_disrepair;
                $NameofLandlordAddress                                              = $getLeadData[0]->name_of_landlord_address;
                $DateDisrepairfirstnotice                                           = $getLeadData[0]->date_disrepair_first_notice;
                $tenancy_document                                                   = $getLeadData[0]->tenancy_document;
                $copy_of_complaint_letter                                           = $getLeadData[0]->copy_of_complaint_letter;
                $pictures_of_disrepair_supplied                                     = $getLeadData[0]->pictures_of_disrepair_supplied; 
                $NumberofoccupantsresidingintheHouseIncludingChildren               = $getLeadData[0]->number_of_occupants_residing_in_the_house_including_children;
                $NamesandDateofBirthofalloccupants                                  = $getLeadData[0]->names_and_date_of_birth_of_all_occupants;
                $date_HDR_noticed                                                   = $getLeadData[0]->date_hrd_noticed;
                $WhatisyourmonthlyRent                                              = $getLeadData[0]->what_is_your_monthly_rent;
                $DoyoupayrentCashorDSS                                              = $getLeadData[0]->do_you_pay_rent_cash_or_dss;
                $DoyouhaveacopyofTenancyagreement                                   = $getLeadData[0]->do_you_have_a_copy_of_tenancy_agreement;
                $WereyouInjured                                                     = $getLeadData[0]->were_you_injured;
                $DescriptionofInjuries                                              = $getLeadData[0]->description_of_injuries;
                $Haveyouclaimedbefore                                               = $getLeadData[0]->have_you_claimed_before;
                $additional_notes                                                   = $getLeadData[0]->additional_notes;
                $Note                                                               = $getLeadData[0]->notes;
                $Ifyoupayweeklyhowmuchdoyoupay                                      = $getLeadData[0]->if_you_pay_weekly_how_much_do_you_pay;
                $Howisthispaymentmade                                               = $getLeadData[0]->how_is_this_payment_made;
                $DoyouclaimHousingBenefit                                           = $getLeadData[0]->do_you_claim_housing_benefit;
                $date_instructed                                                    = $getLeadData[0]->date_instructed;
                $triage_invoive_number                                              = $getLeadData[0]->triage_invoive_number;
                $DatetriageInvoicePaid                                              = $getLeadData[0]->date_triage_invoice_paid; 
                $Haveyounoticedanyissuesoutsidethehouse                             = $getLeadData[0]->have_you_noticed_any_issues_outside_the_house; 
                $Dothewindowsanddoorsopenfreely                                     = $getLeadData[0]->do_the_windows_and_doors_open_freely;
                $DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly    = $getLeadData[0]->do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work;

                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>H1lYbBaQyTEfnmr1hs83eID21a0s570I</key>
                                    <leadgroup>53779</leadgroup>
                                    <site>0</site>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <term>$BDMName</term>
                                    <cost></cost>
                                    <value></value>
                                    <title>". $title ."</title>
                                    <firstname>". $firstName ."</firstname>
                                    <lastname>". $lastName ."</lastname>
                                    <company>$companyName</company>
                                    <jobtitle>$BDMName</jobtitle>
                                    <phone1>". $phone1 ."</phone1>
                                    <phone2>". $phone2 ."</phone2>
                                    <fax></fax>
                                    <email>". $email ."</email>
                                    <address>". $address ."</address>
                                    <address2>". $address2 ."</address2>
                                    <address3>". $address3 ."</address3>
                                    <towncity>". $towncity ."</towncity>
                                    <postcode>". $postcode ."</postcode>
                                    <dobday> $dobDay </dobday>
                                    <dobmonth> $dobMonth </dobmonth>
                                    <dobyear> $dobYear </dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactmail ."</contactmail>
                                    <contactfax>" . $contactfax . "</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                    <data2>". $invoice_number ."</data2>
                                    <data3>". $PositiononLiability ."</data3>
                                    <data4>". $AreyouaLitigationFriend ."</data4>
                                    <data5>". $replacement_invoice_number ."</data5>
                                    <data6>". $Iflitigationfriendnameanddateofbirthoftheclaimant ."</data6>
                                    <data8>". $preferred_date_to_call ."</data8>
                                    <data9>". $ClientsOccupation ."</data9>
                                    <data10>". $NINumber ."</data10>
                                    <data11>". $ClientPassword ."</data11>
                                    <data14>". $rejectionreason ."</data14>
                                    <data15>". $Maritalstatus ."</data15>
                                    <data16>". $NatureofDisrepair ."</data16>
                                    <data17>". $NameofLandlordAddress ."</data17>
                                    <data18>". $DateDisrepairfirstnotice ."</data18>
                                    <data19>". $tenancy_document ."</data19>
                                    <data20>". $copy_of_complaint_letter ."</data20>
                                    <data21>". $pictures_of_disrepair_supplied ."</data21>
                                    <data22>". $NumberofoccupantsresidingintheHouseIncludingChildren ."</data22>
                                    <data23>". $NamesandDateofBirthofalloccupants ."</data23>
                                    <data24>". $date_HDR_noticed ."</data24>
                                    <data25>". $WhatisyourmonthlyRent ."</data25>
                                    <data26>". $DoyoupayrentCashorDSS ."</data26>
                                    <data27>". $DoyouhaveacopyofTenancyagreement ."</data27>
                                    <data28>". $WereyouInjured ."</data28>
                                    <data29>". $DescriptionofInjuries ."</data29>
                                    <data30>". $Haveyouclaimedbefore ."</data30>
                                    <data31>". $Additionalnotes ."</data31>
                                    <data32>". $Note ."</data32>
                                    <data33>". $Ifyoupayweeklyhowmuchdoyoupay ."</data33>
                                    <data34>". $Howisthispaymentmade ."</data34>
                                    <data35>". $DoyouclaimHousingBenefit ."</data35>
                                    <data37>". $date_instructed ."</data37>
                                    <data38>". $triage_invoive_number ."</data38>
                                    <data39>". $DatetriageInvoicePaid ."</data39>
                                    <data40>". $Haveyounoticedanyissuesoutsidethehouse ."</data40>
                                    <data41>". $Dothewindowsanddoorsopenfreely ."</data41>
                                    <data42>". $DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly ."</data42>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 

                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('consumercreditjustice_flg' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {
                    
                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){

                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add HDR Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'HDR - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                    
                    
                }
                
            }   
            elseif($getCampaignData[0]->campaign_short_name == "CH"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
                
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                $referred_by_your_name          = $getLeadData[0]->referred_by_your_name;
                $referrer_contact_number        = $getLeadData[0]->referrer_contact_number; 
                $best_time_to_call_client       = $getLeadData[0]->best_time_to_call_client;
                $introducer_name                = $getLeadData[0]->introducer_name;
                $best_day_and_time_to_call      = $getLeadData[0]->best_day_and_time_to_call;
                $type_of_hire_car               = $getLeadData[0]->type_of_hire_car;
                $hire_provided_by               = $getLeadData[0]->hire_provided_by;
                $date_hire_provided             = $getLeadData[0]->date_hire_provided;
                $invoice_number                 = $getLeadData[0]->invoice_number; 
                $date_invoice_paid              = $getLeadData[0]->date_invoice_paid; 
                $date_introducer_paid           = $getLeadData[0]->date_introducer_paid;
                $date_agent_paid                = $getLeadData[0]->date_agent_paid;
                $ref_date                       = $getLeadData[0]->ref_date;
                $rep_due                        = $getLeadData[0]->rep_due;
                $introducer_name                = $getLeadData[0]->introducer_name;
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>jdSVRnQ5KhynWMqf5auToImoBmAdO6GJ</key>
                                    <leadgroup>55094</leadgroup>
                                    <site>18111</site>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <term>$BDMName</term>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <jobtitle>". $BDMName ."</jobtitle>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <fax></fax>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                    <data1>" . $referred_by_your_name . "</data1>
                                    <data2>" . $referrer_contact_number . "</data2>
                                    <data3>" . $best_time_to_call_client . "</data3>
                                    <data4>" . $introducer_name . "</data4>
                                    <data5>" . $best_day_and_time_to_call . "</data5>
                                    <data6>" . $type_of_hire_car . "</data6>
                                    <data7>" . $hire_provided_by . "</data7>
                                    <data8>" . $date_hire_provided . "</data8>
                                    <data9>" . $invoice_number . "</data9>
                                    <data10>" . $date_invoice_paid . "</data10>
                                    <data11>" . $date_introducer_paid . "</data11>
                                    <data12>" . $date_agent_paid . "</data12>
                                    <data13>" . $ref_date . "</data13>
                                    <data14>" . $rep_due . "</data14>
                                    <data15>" . $introducer_name . "</data15>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 

                $URL = "https://round1solutions.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add CH Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'CH - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            } 
            elseif($getCampaignData[0]->campaign_short_name == "EC"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
                
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>em2l9Xh8qcrKXVeenXozXP88NGgob19R</key>
                                    <leadgroup>56117</leadgroup>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <term>$BDMName</term>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <jobtitle>". $BDMName ."</jobtitle>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <fax></fax>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                    
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 

                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add EC Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'EC - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            } 
            elseif($getCampaignData[0]->campaign_short_name == "TR"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
                
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>1NzafyHhaSXtOHl9Mr27PhW0ZoQFKVVp</key>
                                    <leadgroup>56132</leadgroup>
                                    <site>0</site>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <term>$BDMName</term>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <jobtitle>". $BDMName ."</jobtitle>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <fax></fax>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 

                $URL = "https://round1solutions.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add TR Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'TR - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            } 
            elseif($getCampaignData[0]->campaign_short_name == "SO"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
              /*  echo "<pre>";
                 print_r($getLeadData);
                 die();*/
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                   <key>yYspqJdLjksGE0UTk9TXnfUKzvY77Ijq</key>
                                    <leadgroup>50855</leadgroup>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <title>" . $title . "</title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <jobtitle>". $BDMName ."</jobtitle>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <fax></fax>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 

                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add Solicitor Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'Solicitor - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            } 
            elseif($getCampaignData[0]->campaign_short_name == "MIB"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
              /*  echo "<pre>";
                 print_r($getLeadData);
                 die();*/
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                   <key>YyvZkbD6LfTSIOTp0PXrAIevWvUJaSBz</key>
                                    <leadgroup>50960</leadgroup>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <title>" . $title . "</title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <jobtitle>". $BDMName ."</jobtitle>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 
                $xml_data = str_replace('&', '&#38;', $xml_data);
                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add MIB Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'MIB - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            } 
            elseif($getCampaignData[0]->campaign_short_name == "CICA"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
              /*  echo "<pre>";
                 print_r($getLeadData);
                 die();*/
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>rfe1hwJk72TkqvRg5E7qmvqjJFOAJ76H</key>
                                    <leadgroup>50925</leadgroup>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <title>" . $title . "</title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <jobtitle>". $BDMName ."</jobtitle>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 
                $xml_data = str_replace('&', '&#38;', $xml_data);
                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add CICA Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'CICA - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            }
            elseif($getCampaignData[0]->campaign_short_name == "EM"){

                date_default_timezone_set('Europe/London');

                $userID         = $getCampaignData[0]->user_id;
                $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
                
                $companyId      = $getCompanyID[0]->company_id;
                $BDMName        = $getCompanyID[0]->bdm_name;
                $agentName      = $getCompanyID[0]->firstName;
                
                $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
                $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                
                $dateOfBirth    = ($getLeadData[0]->date_of_birth && $getLeadData[0]->date_of_birth != "0000-00-00") ? $getLeadData[0]->date_of_birth : '';
              /*  echo "<pre>";
                 print_r($getLeadData);
                 die();*/
                $dobDay         = ($dateOfBirth) ? date("d", strtotime($dateOfBirth)) : '';
                $dobMonth       = ($dateOfBirth) ? date("m", strtotime($dateOfBirth)) : '';
                $dobYear        = ($dateOfBirth) ? date("Y", strtotime($dateOfBirth)) : '';

                $title                          = $getLeadData[0]->title;
                $firstName                      = $getLeadData[0]->first_name;
                $lastName                       = $getLeadData[0]->last_name;
                $phone1                         = $getLeadData[0]->phone_1;
                $phone2                         = $getLeadData[0]->phone_2;
                $email                          = $getLeadData[0]->email;
                $address                        = $getLeadData[0]->address;
                $address2                       = $getLeadData[0]->address_2;
                $address3                       = $getLeadData[0]->address_3;
                $towncity                       = $getLeadData[0]->town_city;
                $postcode                       = $getLeadData[0]->post_code; 
                $contactphone                   = $getLeadData[0]->contact_phone; 
                $contactsms                     = $getLeadData[0]->contact_sms; 
                $contactemail                   = $getLeadData[0]->contact_email;
                $contactmail                    = $getLeadData[0]->contact_mail; 
                $contactfax                     = $getLeadData[0]->contact_fax; 
                $contacttime                    = $getLeadData[0]->contact_time; 
                
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>6yD3C6S5Gv2eVw0JV9oySR6cwOhMV3YK</key>
                                    <leadgroup>56801</leadgroup>
                                    <site>0</site>
                                    <source>Employment Claims</source>
                                    <medium>Employment Claims</medium>
                                    <term>Employment Claims</term>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <title>" . $title . "</title>
                                    <firstname>" . $firstName . "</firstname>
                                    <lastname>" . $lastName . "</lastname>
                                    <company>". $companyName ."</company>
                                    <phone1>" . $phone1 . "</phone1>
                                    <phone2>" . $phone2 . "</phone2>
                                    <email>" . $email . "</email>
                                    <address>" . $address . "</address>
                                    <address2>" . $address2 . "</address2>
                                    <address3>" . $address3 . "</address3>
                                    <towncity>" . $towncity . "</towncity>
                                    <postcode>" . $postcode . "</postcode>
                                    <dobday>$dobDay</dobday>
                                    <dobmonth>$dobMonth</dobmonth>
                                    <dobyear>$dobYear</dobyear>
                                    <contactphone>". $contactphone ."</contactphone>
                                    <contactsms>". $contactsms ."</contactsms>
                                    <contactemail>". $contactemail ."</contactemail>
                                    <contactmail>". $contactemail ."</contactmail>
                                    <contactfax>". $contactfax ."</contactfax>
                                    <contacttime>". $contacttime ."</contacttime>
                                  </lead>
                                </data>";

            // Round 1 Flg Integration 
                $xml_data = str_replace('&', '&#38;', $xml_data);
                $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                $ch = curl_init($URL);

                curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
                curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                    'Content-Type: application/xml',
                    'Content-Length: ' . strlen($xml_data))
                );

                curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

                $output = curl_exec($ch);
                $item = new SimpleXMLElement($output);
                $hit_message = $item->item[0]->message;
                $lead_id = $item->item[0]->id;

                curl_close($ch);

                $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
                $json = json_encode($xml);
                $outputArray = json_decode($json, TRUE);

                $api_ids = array('round1solutions_fld' => $lead_id);

                /* ---------------------------flg hit end------------------ */

                if ($hit_message == 'OK') {

                    $user_id_Ap     = $_SESSION['adminData']['user_id'];
                    $campaign_id_Ap = $_SESSION['adminData']['campaign_id'];

                    $api_data = array(
                         
                        "lead_id"           => $getLeadData[0]->lead_id, 
                        "user_id"           => $user_id_Ap, 
                        "company_id"        => $campaign_id_Ap, 
                        "api_insertion_id"  => json_encode($api_ids), 
                        "created_at"        => date("Y-m-d H:i:s") 
                         
                    );   

                    $leadApiInsert = $this->Mods->single_insert('lead_manually_api_integration', $api_data);

                    if ($leadApiInsert){
                        
                        
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'lead_manually_api_integration',                        
                                    "module_name" => 'manuallyApiIntegration',
                                    "module_id" => $leadApiInsert,
                                    "note" => 'User manually add Employment Lead into flg.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        
                        
                        
                        $this->session->set_flashdata('SuccessApiInsertionLeadData', 'Employment  - Lead Submited By manually Api Integrated.');
                        redirect(base_url('Mod/manageLeads'));
                    }
                    
                }
                
            }
        }else{
            
            $this->session->set_flashdata('manuallyApiIntegrationleadDataError', 'Lead Record Not Exists.');
            redirect(base_url('Mod/manageLeads'));
            
        }
            
    }
// Done  
    
    
// Solicitor Modules starts from here //
    
    public function addSolicitor($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "Solicitors");
            $this->load->view('Mod/leads/addSolicitor');
            $this->load->view('Mod/footer/footer');   
        }else{
            show_404(); 
        }    
    }
    
     public function createSolicitor($id){
        if ($this->form_validation->run('addSolicitor') == FALSE) {
            $this->addSolicitor($id);
        } else {
             if(isset($_POST['wipleadId'])){
               $wipleadId = $this->input->post('wipleadId');
                $wipid = $wipleadId;
              $del=$this->Mods->delete_single($companyId = $wipid, $conditionField = 'lead_id', $table_name = 'leadswip'); 
            }
            
             
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();
            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID         = $_SESSION['adminData']['user_id'];
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $dobDay         = date("d", strtotime($this->input->post('dateofbirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateofbirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateofbirth')));
            
            
 $duplicateLead = "";            
  
 if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

    $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                   first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) ";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
    
}
else{
    $sqlCheckDuplicateLead = "SELECT
                count(*) AS 'CountoFDuplicateEntery'
                    FROM
                    `leads`
                    WHERE
                (user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
            (user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
                (user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND campaign_id = $campaign_id)";

    $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
    $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
}         
            
    if (empty($duplicateLead) || !empty($duplicateLead)){
            $sqlLinkedLead = "SELECT
                                    lead_id, ('Linked lead') AS 'LinkedLead'
                                FROM
                                    `leads`
                                WHERE
                                    (
                                        first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                    ) ";

                    $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();    
        
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                      <key>yYspqJdLjksGE0UTk9TXnfUKzvY77Ijq</key>
                                    <leadgroup>50855</leadgroup>                                 
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('PartnerType') . "</data1>
                                    <data2>" . $this->input->post('PortalLogins') . "</data2>
                                    <data3>" . $this->input->post('PortalPassword') . "</data3>
                                    <data4>" . $this->input->post('CampaignName') . "</data4>
                                    <data5>" . $this->input->post('RateAgreedforRTA') . "</data5>
                                    <data6>" . $this->input->post('RateagreedforNonrta') . "</data6>
                                    <data7>" . $this->input->post('Rateagreedtominors') . "</data7>
                                    <data8>" . $this->input->post('MOJRegulated') . "</data8>
                                    <data9>" . $this->input->post('Agreedpaymentterms') . "</data9>
                                    <data10>" . $this->input->post('SkypID') . "</data10>
                                    <data11>" . $this->input->post('LiveDate') . "</data11>
                                    <data12>" . $this->input->post('TelephoneNumber') . "</data12>
                                    <data13>" . $this->input->post('NumberofAgents') . "</data13>
                                    <data14>" . $this->input->post('Notes') . "</data14>
                                    <data15>" . $this->input->post('BankAccountNumber') . "</data15>
                                    <data16>" . $this->input->post('BankName') . "</data16>
                                    <data17>" . $this->input->post('BankAddress') . "</data17>
                                    <data18>" . $this->input->post('IBANNumber') . "</data18>
                                    <data19>" . $this->input->post('SWIFTCode') . "</data19>
                                    <data20>" . $this->input->post('RecipientName') . "</data20>
                                    <data21>" . $this->input->post('RecipientAddress') . "</data21>
                                  </lead>
                                </data>";
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
        $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);

            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
        
        //$hit_message = "OK";
/* ---------------------------flg hit end------------------ */
             if ($hit_message == 'OK') {

                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'reference_id' => $reference_id,
                    'campaign_id' => $campaign_id,
                     'title'                 => $this->input->post('title'),
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'client_password' => $this->input->post('PortalPassword'),//Best time of call
                    'date_hrd_noticed' => $this->input->post('LiveDate'),//
                    
                    'med_neg_only' => $this->input->post('PartnerType'),//
                  
                    
                    
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address1'),
                    'address_3' => $this->input->post('address2'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateofbirth')) ? $this->input->post('dateofbirth') : Null,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    
                    'accident_circumstances' => $this->input->post('MOJRegulated'),
                    'fi_net_amunt' => $this->input->post('RateAgreedforRTA'),
                    'fi_tax_takenoff61' => $this->input->post('RateagreedforNonrta'),
                    'fi_eligble_tax_credit' => $this->input->post('Rateagreedtominors'),
                    'fi_tax_tk_63' =>  $this->input->post('Agreedpaymentterms'),
                    'fi_icome_b_expnse' => $this->input->post('LiveDate'),
                    'fi_expne_allowble_f_tx' => $this->input->post('Notes'),
                     'fi_pen_other_income' => $this->input->post('CampaignName'),
                   
                    
                    'ec_accountnumber' => $this->input->post('Agreedpaymentterms'),
                    'ec_meternumber' => $this->input->post('SkypID'),
                    
                    'ec_namekey' => $this->input->post('TelephoneNumber'),
                    'ec_servicezip' => $this->input->post('NumberofAgents'),
                    'ec_servicecity' => $this->input->post('BankAccountNumber'),
                    'ec_servicestate' => $this->input->post('BankName'),
                    'ec_serviceaddress' => $this->input->post('BankAddress'),
                    'ec_servicepsuite' => $this->input->post('IBANNumber'),
                   
                    'ec_billingzip' => $this->input->post('SWIFTCode'),
                    'ec_billingcity' => $this->input->post('RecipientName'),
                    'ec_billingstate' => $this->input->post('RecipientAddress'),
                   
                    'ec_budgetbilling' => $this->input->post('details'),
                    
                    "reference_id" => $reference_id,
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 233 : 210,
                    "flg_ccj_id" => $lead_ccj_id,
                    'created_at' => date("y-m-d H:i:s")
                 );

             /*               
                */
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
               /* print_r($this->db->error());
                echo "<pre>";
                print_r($leadData);
                die(); */
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                        }
                    }
                    
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => 'User Added new Solicitor lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;
                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New Solicitor Lead');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW Solicitor Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW Solicitor Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                               
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {
                            if($del){
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageWIP'));
                            }else{
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageLeads'));
                            }
                            
                            
                        }
                        
                    } catch (Exception $e) {}
                }
            } 
            else {    
                $xmlToArrany    = json_decode(json_encode($item), 1);
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                $this->addSolicitor($id);
                }
            }
        }
     }
    
    
    
    public function updateSolicitor(){
   
        $id = !empty(@$_POST['Solicitorid']) ? base64_decode(@$_POST['Solicitorid']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
       
        
        if ($this->form_validation->run('updateSolicitor') == FALSE) {
            $this->editSolicitor($id);
        } else {
            date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id = $userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            
            $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $company_id);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            $flg_ros_id      = $lead[0]->flg_ros_id;
            
             $SolicitorData = array(
                
               'user_id'               => $_SESSION['adminData']['user_id'],
               'title'                 => $this->input->post('title'),
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'client_password' => $this->input->post('PortalPassword'),//Best time of call
                    'date_hrd_noticed' => $this->input->post('LiveDate'),//
                    
                    'med_neg_only' => $this->input->post('PartnerType'),//
                  
                    
                    
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address1'),
                    'address_3' => $this->input->post('address2'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateofbirth')) ? $this->input->post('dateofbirth') : Null,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    
                    'accident_circumstances' => $this->input->post('MOJRegulated'),
                    'fi_net_amunt' => $this->input->post('RateAgreedforRTA'),
                    'fi_tax_takenoff61' => $this->input->post('RateagreedforNonrta'),
                    'fi_eligble_tax_credit' => $this->input->post('Rateagreedtominors'),
                    'fi_tax_tk_63' =>  $this->input->post('Agreedpaymentterms'),
                    'fi_icome_b_expnse' => $this->input->post('LiveDate'),
                    'fi_expne_allowble_f_tx' => $this->input->post('Notes'),
                  'fi_pen_other_income' => $this->input->post('CampaignName'),
                    
                   
                    
                    'ec_accountnumber' => $this->input->post('Agreedpaymentterms'),
                    'ec_meternumber' => $this->input->post('SkypID'),
                    
                    'ec_namekey' => $this->input->post('TelephoneNumber'),
                    'ec_servicezip' => $this->input->post('NumberofAgents'),
                    'ec_servicecity' => $this->input->post('BankAccountNumber'),
                    'ec_servicestate' => $this->input->post('BankName'),
                    'ec_serviceaddress' => $this->input->post('BankAddress'),
                    'ec_servicepsuite' => $this->input->post('IBANNumber'),
                   
                    'ec_billingzip' => $this->input->post('SWIFTCode'),
                    'ec_billingcity' => $this->input->post('RecipientName'),
                    'ec_billingstate' => $this->input->post('RecipientAddress'),
                   
                    'ec_budgetbilling' => $this->input->post('details'),
                    'lead_update_user_id' => $userID,
                    'lead_update_company_id' => $companyId,
                   'updated_at'      => date('Y-m-d H:i:s'),
                
            );
             if($flg_ccj_id != NULL){
                    $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead> 
                                       <key>yYspqJdLjksGE0UTk9TXnfUKzvY77Ijq</key>
                                       <id>".$flg_ccj_id."</id>
                                        <firstname>" . $this->input->post('firstName') . "</firstname>
                                        <lastname>" . $this->input->post('lastName') . "</lastname>
                                        <company>" . $companyName . "</company>
                                        <phone1>" . $this->input->post('phone1') . "</phone1>
                                        <phone2>" . $this->input->post('phone2') . "</phone2>
                                        <email>" . $this->input->post('email') . "</email>
                                        <address>" . $this->input->post('address') . "</address>
                                        <address2>" . $this->input->post('address2') . "</address2>
                                        <address3>" . $this->input->post('address3') . "</address3>
                                        <towncity>" . $this->input->post('towncity') . "</towncity>
                                        <postcode>" . $this->input->post('postcode') . "</postcode>
                                        <dobday>" . $dobDay . "</dobday>
                                        <dobmonth>" . $dobMonth . "</dobmonth>
                                        <dobyear>" . $dobYear . "</dobyear>
                                        <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                        <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                        <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                        <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                        <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                        <data1>" . $this->input->post('PartnerType') . "</data1>
                                        <data2>" . $this->input->post('PortalLogins') . "</data2>
                                        <data3>" . $this->input->post('PortalPassword') . "</data3>
                                        <data4>" . $this->input->post('CampaignName') . "</data4>
                                        <data5>" . $this->input->post('RateAgreedforRTA') . "</data5>
                                        <data6>" . $this->input->post('RateagreedforNonrta') . "</data6>
                                        <data7>" . $this->input->post('Rateagreedtominors') . "</data7>
                                        <data8>" . $this->input->post('MOJRegulated') . "</data8>
                                        <data9>" . $this->input->post('Agreedpaymentterms') . "</data9>
                                        <data10>" . $this->input->post('SkypID') . "</data10>
                                        <data11>" . $this->input->post('LiveDate') . "</data11>
                                        <data12>" . $this->input->post('TelephoneNumber') . "</data12>
                                        <data13>" . $this->input->post('NumberofAgents') . "</data13>
                                        <data14>" . $this->input->post('Notes') . "</data14>
                                        <data15>" . $this->input->post('BankAccountNumber') . "</data15>
                                        <data16>" . $this->input->post('BankName') . "</data16>
                                        <data17>" . $this->input->post('BankAddress') . "</data17>
                                        <data18>" . $this->input->post('IBANNumber') . "</data18>
                                        <data19>" . $this->input->post('SWIFTCode') . "</data19>
                                        <data20>" . $this->input->post('RecipientName') . "</data20>
                                        <data21>" . $this->input->post('RecipientAddress') . "</data21>
                                      </lead>
                                    </data>";
                             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                            $ch = curl_init($URL);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                            curl_setopt($ch, CURLOPT_POST, 1);
                        $xml_data = str_replace('&', '&#38;', $xml_data);
                            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                                'Content-Type: application/xml',
                                'Content-Length: ' . strlen($xml_data))
                            );
                            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                            $output = curl_exec($ch);
                    }
            $this->load->model('Mods');
                $updateSolicitor = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $SolicitorId = $id, $data = $SolicitorData);            
            if ($updateSolicitor) {
                $this->load->model('Mods');
                    $getlinkedrecrd=$this->Mods->getIdByName($table_name = "linked_leads", $condition = "lead_id", $data = $updatelead);
                    
                    if($getlinkedrecrd !=NULL){
                        $num = 0;
                        if ($checkLinkedLead){
                               foreach ($getlinkedrecrd as $dblinkedLead){
                                    foreach ($checkLinkedLead as $linkedLead){
                                      if(($id != $linkedLead['lead_id'])&&(($dblinkedLead->link_lead_id) != ($linkedLead['lead_id']))){
                                         $linkLeadData = array( 
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $linkedLead['LinkedLead'], 
                                                ); 
                                        $num = $this->db->get_where('linked_leads', $linkLeadData)->num_rows();
                                       
                                        if($num == 0){ $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData); }
                                        $linkLeadData1 = array(
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $lead_campaign[0]->campaign_name.' During Update with new date-'.$num,
                                                );
                                        $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                    }
                                    
                                }
                            }
                               
                        }
                    }else{
                        if ($checkLinkedLead){                        
                            foreach ($checkLinkedLead as $linkedLead){
                                if($id != $linkedLead['lead_id']){
                                     $linkLeadData = array( 
                                    'lead_id'       => $updatelead, 
                                    'link_lead_id'  => $linkedLead['lead_id'], 
                                    'status'        => $linkedLead['LinkedLead'], 
                                    ); 
                                    
                                    $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData);
                                
                                    $linkLeadData1 = array(
                                         'lead_id'       => $updatelead, 
                                         'link_lead_id'  => $linkedLead['lead_id'], 
                                         'status'        => $lead_campaign[0]->campaign_name.' During Update with new date',
                                     );
                                    $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                }
                                
                            }
                        } 
                    }
                    
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => 'User Updated Soliciter lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;
                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Updated Solicitor Lead');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'Updated Solicitor Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW Solicitor Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                               
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {
                            if($del){
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageWIP'));
                            }else{
                                $this->session->set_flashdata('SuccessUpdateSolicters', 'Solicitor Record Update.');
                                redirect(base_url('Mod/manageLeads'));
                            }  
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            
        }        
        
    }
    
    public function viewSolicitor($id = ''){
        
        $this->load->model('Mods');
        $solicitorData = ($id) ? $this->Mods->getIdByName($table_name = 'solicitors', $condition = 'id', $id) : '';
        
        
        if (is_array($solicitorData)) {
            $this->data['solicitorData']             = $solicitorData[0];
            
        } else {
            
            $this->session->set_flashdata('solicitorDataError', 'Record Not Exists.');
            $this->data['solicitorData'] = '';
            
        }
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/viewSolicitor', $this->data);                
        $this->load->view('Mod/footer/footer');        
        
    }
    

// Solicitor Modules starts from here //
    
    
    public function addLeadsBatch(){
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/addLeadsBatch');
        $this->load->view('Mod/footer/footer');
        
    }
    public function createLeadsBatch() {

        ini_set('memory_limit', '-1');
        date_default_timezone_set('Europe/London');
        $this->load->model('Mods');
        
        $leadInsert     = "";
        $file_headers   = array();
        
        if ($this->input->post('batchName') && $_FILES['uploadBatchFile']['error'] == 0){
            
                $config['upload_path']      = './uploads/leads_batches';
                $config['allowed_types']    = 'xlsx|csv|xls|ods';
                $config['max_size']         = '500000';

                $this->upload->initialize($config);

                if (!$this->upload->do_upload('uploadBatchFile')) {
                    
                    $this->session->set_flashdata('file_error', $this->upload->display_errors());
                    $this->addLeadsBatch();
                    
                } else {
                    
                    $file               = array('upload_data' => $this->upload->data());
                    $file_name          = $file['upload_data']['file_name'];
                    
                    $data = array(
                        
                        'company_id'        => $_SESSION['adminData']['company_id'],
                        'campaign_id'       => $this->input->post('campaign_id'),
                        'user_id'           => $_SESSION['adminData']['user_id'],
                        'batch_name'        => $this->input->post('batchName'),
                        'file_name'         => $file_name,
                        'created_at'        => date("Y-m-d H:i:s")
                        
                    );
                    
                    $leadInsert = $this->Mods->single_insert('leads_batches', $data);

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads_batches',                        
                                    "module_name" => 'addLeadsBatch',
                                    "module_id" => $leadInsert,
                                    "note" => 'User add / Upload lead Batch File.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                        

                    
                }
                
            }
            
            if ($leadInsert){
                redirect(base_url('Mod/Profiler/') . $leadInsert); 
            }
            
    }

    public function ToObject($Array) { 

        // Create new stdClass object 
        $object = new stdClass(); 

        // Use loop to convert array into 
        // stdClass object 
        foreach ($Array as $key => $value) { 
            if (is_array($value)) { 
                $value = ToObject($value); 
            } 
            
            $object->$key = $value; 
        } 
        
        return $object; 
        
    }     
    
// Done     
    
    public function Profiler($leadInsert = 0) {

        $leadInsert = ($leadInsert) ? $leadInsert : $this->input->post('leadInsertId');

        if ($leadInsert) {

            $leadBatch = ($leadInsert) ? $this->Mods->getIdByName($table_name = 'leads_batches', $condition = 'id', $leadInsert) : '';
            $get_camp = ($leadBatch) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $leadInsert[0]->company_id) : '';
            
            $file_name = $leadBatch[0]->file_name;

            if (file_exists("./uploads/leads_batches/" . $file_name)) {
                
                $objPHPExcel    = PHPExcel_IOFactory::load("./uploads/leads_batches/" . $file_name);
                $sheetData      = $objPHPExcel->getActiveSheet()->toArray(null, true, true, true);
                $file_headers[] = $sheetData[1];
                
            }

            if ($sheetData){
                unset($sheetData[1]);
            }
            
            $sql        = "SHOW COLUMNS FROM leads";
            $query      = ($sql) ? $this->db->query($sql)->result() : FALSE;
            
            $query[]    = $this->ToObject(array('Field' => 'DOBDay'));
            $query[]    = $this->ToObject(array('Field' => 'DOBMonth'));
            $query[]    = $this->ToObject(array('Field' => 'DOBYear'));
            
            foreach ($query as $key => $res) {

                if ($query[$key]->Field == "lead_id") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "company_id") {
                    $query[$key]->Field = "Company Name";
                } elseif ($query[$key]->Field == "user_id") {
                    $query[$key]->Field = "User Name";
                } elseif ($query[$key]->Field == "api_inseration_id") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "updated_at") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "lead_update_company_id") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "lead_update_user_id") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "status_change_by_user_id") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "date_of_status_change") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "seniro") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "batch_id") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "interpreter_name") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "interpreter_paid") {
                    unset($query[$key]);
                } elseif ($query[$key]->Field == "created_at") {
                    unset($query[$key]);
                }elseif($query[$key]->Field == "date_of_birth"){
                    unset($query[$key]);
//                    $query[$key]->Field = "DOBDay";
                }
                
                
            }

            if (isset($_POST['file_fields'])) {

                $db_fields = $_POST['db_fields'];
                    
                foreach ($_POST['file_fields'] as $file_fieldskey => $file_fields) {
                   
//                    if($file_fields == "User_Name"){
//                        $file_fields = "user_id";
//                    }
//                    
//                    if($file_fields == "Company_Name"){
//                        $file_fields = "company_id";
//                    }
                    
                    if ($file_fields) {
                        $exlper = explode("<->||||", $file_fields);
                    } else {
                        $exlper = array();
                    }

                    if (isset($exlper[1])) {

                        foreach ($sheetData as $sheetDataKey => $checkData) {
                            foreach ($checkData as $checkDataKey => $ckData) {
                                
                                if ($checkDataKey == $exlper[1]) {
                                    $array_data[$db_fields[$file_fieldskey]][] = $ckData;
                                }
                                
                            }
                        }
                        
                    }
                    
                }

                $insert_data    = array();
                $inm            = 0;
                $data_Err       = array();
                $leadData       = array();
                $data_ins       = array();
                
                foreach ($sheetData as $dataKey => $data){
                    
                        $userName               = isset($array_data['User_Name'][$inm]) ? $array_data['User_Name'][$inm] : '';
                        $companyName            = isset($array_data['Company_Name'][$inm]) ? $array_data['Company_Name'][$inm] : '';
                        $leadStatusName         = isset($array_data['lead_status'][$inm]) ? $array_data['lead_status'][$inm] : '';
                        
                        $userID                 = ($userName) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'userName', $userName) : '';
                        $companyID              = ($companyName) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'company_name', $companyName) : '';
                        $leadStatusID           = ($leadStatusName) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'status_name', $leadStatusName) : '';

                        $first_name             = isset($array_data['first_name'][$inm]) ? $array_data['first_name'][$inm] : '';
                        $last_name              = isset($array_data['last_name'][$inm]) ? $array_data['last_name'][$inm] : '';


//                        $leadPhone1             = isset($array_data['phone_1'][$inm]) && !empty($array_data['phone_1'][$inm]) && (substr($array_data['phone_1'][$inm], 0, 2) == 44 || substr($array_data['phone_1'][$inm], 0, 1) == 0) ? $array_data['phone_1'][$inm] : 0 . $array_data['phone_1'][$inm];
//                        $leadPhone1             = (substr($array_data['phone_1'][$inm], 0, 2) == 44 || substr($array_data['phone_1'][$inm], 0, 1) == 0) ? $array_data['phone_1'][$inm] : 0 . $array_data['phone_1'][$inm];

                        $leadPhone1 = "";


//echo "<pre>";
////print_r($leadStatusID[0]->id);
//print_r($leadStatusID);
//die();

                        
                        if (isset($array_data['phone_1'][$inm])){
                            
                            if (substr($array_data['phone_1'][$inm], 0, 2) == 44 || substr($array_data['phone_1'][$inm], 0, 1) == 0){
                                $leadPhone1 = $array_data['phone_1'][$inm];
                            }else{
                                $leadPhone1 = 0 . $array_data['phone_1'][$inm];
                            }
                            
                        }
                        
                        $dateOfBirth      = @$array_data['DOBDay'][$inm] ."/". @$array_data['DOBMonth'][$inm] ."/". @$array_data['DOBYear'][$inm];
                        $dateOfBirth      = date("Y-m-d", strtotime($dateOfBirth));
                        $dateOfBirth      = ($dateOfBirth == "1970-01-01") ? '' : $dateOfBirth;

                        $sql = "select * from campaign where campaign_id = " . $leadBatch[0]->campaign_id ." and campaign_status = 1";
                        $checkCampaign = $this->db->query($sql)->result();

//                        $campaign_id        = $checkCampaign[0]->campaign_id;
                        $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

                        
                        $leadData = array(

                                'user_id'                                                       => isset($userID) && !empty($userID) ? $userID[0]->id : '',
                                'company_id'                                                    => isset($companyID) && !empty($companyID) ? $companyID[0]->id : '',
                                'first_name'                                                    => isset($array_data['first_name'][$inm]) ? $array_data['first_name'][$inm] : '',
                                'last_name'                                                     => isset($array_data['last_name'][$inm]) ? $array_data['last_name'][$inm] : '',
                                'company_name'                                                  => isset($array_data['company_name'][$inm]) ? $array_data['company_name'][$inm] : '',
                                'job_title'                                                     => isset($array_data['job_title'][$inm]) ? $array_data['job_title'][$inm] : '',
                                'phone_1'                                                       => $leadPhone1,
                                'phone_2'                                                       => isset($array_data['phone_2'][$inm]) ? $array_data['phone_2'][$inm] : '',
                                'email'                                                         => isset($array_data['email'][$inm]) ? $array_data['email'][$inm] : '',
                                'address'                                                       => isset($array_data['address'][$inm]) ? $array_data['address'][$inm] : '', 
                                'address_2'                                                     => isset($array_data['address_2'][$inm]) ? $array_data['address_2'][$inm] : '',
                                'address_3'                                                     => isset($array_data['address_3'][$inm]) ? $array_data['address_3'][$inm]: '',
                                'town_city'                                                     => isset($array_data['town_city'][$inm]) ? $array_data['town_city'][$inm] : '',
                                'post_code'                                                     => isset($array_data['post_code'][$inm]) ? $array_data['post_code'][$inm] : '',
                                'date_of_birth'                                                 => $dateOfBirth,
                                'contact_phone'                                                 => isset($array_data['contact_phone'][$inm]) ? $array_data['contact_phone'][$inm] : '',
                                'contact_sms'                                                   => isset($array_data['contact_sms'][$inm]) ? $array_data['contact_sms'][$inm] : '',
                                'contact_email'                                                 => isset($array_data['contact_email'][$inm]) ? $array_data['contact_email'][$inm] : '',
                                'contact_mail'                                                  => isset($array_data['contact_mail'][$inm]) ? $array_data['contact_mail'][$inm] : '',
                                'contact_time'                                                  => isset($array_data['contact_time'][$inm]) ? $array_data['contact_time'][$inm] : '',
                                'position_on_liability'                                         => isset($array_data['position_on_liability'][$inm]) ? $array_data['position_on_liability'][$inm] : '',
                                'tp_insurer_details_name'                                       => isset($array_data['tp_insurer_details_name'][$inm]) ? $array_data['tp_insurer_details_name'][$inm] : '',
                                'accident_circumstances'                                        => isset($array_data['accident_circumstances'][$inm]) ? $array_data['accident_circumstances'][$inm] : '',
                                'client_status_in_accident'                                     => isset($array_data['client_status_in_accident'][$inm]) ? $array_data['client_status_in_accident'][$inm] : '',
                                'are_you_a_litigation_friend'                                   => isset($array_data['are_you_a_litigation_friend'][$inm]) ? $array_data['are_you_a_litigation_friend'][$inm] : '',
                                'replacement_invoice_number'                                    => isset($array_data['replacement_invoice_number'][$inm]) ? $array_data['replacement_invoice_number'][$inm] : '',
                                'if_litigation_friend_name_and_date_of_birth_of_the_claimant'   => isset($array_data['if_litigation_friend_name_and_date_of_birth_of_the_claimant'][$inm]) ? $array_data['if_litigation_friend_name_and_date_of_birth_of_the_claimant'][$inm] : '',
                                'date_of_accident'                                              => isset($array_data['date_of_accident'][$inm]) ? $array_data['date_of_accident'][$inm] : '',
                                'time_of_accident'                                              => isset($array_data['time_of_accident'][$inm]) ? $array_data['time_of_accident'][$inm] : '',
                                'what_injuries_did_you_suffer'                                  => isset($array_data['what_injuries_did_you_suffer'][$inm]) ? $array_data['what_injuries_did_you_suffer'][$inm] : '',
                                'did_you_seek_medical_attention'                                => isset($array_data['did_you_seek_medical_attention'][$inm]) ? $array_data['did_you_seek_medical_attention'][$inm] : '',
                                'who_do_you_blame_for_the_accident'                             => isset($array_data['who_do_you_blame_for_the_accident'][$inm]) ? $array_data['who_do_you_blame_for_the_accident'][$inm] : '',
                                'do_you_have_access_to_the_details_of_the_party_you_blame'      => isset($array_data['do_you_have_access_to_the_details_of_the_party_you_blame'][$inm]) ? $array_data['do_you_have_access_to_the_details_of_the_party_you_blame'][$inm] : '',
                                'client_car_registration'                                       => isset($array_data['client_car_registration'][$inm]) ? $array_data['client_car_registration'][$inm] : '',
                                'client_car_make_model'                                         => isset($array_data['client_car_make_model'][$inm]) ? $array_data['client_car_make_model'][$inm] : '',
                                'client_insurer'                                                => isset($array_data['client_insurer'][$inm]) ? $array_data['client_insurer'][$inm] : '',
                                'client_policy_number'                                          => isset($array_data['client_policy_number'][$inm]) ? $array_data['client_policy_number'][$inm] : '',
                                'tp_car_registration'                                           => isset($array_data['tp_car_registration'][$inm]) ? $array_data['tp_car_registration'][$inm] : '',
                                'tp_car_make_model'                                             => isset($array_data['tp_car_make_model'][$inm]) ? $array_data['tp_car_make_model'][$inm] : '',
                                'have_you_claimed_before'                                       => isset($array_data['have_you_claimed_before'][$inm]) ? $array_data['have_you_claimed_before'][$inm] : '',
                                'do_you_wish_to_make_a_claim'                                   => isset($array_data['do_you_wish_to_make_a_claim'][$inm]) ? $array_data['do_you_wish_to_make_a_claim'][$inm] : '',
                                'additional_notes'                                              => isset($array_data['additional_notes'][$inm]) ? $array_data['additional_notes'][$inm] :  '',
                                'is_this_a_linked_passenger'                                    => isset($array_data['is_this_a_linked_passenger'][$inm]) ? $array_data['is_this_a_linked_passenger'][$inm] : '',
                                'preferred_time_of_contact'                                     => isset($array_data['preferred_time_of_contact'][$inm]) ? $array_data['preferred_time_of_contact'][$inm]: '',
                                'clients_occupation'                                            => isset($array_data['clients_occupation'][$inm]) ? $array_data['clients_occupation'][$inm] : '',
                                'ni_number'                                                     => isset($array_data['ni_number'][$inm]) ? $array_data['ni_number'][$inm] : '',
                                'was_the_client_vehicle_repaired_or_total_loss'                 => isset($array_data['was_the_client_vehicle_repaired_or_total_loss'][$inm]) ? $array_data['was_the_client_vehicle_repaired_or_total_loss'][$inm] : '',
                                'has_the_client_been_paid_out_for_his_her_vehicle_damage'       => isset($array_data['has_the_client_been_paid_out_for_his_her_vehicle_damage'][$inm]) ? $array_data['has_the_client_been_paid_out_for_his_her_vehicle_damage'][$inm] : '',
                                'were_the_police_involved'                                      => isset($array_data['were_the_police_involved'][$inm]) ? $array_data['were_the_police_involved'][$inm] : '',
                                'what_was_the_exact_location_of_the_accident'                   => isset($array_data['what_was_the_exact_location_of_the_accident'][$inm]) ? $array_data['what_was_the_exact_location_of_the_accident'][$inm] : '',
                                'what_was_the_weather_like'                                     => isset($array_data['what_was_the_weather_like'][$inm]) ? $array_data['what_was_the_weather_like'][$inm] : '',
                                'how_many_occupants_in_the_vehicle'                             => isset($array_data['how_many_occupants_in_the_vehicle'][$inm]) ? $array_data['how_many_occupants_in_the_vehicle'][$inm] : '',
                                'preferred_time_to_call'                                        => isset($array_data['preferred_time_to_call'][$inm]) ? $array_data['preferred_time_to_call'][$inm] : '',
                                'client_password'                                               => isset($array_data['client_password'][$inm]) ? $array_data['client_password'][$inm] : '',
                                'was_accident_reported_or_recorded_in_the_accident_book'        => isset($array_data['was_accident_reported_or_recorded_in_the_accident_book'][$inm]) ? $array_data['was_accident_reported_or_recorded_in_the_accident_book'][$inm] : '',
                                'employers_name_address_telephone_number'                       => isset($array_data['employers_name_address_telephone_number'][$inm]) ? $array_data['employers_name_address_telephone_number'][$inm] : '',
                                'med_neg_only'                                                  => isset($array_data['med_neg_only'][$inm]) ? $array_data['med_neg_only'][$inm] : '',
                                'ol_pl_only'                                                    => isset($array_data['ol_pl_only'][$inm]) ? $array_data['ol_pl_only'][$inm] : '',
                                'credit_hire_or_vehicle_replacement'                            => isset($array_data['credit_hire_or_vehicle_replacement'][$inm]) ? $array_data['credit_hire_or_vehicle_replacement'][$inm] : '',
                                'is_injury_on_going_injury_physio'                              => isset($array_data['is_injury_on_going_injury_physio'][$inm]) ? $array_data['is_injury_on_going_injury_physio'][$inm]: '',
                                'third_party_policy_number'                                     => isset($array_data['third_party_policy_number'][$inm]) ? $array_data['third_party_policy_number'][$inm] : '',
                                'marketing_source'                                              => isset($array_data['marketing_source'][$inm]) ? $array_data['marketing_source'][$inm] : '',
                                'lead_status'                                                   => isset($leadStatusID) && !empty($leadStatusID) ? $leadStatusID[0]->id : '',
                                'created_at'                                                    => date("y-m-d H:i:s"),
                                'seniro'                                                        => 'batch_upload',
                                'batch_id'                                                      => $leadInsert,
                                'campaign_id'                                                   => $leadBatch[0]->campaign_id,
                                "reference_id" => $reference_id,

                            );
                            
                            $bulkLeadInsert = $this->Mods->single_insert('leads', $leadData);
                            

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'Profiler',
                                    "module_id" => $leadInsert,
                                    "note" => 'User Import lead for' . $get_camp[0]->campaign_short_name . '.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                            
                            
                            if ($bulkLeadInsert){
                                $data_ins[] = array('first_name' => $first_name, 'last_name' => $last_name, 'phone_1' => $leadPhone1);
                            }

                            $inm++;
                        
                }
                
                $_SESSION['SuccessInsert'] = $data_ins;
                $_SESSION['SuccessErrors'] = $data_Err;
                
                
//                echo "<pre>";
//                print_r($data_ins);
//                echo count($data_ins);
//                die();
                
                if (isset($bulkLeadInsert)){
                    redirect(base_url('Mod/batchUploadSummary'));
                }
                
            }

            $this->data['leads_db_fields']  = $query;
            $this->data['file_headers']     = $file_headers;
            $this->data['leadInsertId']     = $leadInsert;

            $this->headerV($this->title = "Report");
            $this->load->view('Mod/leads/profiler', $this->data);
            $this->load->view('Mod/footer/footer');
            
        }
        
    }
    
    public function batchUploadSummary(){
        
        $this->headerV($this->title="Leads Portal");
        $this->load->view('Mod/leads/batchUploadSummary');
        $this->load->view('Mod/footer/footer');
        
    }
                    
    public function downloadSample(){
        
        $this->excel->setActiveSheetIndex(0);
 
        $sql = "SHOW COLUMNS FROM leads";
        $query  = ($sql) ? $this->db->query($sql)->result() : FALSE;
        
        foreach ($query as $key => $res){
            
            if ($query[$key]->Field == "lead_id"){
                unset($query[$key]);
            }
            
            elseif($query[$key]->Field == "company_id"){
                $query[$key]->Field = "Company Name";
            }
            
            elseif($query[$key]->Field == "user_id"){
                $query[$key]->Field = "User Name";
            }
            
            elseif($query[$key]->Field == "api_inseration_id"){
                unset($query[$key]);
            }
            
            elseif ($query[$key]->Field == "updated_at"){
                unset($query[$key]);
            }
            
            elseif ($query[$key]->Field == "lead_update_company_id"){
                unset($query[$key]);
            }

            elseif ($query[$key]->Field == "lead_update_user_id"){
                unset($query[$key]);
            }

            elseif ($query[$key]->Field == "status_change_by_user_id"){
                unset($query[$key]);
            }

            elseif ($query[$key]->Field == "date_of_status_change"){
                unset($query[$key]);
            }
            
            elseif ($query[$key]->Field == "seniro"){
                unset($query[$key]);
            }
            
            elseif ($query[$key]->Field == "batch_id"){
                unset($query[$key]);
            }
            
        }
        
        $complete       = 1;
        $alphebets      = 65 ;
        $alphebets_1    = 64 ;
        
        foreach ($query as $key_1 => $report){
            
            $excelHeadings = str_replace("_", " ", $report->Field);
            
            if ($complete == 1){

                $cell_value = chr($alphebets) . 1;
                $cell_auto_size = chr($alphebets);
                $alphebets++;

            }else{

                $cell_value = chr($alphebets_1) . chr($alphebets) . 1;
                $cell_auto_size = chr($alphebets_1) . chr($alphebets);
                $alphebets++;

            }

            $this->excel->getActiveSheet()->getColumnDimension($cell_auto_size)->setAutoSize(true);
            $this->excel->getActiveSheet()->setCellValue($cell_value, ucwords($excelHeadings));
            $this->excel->getActiveSheet()->getStyle($cell_value)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);


            if ($alphebets == 91){
                $complete++; 
                $alphebets = 65;
                $alphebets_1++;                
            }
 
            if ($complete > 1){
                $complete++; 
            }
            
        }

        $this->excel->getActiveSheet()->getStyle('A1:' . $cell_value)->getFont()->setBold(true);

        
        $filename='sample-Leads-formate.xls';
        header('Content-Type: application/vnd.ms-excel'); 
        header('Content-Disposition: attachment;filename="'.$filename.'"'); 
        header('Cache-Control: max-age=0'); 

        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
        $objWriter->save('php://output');

    }

    public function UsersReports(){
        
        ini_set('memory_limit', '-1');        
        
        $companies                  = $this->Mods->getAllCompanies();
        $statuses                   = $this->Mods->getLeadStatusByCampaign();
        $userType                   = $this->Mods->getAllUserType();
        
         $campaign_id               = $this->input->post('Campaign'); 
        $user_id                    = $this->input->post('user'); 
        $lead_status_id             = $this->input->post('lead_status'); 
        $start_date                 = $this->input->post('start_date'); 
        $end_date                   = $this->input->post('end_date'); 

        $this->data['users'] = $this->Mods->getUsers();

        if ($this->input->post('Campaign') != "All"){
            $statuses                   = $this->Mods->getLeadStatusByCampaign($campaign_id);            
        }
        

        $sql        = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1";
        $campaigns  = $this->db->query($sql)->result();
        
        $this->data['campaigns'] = $campaigns;
        $this->data['companies']    = $companies;
        $this->data['statuses']     = $statuses;
        $this->data['userType']     = $userType;

        if ($user_id && $lead_status_id && $start_date && $end_date && $campaign_id){
            
            $leadReport = $this->Mods->userLeadReportStats($campaign_id, $user_id, $lead_status_id, $start_date, $end_date);
            $this->data['UsersleadsReport']     = $leadReport;
        /*echo "<pre>";    
        print_r($leadReport);
        die();*/

        }

        
        $this->headerV($this->title = "Report");
        $this->load->view('Mod/user/usersreport', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    public function report(){
        
        ini_set('memory_limit', '-1');        
        
        $companies                  = $this->Mods->getAllCompanies();
        $statuses                   = $this->Mods->getLeadStatusByCampaign();
        $userType                   = $this->Mods->getAllUserType();
        
        $company_id                 = $this->input->post('company');
        $user_type_id               = $this->input->post('user_type'); 
        $campaign_id               = $this->input->post('Campaign'); 
        $user_id                    = $this->input->post('user'); 
        $lead_status_id             = $this->input->post('lead_status'); 
        $start_date                 = $this->input->post('start_date'); 
        $end_date                   = $this->input->post('end_date'); 

        if ($this->input->post('company') && $this->input->post('user_type')){
            $users                      = $this->Mods->getAllUsersByCompany($company_id, $user_type_id);
            $this->data['users']        = $users;
        }
        
        if ($this->input->post('Campaign') != "All"){
            $statuses                   = $this->Mods->getLeadStatusByCampaign($campaign_id);            
        }
        

        $sql        = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1";
        $campaigns  = $this->db->query($sql)->result();
        
        $this->data['campaigns'] = $campaigns;
        $this->data['companies']    = $companies;
        $this->data['statuses']     = $statuses;
        $this->data['userType']     = $userType;

        if ($company_id && $user_type_id && $user_id && $lead_status_id && $start_date && $end_date && $campaign_id){
            
            $leadReport = $this->Mods->userLeadReport($company_id, $user_type_id, $campaign_id, $user_id, $lead_status_id, $start_date, $end_date);
            $this->data['leadReport']     = $leadReport;
            
//        echo $leadReport;
//        die();

        }

        
        $this->headerV($this->title = "Report");
        $this->load->view('Mod/leads/report', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
// Done    
    
    public function downloadReport($company_id, $user_type_id, $campaign_id, $user_id, $lead_status_id, $start_date, $end_date){
        
        ini_set('memory_limit', '-1');
        $leadReport = $this->Mods->userLeadReport($company_id, $user_type_id, $campaign_id, $user_id, $lead_status_id, $start_date, $end_date);


                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => null,                        
                                    "module_name" => 'downloadReport',
                                    "module_id" => null,
                                    "note" => 'User Downlad Lead Report.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

            $this->load->model('Mods');
            $this->Mods->single_insert('user_activities', $activity_data);


        
        $this->excel->setActiveSheetIndex(0);
        $this->excel->getActiveSheet()->setTitle('USERS LEADS DETAIL REPORT');

        $this->excel->getActiveSheet()->mergeCells('D2:J5');
        $this->excel->getActiveSheet()->getCell('D2')->setValue('USERS LEADS DETAIL REPORT');
        $this->excel->getActiveSheet()->getStyle('D2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);        
        $this->excel->getActiveSheet()->getStyle('D2')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);        
        $this->excel->getActiveSheet()->getStyle('D2')->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("D2")->getFont()->setSize(16);

        $this->excel->getActiveSheet()->getStyle('D2:J5')->getBorders()->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('D2:J5')->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('D2:J5')->getBorders()->getLeft()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('D2:J5')->getBorders()->getRight()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        
        $complete       = 1;
        $alphebets      = 65 ;
        $alphebets_1    = 64 ;
        
        foreach ($leadReport[0] as $excelHeadings => $report){
            
            $excelHeadings = str_replace("_", " ", $excelHeadings);
            
            if ($complete == 1){

                $cell_value = chr($alphebets) . 8;
                $cell_auto_size = chr($alphebets);
                $alphebets++;

            }else{

                $cell_value = chr($alphebets_1) . chr($alphebets) . 8;
                $cell_auto_size = chr($alphebets_1) . chr($alphebets);
                $alphebets++;

            }

            $this->excel->getActiveSheet()->getColumnDimension($cell_auto_size)->setAutoSize(true);
            $this->excel->getActiveSheet()->setCellValue($cell_value, ucwords($excelHeadings));
            $this->excel->getActiveSheet()->getStyle($cell_value)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);


            if ($alphebets == 91){
                $complete++; 
                $alphebets = 65;
                $alphebets_1++;                
            }
 
            if ($complete > 1){
                $complete++; 
            }
            
        }
        
        $this->excel->getActiveSheet()->getStyle('A8:' . $cell_value)->getFont()->setBold(true);

        $this->excel->getActiveSheet()->getStyle('A8:' . $cell_value)->getBorders()->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('A8:' . $cell_value)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('A8:' . $cell_value)->getBorders()->getLeft()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('A8:' . $cell_value)->getBorders()->getRight()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        
        
        $mc             = 9;
        
        foreach ($leadReport as $report){

            $mc_complete    = 1;
            $mc_alphebets   = 65 ;
            $mc_alphebets_1 = 64 ;
            
            foreach ($report as $print_excelHeadings => $print_report){
                
                if ($mc_complete == 1){

                    $mc_cell_value = chr($mc_alphebets) . $mc;
                    $mc_cell_auto_size = chr($mc_alphebets);
                    $mc_alphebets++;

                }else{

                    $mc_cell_value = chr($mc_alphebets_1) . chr($mc_alphebets) . $mc;
                    $mc_cell_auto_size = chr($mc_alphebets_1) . chr($mc_alphebets);
                    $mc_alphebets++;

                }
                
                $this->excel->getActiveSheet()->getColumnDimension($cell_auto_size)->setAutoSize(true);
                $this->excel->getActiveSheet()->setCellValue($mc_cell_value, ucwords($print_report));
                $this->excel->getActiveSheet()->getStyle($mc_cell_value)->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

                if ($mc_alphebets == 91){
                    $mc_complete++; 
                    $mc_alphebets = 65;
                    $mc_alphebets_1++;                
                }

                if ($mc_complete > 1){
                    $mc_complete++; 
                }

            }
            
            $mc++;
            
        }

        $this->excel->getActiveSheet()->getStyle('A9:' . $mc_cell_value)->getBorders()->getTop()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('A9:' . $mc_cell_value)->getBorders()->getBottom()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('A9:' . $mc_cell_value)->getBorders()->getLeft()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        $this->excel->getActiveSheet()->getStyle('A9:' . $mc_cell_value)->getBorders()->getRight()->setBorderStyle(PHPExcel_Style_Border::BORDER_THIN);
        
        $filename='USERS_LEADS_DETAIL_REPORT.xls';
        header('Content-Type: application/vnd.ms-excel'); 
        header('Content-Disposition: attachment;filename="'.$filename.'"'); 
        header('Cache-Control: max-age=0'); 

        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');  
        $objWriter->save('php://output');
        
    }

    public function ajaxGetUsers(){
        
        $companyID      = $this->input->post('companyID');
        $user_type_id   = $this->input->post('user_type_id'); 
        $users          = $this->Mods->getAllUsersByCompany($companyID, $user_type_id);
        
        $html = "";
        
        if ($users){
        
            $html .= "<option value=''>Select User</option>";
            $html .= "<option value='All'>All</option>";

            foreach ($users as $user){
                $html .= "<option value='$user->id'>" . $user->full_name ."</option>";
            } 
            
        }
        echo $html;
        
    }
    
    public function ajaxGetLeadStatus(){
        
        $campaign_id      = $this->input->post('campanign_id');
//        $campaign_id      = 1;
        $getLeadStatus   = $this->Mods->getLeadStatusByCampaign($campaign_id);
        
        $html = "";
        
        if ($getLeadStatus){
        
            $html .= "<option value=''>Select Lead Status</option>";
            $html .= "<option value='All'>All</option>";

            foreach ($getLeadStatus as $leadStatus){
                $html .= "<option value='$leadStatus->id'>" . $leadStatus->Lead_Status_Name ."</option>";
            } 
            
        }
        
        echo $html;
        
    }
    
// Second Campaign starts from here....

// Done    
    public function AddHDRWIP($id = 0){

        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        
        
        $this->headerV($this->title = "Add Housing Disrepair WIP");
        $this->load->view('Mod/leads/AddHDRWIP');
        $this->load->view('Mod/footer/footer');
        
    }
     public function addECWIP($id = 0){

        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        
        
        $this->headerV($this->title = "Add Energy WIP");
        $this->load->view('Mod/leads/addECWIP');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function AddHDR($id = 0){

        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        
        if (!$checkCampaign){
            show_404();
        }
        
        $this->headerV($this->title = "Add Housing Disrepair");
        $this->load->view('Mod/leads/AddHDR');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function createHDR($id = 0){
        
        if ($this->form_validation->run('addHousingDisrepairLead') == FALSE) {
            $this->AddHDR($id);
        } else {
             if(isset($_POST['wipleadId'])){
               $wipleadId = $this->input->post('wipleadId');
                $wipid = $wipleadId;
              $del=$this->Mods->delete_single($companyId = $wipid, $conditionField = 'lead_id', $table_name = 'leadswip'); 
            }
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
//            $date_of_accident   = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  

            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            $campaign_id = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

            
            

$duplicateLead = "";            
            
if ($this->input->post('clone') == "clone"){
    $this->session->set_userdata('clone', 'clone');
    
            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            

            
            
}else{
            
        $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        (user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
                                            (user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
                                            (user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND campaign_id = $campaign_id)";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
//            if ($duplicateLead){
//                $this->session->set_flashdata('duplicateLeadError', $duplicateLead);
//                $this->AddHDR($id);
//            } 
            
}
//            echo "<pre>";
//            print_r($checkLinkedLead);
//            print_r($duplicateLead);
//            die();            


    if (empty($duplicateLead) || !empty($duplicateLead)){
                
            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName      = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            
            
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                            <data>
                              <lead>
                                <key>H1lYbBaQyTEfnmr1hs83eID21a0s570I</key>
                                <leadgroup>53779</leadgroup>
                                <site>0</site>
                                <introducer>0</introducer>
                                <type></type>
                                <user></user>
                                <status></status>
                                <reference></reference>
                                <source>" . $checkCampaign[0]->campaign_short_name . "</source>
                                <medium>" . $companyName . "</medium>
                                <term>".$checkCampaign[0]->campaign_short_name."</term>
                                <cost></cost>
                                <value></value>
                                <title>".$this->input->post('title')."</title>
                                <firstname>".$this->input->post('firstName')."</firstname>
                                <lastname>".$this->input->post('lastName')."</lastname>
                                <company>$companyName</company>
                                <jobtitle>$BDMName</jobtitle>
                                <phone1>".$this->input->post('phone1')."</phone1>
                                <phone2>".$this->input->post('phone2')."</phone2>
                                <fax></fax>
                                <email>".$this->input->post('email')."</email>
                                <address>".$this->input->post('address')."</address>
                                <address2>".$this->input->post('address2')."</address2>
                                <address3>".$this->input->post('address3')."</address3>
                                <towncity>".$this->input->post('towncity')."</towncity>
                                <postcode>".$this->input->post('postcode')."</postcode>
                                <dobday>$dobDay</dobday>
                                <dobmonth>$dobMonth</dobmonth>
                                <dobyear>$dobYear</dobyear>
                                <contactphone>".$this->input->post('contactphone')."</contactphone>
                                <contactsms>".$this->input->post('contactsms')."</contactsms>
                                <contactemail>".$this->input->post('contactemail')."</contactemail>
                                <contactmail>".$this->input->post('contactmail')."</contactmail>
                                <contactfax></contactfax>
                                <contacttime>". $this->input->post('contacttime') ."</contacttime>
                                <data2>".$this->input->post('invoice_number')."</data2>
                                <data3>".$this->input->post('PositiononLiability')."</data3>
                                <data4>".$this->input->post('AreyouaLitigationFriend')."</data4>
                                <data5>".$this->input->post('replacement_invoice_number')."</data5>
                                <data6>".$this->input->post('Iflitigationfriendnameanddateofbirthoftheclaimant')."</data6>
                                <data8>".$this->input->post('preferred_date_to_call')."</data8>
                                <data9>".$this->input->post('ClientsOccupation')."</data9>
                                <data10>".$this->input->post('NINumber')."</data10>
                                <data11>".$this->input->post('ClientPassword')."</data11>
                                <data14>".$this->input->post('rejectionreason')."</data14>
                                <data15>".$this->input->post('Maritalstatus')."</data15>
                                <data16>".$this->input->post('NatureofDisrepair')."</data16>
                                <data17>".$this->input->post('NameofLandlordAddress')."</data17>
                                <data18>".$this->input->post('DateDisrepairfirstnotice')."</data18>
                                <data19>".$this->input->post('tenancy_document')."</data19>
                                <data20>".$this->input->post('copy_of_complaint_letter')."</data20>
                                <data21>".$this->input->post('pictures_of_disrepair_supplied')."</data21>
                                <data22>".$this->input->post('NumberofoccupantsresidingintheHouseIncludingChildren')."</data22>
                                <data23>".$this->input->post('NamesandDateofBirthofalloccupants')."</data23>
                                <data24>".$this->input->post('date_HDR_noticed')."</data24>
                                <data25>".$this->input->post('WhatisyourmonthlyRent')."</data25>
                                <data26>".$this->input->post('DoyoupayrentCashorDSS')."</data26>
                                <data27>".$this->input->post('DoyouhaveacopyofTenancyagreement')."</data27>
                                <data28>".$this->input->post('WereyouInjured')."</data28>
                                <data29>".$this->input->post('DescriptionofInjuries')."</data29>
                                <data30>".$this->input->post('Haveyouclaimedbefore')."</data30>
                                <data31>".$this->input->post('additional_notes')."</data31>
                                <data32>".$this->input->post('Note')."</data32>
                                <data33>".$this->input->post('Ifyoupayweeklyhowmuchdoyoupay')."</data33>
                                <data34>".$this->input->post('Howisthispaymentmade')."</data34>
                                <data35>".$this->input->post('DoyouclaimHousingBenefit')."</data35>
                                <data37>".$this->input->post('date_instructed')."</data37>
                                <data38>".$this->input->post('triage_invoive_number')."</data38>
                                <data39>".$this->input->post('DatetriageInvoicePaid')."</data39>
                                <data40>".$this->input->post('Haveyounoticedanyissuesoutsidethehouse')."</data40>
                                <data41>".$this->input->post('Dothewindowsanddoorsopenfreely')."</data41>
                                <data42>".$this->input->post('DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly')."</data42>
                              </lead>
                            </data>";
            
        // Round 1 Flg Integration 
            
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;

            curl_close($ch);

            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
            
            $api_ids = array('consumercreditjustice_flg' => $lead_id);
            
            /* ---------------------------flg hit end------------------ */

            if ($hit_message == 'OK') {
                 $ClaimHnadlerUser  = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', base64_decode($this->input->post('ClaimHnadlerUser')));
                $handler_id = base64_decode($this->input->post('ClaimHnadlerUser'));
                $handle_rname = $ClaimHnadlerUser[0]->userName;
                $leadData = array(
                        'user_id' => $userID,
                        'company_id' => $companyId,
                        "title" => $this->input->post('title'),
                        "first_name" => $this->input->post('firstName'),
                        "last_name" => $this->input->post('lastName'),
                        "company_name" => $companyName,
                        "job_title" => $this->input->post('jobtitle'),
                        "phone_1" => $this->input->post('phone1'),
                        "phone_2" => $this->input->post('phone2'),
                        "email" => $this->input->post('email'),
                        "address" => $this->input->post('address'),
                        "address_2" => $this->input->post('address2'),
                        "address_3" => $this->input->post('address3'),
                        "town_city" => $this->input->post('towncity'),
                        "post_code" => $this->input->post('postcode'),
                        "date_of_birth" => $this->input->post('dateOfBirth') ? $this->input->post('dateOfBirth') : NULL,
                        "contact_phone" => $this->input->post('contactphone'),
                        "contact_sms" => $this->input->post('contactsms'),
                        "contact_email" => $this->input->post('contactemail'),
                        "contact_mail" => $this->input->post('contactmail'),
                        "contact_time" => $this->input->post('contacttime'),
                        "position_on_liability" => $this->input->post('PositiononLiability'),
                        "are_you_a_litigation_friend" => $this->input->post('AreyouaLitigationFriend'),
                        "replacement_invoice_number" => $this->input->post('replacement_invoice_number'),
                        "if_litigation_friend_name_and_date_of_birth_of_the_claimant" => $this->input->post('Iflitigationfriendnameanddateofbirthoftheclaimant'),
                        "have_you_claimed_before" => $this->input->post('Haveyouclaimedbefore'),
                        "additional_notes" => $this->input->post('additional_notes'),
                        "clients_occupation" => $this->input->post('ClientsOccupation'),
                        "ni_number" => $this->input->post('NINumber'),
                        "client_password" => $this->input->post('ClientPassword'),
                        "invoice_number" => $this->input->post('invoice_number'),
                        "marital_status" => $this->input->post('Maritalstatus'),
                        "full_address_of_property_if_different_from_the_one_you_are_livin" => $this->input->post('FullAddressofPropertyifdifferentfromtheoneyouarelivinginnow'),
                        "name_of_landlord_address" => $this->input->post('NameofLandlordAddress'),
                        "number_of_occupants_residing_in_the_house_including_children" => $this->input->post('NumberofoccupantsresidingintheHouseIncludingChildren'),
                        "names_and_date_of_birth_of_all_occupants" => $this->input->post('NamesandDateofBirthofalloccupants'),
                        "what_is_your_monthly_rent" => $this->input->post('WhatisyourmonthlyRent'),
                        "if_you_pay_weekly_how_much_do_you_pay" => $this->input->post('Ifyoupayweeklyhowmuchdoyoupay'),
                        "do_you_pay_rent_cash_or_dss" => $this->input->post('DoyoupayrentCashorDSS'),
                        "do_you_claim_housing_benefit" => $this->input->post('DoyouclaimHousingBenefit'),
                        "how_is_this_payment_made" => $this->input->post('Howisthispaymentmade'),
                        "do_you_have_a_copy_of_tenancy_agreement" => $this->input->post('DoyouhaveacopyofTenancyagreement'),
                        "nature_of_disrepair" => $this->input->post('NatureofDisrepair'),
                        "date_disrepair_first_notice" => $this->input->post('DateDisrepairfirstnotice'),
                        "were_you_injured" => $this->input->post('WereyouInjured'),
                        "description_of_injuries" => $this->input->post('DescriptionofInjuries'),
                        "have_you_noticed_any_issues_outside_the_house" => $this->input->post('Haveyounoticedanyissuesoutsidethehouse'),
                        "do_the_windows_and_doors_open_freely" => $this->input->post('Dothewindowsanddoorsopenfreely'),
                        "do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work" => $this->input->post('DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly'),
                        "date_triage_invoice_paid" => $this->input->post('DatetriageInvoicePaid'),
                        "office_use_only_rejection_reason" => $this->input->post('rejectionreason'),
                        "notes" => $this->input->post('Note'),
                        "preferred_date_to_call" => $this->input->post('preferred_date_to_call'),
                        "triage_invoive_number" => $this->input->post('triage_invoive_number'),
                        "date_instructed" => $this->input->post('date_instructed'),
                        "tenancy_document" => $this->input->post('tenancy_document'),
                        "copy_of_complaint_letter" => $this->input->post('copy_of_complaint_letter'),
                        "pictures_of_disrepair_supplied" => $this->input->post('pictures_of_disrepair_supplied'),
                        "date_hrd_noticed" => $this->input->post('date_HDR_noticed'),
                        'lead_status' => ($duplicateLead || $checkLinkedLead) ? 150 : 140 ,
                        'campaign_id' => $checkCampaign[0]->campaign_id,
                        'api_inseration_id' => json_encode($api_ids),
                        "reference_id" => $reference_id,
                       /* 'handler_id'   => $handler_id,
                        'handler_name' => $handle_rname,*/
                        "created_at" => date("y-m-d H:i:s")
                    );

                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                        
                    }

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'AddHDR',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new HDR lead.' : 'User add new HDR lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                        $getleadData  = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                        $get_user     = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
                        $get_company  = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $getleadData[0]->company_id);
                        $get_campaign = $this->Mods->getIdByName($table_name = "campaign", $condition = "campaign_id", $data = $getleadData[0]->campaign_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                        
                        
                        $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                        $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                        $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                        $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New HDR Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $this->mailer->Subject = 'NEW HDR Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $get_user[0]->userName . ' - Company:' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW HDR Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $get_user[0]->userName . ' - Company: ' . $companyName .'</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>

                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>

                                                <tr>
                                                    <td>User Name</td>
                                                    <td>' . $get_user[0]->userName . '</td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Company Name</td>
                                                    <td>'.$get_company[0]->company_name.'</td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Title</td>
                                                    <td>' . $getleadData[0]->title . '</td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td> '. $getleadData[0]->last_name . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Company Name</td>
                                                    <td> ' . $getleadData[0]->company_name . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Job Title</td>
                                                    <td> ' . $BDMName . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Phone 1</td>
                                                    <td> ' . $getleadData[0]->phone_1 . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td> ' . $getleadData[0]->phone_2 . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td> ' . $getleadData[0]->email . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>Address</td>
                                                    <td> ' . $getleadData[0]->address . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td> ' . $getleadData[0]->address_2 . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3 </td>
                                                    <td> ' . $getleadData[0]->address_3 . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town</td>
                                                    <td> ' . $getleadData[0]->town_city . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Post Code</td>
                                                    <td> ' . $getleadData[0]->post_code . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>DOB DAY</td>
                                                    <td> ' . $dobDay . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>DOB MONTH</td>
\                                                    <td> ' . $dobMonth . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>DOB YEAR</td>
                                                    <td> ' . $dobYear . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Permission To Phone</td>
\                                                    <td> ' . $getleadData[0]->contact_phone . ' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Permission To SMS</td>
                                                    <td> ' . $getleadData[0]->contact_sms .' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Permission To EMAIL</td>
                                                    <td> ' . $getleadData[0]->contact_email . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Permission To MAIL</td>
                                                    <td> ' . $getleadData[0]->contact_mail . ' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td> ' . $getleadData[0]->contact_time . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Position On Liability</td>
                                                    <td> ' . $getleadData[0]->position_on_liability . '</td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Are You a Litigation Friend </td>
                                                    <td> ' . $getleadData[0]->are_you_a_litigation_friend . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Replacement Invoice Number</td>
                                                    <td> ' . $getleadData[0]->replacement_invoice_number . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>if_litigation_friend_name_and_date_of_birth_of_the_claimant</td>
                                                    <td> ' . $getleadData[0]->if_litigation_friend_name_and_date_of_birth_of_the_claimant . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>have_you_claimed_before</td>
                                                    <td> ' . $getleadData[0]->have_you_claimed_before . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>additional_notes</td>
                                                    <td> ' . $getleadData[0]->additional_notes . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>clients_occupation</td>
                                                    <td> ' . $getleadData[0]->clients_occupation . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>ni_number</td>
                                                    <td> ' .  $getleadData[0]->ni_number . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>client_password</td>
                                                    <td> ' . $getleadData[0]->client_password . ' </td>
                                                </tr>    
                                                
                                                <tr>
                                                    <td>invoice_number</td>
                                                    <td> ' . $getleadData[0]->invoice_number . ' </td>
                                                </tr>    
                                                <tr>
                                                    <td>marital_status</td>
                                                    <td> ' . $getleadData[0]->marital_status . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>full_address_of_property_if_different_from_the_one_you_are_livin</td>
                                                    <td> ' . $getleadData[0]->full_address_of_property_if_different_from_the_one_you_are_livin . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>name_of_landlord_address</td>
                                                    <td> ' . $getleadData[0]->name_of_landlord_address . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>number_of_occupants_residing_in_the_house_including_children</td>
                                                    <td> ' . $getleadData[0]->number_of_occupants_residing_in_the_house_including_children . ' </td>
                                                </tr>    
                                                <tr>
                                                    <td>names_and_date_of_birth_of_all_occupants</td>
                                                    <td> ' . $getleadData[0]->names_and_date_of_birth_of_all_occupants . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>what_is_your_monthly_rent</td>
                                                    <td> ' . $getleadData[0]->what_is_your_monthly_rent . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>if_you_pay_weekly_how_much_do_you_pay</td>
                                                    <td> ' . $getleadData[0]->if_you_pay_weekly_how_much_do_you_pay . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>do_you_pay_rent_cash_or_dss</td>
                                                    <td> ' . $getleadData[0]->do_you_pay_rent_cash_or_dss . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>do_you_claim_housing_benefit</td>
                                                    <td> ' . $getleadData[0]->do_you_claim_housing_benefit . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>how_is_this_payment_made</td>
                                                    <td> ' . $getleadData[0]->how_is_this_payment_made . ' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>do_you_have_a_copy_of_tenancy_agreement</td>
                                                    <td> ' . $getleadData[0]->do_you_have_a_copy_of_tenancy_agreement . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>nature_of_disrepair</td>
                                                    <td> ' . $getleadData[0]->nature_of_disrepair . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>date_disrepair_first_notice</td>
                                                    <td> ' . $getleadData[0]->date_disrepair_first_notice . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>were_you_injured</td>
                                                    <td> ' . $getleadData[0]->were_you_injured . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>description_of_injuries</td>
                                                    <td> ' . $getleadData[0]->description_of_injuries . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>have_you_noticed_any_issues_outside_the_house</td>
                                                    <td> ' . $getleadData[0]->have_you_noticed_any_issues_outside_the_house . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>do_the_windows_and_doors_open_freely</td>
                                                    <td> ' . $getleadData[0]->do_the_windows_and_doors_open_freely .' </td>
                                                </tr>
                                                <tr>
                                                    <td>do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work</td>
                                                    <td> ' . $getleadData[0]->do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>date_triage_invoice_paid</td>
                                                    <td> ' . $getleadData[0]->date_triage_invoice_paid . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>office_use_only_rejection_reason</td>
                                                    <td> ' . $getleadData[0]->office_use_only_rejection_reason . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>notes</td>
                                                    <td> ' . $getleadData[0]->notes . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>preferred_date_to_call</td>
                                                    <td> ' . $getleadData[0]->preferred_date_to_call . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>triage_invoive_number</td>
                                                    <td> ' . $getleadData[0]->triage_invoive_number . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>date_instructed</td>
                                                    <td> ' .$getleadData[0]->date_instructed . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>tenancy_document</td>
                                                    <td> ' . $getleadData[0]->tenancy_document . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>copy_of_complaint_letter</td>
                                                    <td> ' . $getleadData[0]->copy_of_complaint_letter . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>pictures_of_disrepair_supplied</td>
                                                    <td> ' . $getleadData[0]->pictures_of_disrepair_supplied . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>date_hrd_noticed</td>
                                                    <td> ' . $getleadData[0]->date_hrd_noticed . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>Campaign Name</td>
                                                    <td> ' . $get_campaign[0]->campaign_name . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>api_inseration_id</td>
                                                    <td> ' . $getleadData[0]->api_inseration_id . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>created_at</td>
                                                    <td> ' . $getleadData[0]->created_at . ' </td>
                                                </tr>
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {
                            
                            if (isset($_SESSION['clone'])){
                                unset($_SESSION['clone']);
                            }
                            
                            if($del){
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageWIP'));
                            }else{
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageLeads'));
                            }
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany        = json_decode(json_encode($item), 1);
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                $this->AddHDR($id);                
                
                
                }
                
                    
            }
        }        
        
    }
    /*WIP HDR*/
    
    public function createHDRWIP($id = 0){
        
        if ($this->form_validation->run('addHousingDisrepairLead') == FALSE) {
            $this->AddHDRWIP($id);
        } else {
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
//            $date_of_accident   = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  

            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            $campaign_id = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
            
            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName      = $getCompanyID[0]->firstName;

                $leadData = array(
                        'user_id' => $userID,
                        'company_id' => $companyId,
                        "title" => $this->input->post('title'),
                        "first_name" => $this->input->post('firstName'),
                        "last_name" => $this->input->post('lastName'),
                        "company_name" => $companyName,
                        "job_title" => $this->input->post('jobtitle'),
                        "phone_1" => $this->input->post('phone1'),
                        "phone_2" => $this->input->post('phone2'),
                        "email" => $this->input->post('email'),
                        "address" => $this->input->post('address'),
                        "address_2" => $this->input->post('address2'),
                        "address_3" => $this->input->post('address3'),
                        "town_city" => $this->input->post('towncity'),
                        "post_code" => $this->input->post('postcode'),
                        "date_of_birth" => $this->input->post('dateOfBirth') ? $this->input->post('dateOfBirth') : NULL,
                        "contact_phone" => $this->input->post('contactphone'),
                        "contact_sms" => $this->input->post('contactsms'),
                        "contact_email" => $this->input->post('contactemail'),
                        "contact_mail" => $this->input->post('contactmail'),
                        "contact_time" => $this->input->post('contacttime'),
                        "position_on_liability" => $this->input->post('PositiononLiability'),
                        "are_you_a_litigation_friend" => $this->input->post('AreyouaLitigationFriend'),
                        "replacement_invoice_number" => $this->input->post('replacement_invoice_number'),
                        "if_litigation_friend_name_and_date_of_birth_of_the_claimant" => $this->input->post('Iflitigationfriendnameanddateofbirthoftheclaimant'),
                        "have_you_claimed_before" => $this->input->post('Haveyouclaimedbefore'),
                        "additional_notes" => $this->input->post('additional_notes'),
                        "clients_occupation" => $this->input->post('ClientsOccupation'),
                        "ni_number" => $this->input->post('NINumber'),
                        "client_password" => $this->input->post('ClientPassword'),
                        "invoice_number" => $this->input->post('invoice_number'),
                        "marital_status" => $this->input->post('Maritalstatus'),
                        "full_address_of_property_if_different_from_the_one_you_are_livin" => $this->input->post('FullAddressofPropertyifdifferentfromtheoneyouarelivinginnow'),
                        "name_of_landlord_address" => $this->input->post('NameofLandlordAddress'),
                        "number_of_occupants_residing_in_the_house_including_children" => $this->input->post('NumberofoccupantsresidingintheHouseIncludingChildren'),
                        "names_and_date_of_birth_of_all_occupants" => $this->input->post('NamesandDateofBirthofalloccupants'),
                        "what_is_your_monthly_rent" => $this->input->post('WhatisyourmonthlyRent'),
                        "if_you_pay_weekly_how_much_do_you_pay" => $this->input->post('Ifyoupayweeklyhowmuchdoyoupay'),
                        "do_you_pay_rent_cash_or_dss" => $this->input->post('DoyoupayrentCashorDSS'),
                        "do_you_claim_housing_benefit" => $this->input->post('DoyouclaimHousingBenefit'),
                        "how_is_this_payment_made" => $this->input->post('Howisthispaymentmade'),
                        "do_you_have_a_copy_of_tenancy_agreement" => $this->input->post('DoyouhaveacopyofTenancyagreement'),
                        "nature_of_disrepair" => $this->input->post('NatureofDisrepair'),
                        "date_disrepair_first_notice" => $this->input->post('DateDisrepairfirstnotice'),
                        "were_you_injured" => $this->input->post('WereyouInjured'),
                        "description_of_injuries" => $this->input->post('DescriptionofInjuries'),
                        "have_you_noticed_any_issues_outside_the_house" => $this->input->post('Haveyounoticedanyissuesoutsidethehouse'),
                        "do_the_windows_and_doors_open_freely" => $this->input->post('Dothewindowsanddoorsopenfreely'),
                        "do_you_have_any_extraction_fans_in_the_house_if_so_are_they_work" => $this->input->post('DoyouhaveanyextractionfansinthehouseIfsoaretheyworkingcorrectly'),
                        "date_triage_invoice_paid" => $this->input->post('DatetriageInvoicePaid'),
                        "office_use_only_rejection_reason" => $this->input->post('rejectionreason'),
                        "notes" => $this->input->post('Note'),
                        "preferred_date_to_call" => $this->input->post('preferred_date_to_call'),
                        "triage_invoive_number" => $this->input->post('triage_invoive_number'),
                        "date_instructed" => $this->input->post('date_instructed'),
                        "tenancy_document" => $this->input->post('tenancy_document'),
                        "copy_of_complaint_letter" => $this->input->post('copy_of_complaint_letter'),
                        "pictures_of_disrepair_supplied" => $this->input->post('pictures_of_disrepair_supplied'),
                        "date_hrd_noticed" => $this->input->post('date_HDR_noticed'),
                        'lead_status' =>  140 ,
                        'campaign_id' => $checkCampaign[0]->campaign_id,
                        "reference_id" => $reference_id,
                        "created_at" => date("y-m-d H:i:s")
                    );

                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leadswip', $leadData);
                
            if($leadInsert){
                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                redirect(base_url('Mod/manageWIP'));
            }else{
                $this->session->set_flashdata('ErrorLeadData', 'Lead Status Created.');
                redirect(base_url('Mod/manageWIP'));
                $this->AddHDRWIP($id);    
            }
                    
            }
    } 
    
    /*WIP HDR*/

    protected function make_thumb($src, $dest, $desired_width) {

        /* read the source image */
        
//        $source_image   = imagecreatefromjpeg($src);
        $source_image   = imagecreatefromstring(file_get_contents($src));
        $width          = imagesx($source_image);
        $height         = imagesy($source_image);

        /* find the "desired height" of this thumbnail, relative to the desired width  */
        $desired_height = floor($height * ($desired_width / $width));

        /* create a new, "virtual" image */
        $virtual_image  = imagecreatetruecolor($desired_width, $desired_height);

        /* copy source image at a resized size */
        imagecopyresampled($virtual_image, $source_image, 0, 0, 0, 0, $desired_width, $desired_height, $width, $height);

        /* create the physical thumbnail image to its destination */
        imagejpeg($virtual_image, $dest);
        
    }    

// Done
    
    public function documents($id){
        
        $this->load->model('Mods');
        $leadData   = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        
        if($leadData){

            $sql                = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1 and campaign_id = " . $leadData[0]->campaign_id;
            $campaigns         = $this->db->query($sql)->result();
            
            if($campaigns[0]->campaign_short_name == "HDR"){

                $leads_documents   = ($id) ? $this->Mods->getIdByName($table_name = 'leads_documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name'] = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']        = $leadData[0];
                $this->data['leads_documents']  = $leads_documents;                
                
            }elseif ($campaigns[0]->campaign_short_name == "CH") {

                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents;                
                
            }elseif ($campaigns[0]->campaign_short_name == "PI") {

                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents;                
                
            }elseif ($campaigns[0]->campaign_short_name == "EC") {
                
                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents;  
            }elseif ($campaigns[0]->campaign_short_name == "TR") {
                
                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents;  
            }elseif ($campaigns[0]->campaign_short_name == "SO") {
                
                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents;  
            }elseif($campaigns[0]->campaign_short_name == "MIB"){
                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents; 
            }elseif($campaigns[0]->campaign_short_name == "CICA"){
                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents; 
            }elseif($campaigns[0]->campaign_short_name == "EM"){
                $leads_documents                    = ($leadData[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';
                $this->data['campaign_short_name']  = $campaigns[0]->campaign_short_name;
                $this->data['leadsData']            = $leadData[0];
                $this->data['leads_documents']      = $leads_documents; 
            }
            
        }else{
            
            $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
            $this->data['leadsData'] = '';
            
        }         
        
        $this->headerV($this->title = "Documents");
        $this->load->view('Mod/leads/uploadHDRDocuments', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function uploadDocuments(){

        ini_set('memory_limit', '-1');
        ini_set('upload_max_size', '200M');
        ini_set('post_max_size', '200M');
        ini_set('upload_max_filesize', '200M');
        ini_set('max_execution_time', '300');
        ini_set('max_input_time', '1000');
        
        $errors         = array();
        $file_names     = array();
        
//        if (isset($_FILES['tenancy_agreement']) && $_FILES['tenancy_agreement']['name']){

        $this->load->model('Mods');
        $id = $this->input->post('leadId');
        $leadData   = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        
        if($leadData){

            $sql                = "select campaign_id, campaign_name, campaign_short_name from campaign where campaign_status = 1 and campaign_id = " . $leadData[0]->campaign_id;
            $campaigns         = $this->db->query($sql)->result();
            $leads_documents   = ($id) ? $this->Mods->getIdByName($table_name = 'leads_documents', $condition = 'lead_id', $leadData[0]->lead_id) : '';

            
            if($campaigns[0]->campaign_short_name == "HDR"){

                if (@$_FILES['tenancy_agreement']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['tenancy_agreement']['tmp_name']) ? getimagesize($_FILES['tenancy_agreement']['tmp_name']) : '';

                    if ($_FILES['tenancy_agreement']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['tenancy_agreement']['type'], $allowedTypes)) {
                            $errors['tenancy_agreement'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['tenancy_agreement']['type']) {
                            $errors['tenancy_agreement'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['pictures_of_disrepair']['name'][0]){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');

                        foreach ($_FILES['pictures_of_disrepair']['error'] as $pictures_of_disrepair => $error){

                            $mimeType = ($_FILES['pictures_of_disrepair']['tmp_name'][$pictures_of_disrepair]) ? getimagesize($_FILES['pictures_of_disrepair']['tmp_name'][$pictures_of_disrepair]) : '';

                            if ($_FILES['pictures_of_disrepair']['error'][$pictures_of_disrepair] == 4){
        //                        $errors['pictures_of_disrepair'][] = 'Pictures of Disrepair File is Required.';
                            }else{

                                if (!in_array($_FILES['pictures_of_disrepair']['type'][$pictures_of_disrepair], $allowedTypes)) {
                                    $errors['pictures_of_disrepair'][] = 'Only Allowed gif/jpg/png Extension file for upload.';
                                }

                                elseif ($mimeType['mime'] != $_FILES['pictures_of_disrepair']['type'][$pictures_of_disrepair]) {
                                    $errors['pictures_of_disrepair'][] = 'Selected File is Corrupted.';
                                }

            //                    elseif ($_FILES['pictures_of_disrepair']['size'][$pictures_of_disrepair] >= 50000){
            //                        $errors['videos_of_disrepair'] = 'Sorry, your file is too large.';
            //                    }


                        } 

                    }

                }

                if (@$_FILES['videos_of_disrepair']['name']){

                    $allowedTypes   = array('video/webm', 'video/x-flv', 'video/mp4', 'application/x-mpegURL', 'video/MP2T', 'video/3gpp', 'video/quicktime', 'video/x-msvideo', 'video/x-ms-wmv', 'video/x-matroska');
                    $mimeType       = ($_FILES['videos_of_disrepair']['tmp_name']) ? mime_content_type($_FILES['videos_of_disrepair']['tmp_name']) : '';

                    if ($_FILES['videos_of_disrepair']['error'] == 4){
        //                $errors['videos_of_disrepair'] = 'Videos of Disrepair File is Required.';
                    }else{

                        if (!in_array($_FILES['videos_of_disrepair']['type'], $allowedTypes)) {
                            $errors['videos_of_disrepair'] = 'Only Allowed webm/mkv/flv/mp4/m3u8/ts/3gp/mov/avi/wmv Extension file for upload.';
                        }

                        elseif ($mimeType != $_FILES['videos_of_disrepair']['type']) {
                            $errors['videos_of_disrepair'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['videos_of_disrepair']['size'] >= 50000){
            //                $errors['videos_of_disrepair'] = 'Sorry, your file is too large.';
            //            }


                    }

                } 

                if (@$_FILES['proof_of_rental_payment']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['proof_of_rental_payment']['tmp_name']) ? getimagesize($_FILES['proof_of_rental_payment']['tmp_name']) : '';

                    if ($_FILES['proof_of_rental_payment']['error'] == 4){
        //                $errors['proof_of_rental_payment'] = 'Videos of Disrepair File is Required.';
                    }else{

                        if (!in_array($_FILES['proof_of_rental_payment']['type'], $allowedTypes)) {
                            $errors['proof_of_rental_payment'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['proof_of_rental_payment']['type']) {
                            $errors['proof_of_rental_payment'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['proof_of_rental_payment']['size'] >= 50000){
            //                $errors['proof_of_rental_payment'] = 'Sorry, your file is too large.';
            //            }


                    }            
                }            

               if (@$_FILES['survey_report']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['survey_report']['tmp_name']) ? getimagesize($_FILES['survey_report']['tmp_name']) : '';

                    if ($_FILES['survey_report']['error'] == 4){
        //                $errors['survey_report'] = 'Survey Report File is Required.';
                    }else{

                        if (!in_array($_FILES['survey_report']['type'], $allowedTypes)) {
                            $errors['survey_report'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['survey_report']['type']) {
                            $errors['survey_report'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['survey_report']['size'] >= 50000){
            //                $errors['survey_report'] = 'Sorry, your file is too large.';
            //            }


                    }

                } 
                 if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['tenancy_agreement']['name']){

                        $tenancy_agreement_upload_dir                   = 'uploads/HDRDOCUMENTS/tenancy_agreement/';
                        $ext                                            = '.' . pathinfo($_FILES['tenancy_agreement']['name'], PATHINFO_EXTENSION);
                        $file_names['tenancy_agreement']['org_name']    = "HDR_tenancy_agreement_document_" . $lead_id . "_" . time() . $ext;
                        $src                                            = $tenancy_agreement_upload_dir . $file_names['tenancy_agreement']['org_name'];
                        $file_names['tenancy_agreement']['thumb_name']  = "HDR_tenancy_agreement_document_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                           = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['tenancy_agreement']['thumb_name'];
                        $desired_width                                  = "250";         

                        move_uploaded_file($_FILES['tenancy_agreement']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['tenancy_agreement']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['tenancy_agreement']['org_name']    = "";
                        $file_names['tenancy_agreement']['thumb_name']  = "";
                    }

                    if ($_FILES['pictures_of_disrepair']['name'][0]){

                        $pictures_of_disrepair_upload_dir   = 'uploads/HDRDOCUMENTS/pictures_of_disrepair/';

                        foreach ($_FILES['pictures_of_disrepair']['error'] as $pictures_of_disrepair => $error){

                            $ext                                                                        = '.' . pathinfo($_FILES['pictures_of_disrepair']['name'][$pictures_of_disrepair], PATHINFO_EXTENSION);
                            $file_names['pictures_of_disrepair']['org_name'][$pictures_of_disrepair]    = "HDR_pictures_of_disrepair_document_" . $pictures_of_disrepair  . "_" . $lead_id . "_" . time() . $ext;
                            $src                                                                        = $pictures_of_disrepair_upload_dir . $file_names['pictures_of_disrepair']['org_name'][$pictures_of_disrepair];
                            $file_names['pictures_of_disrepair']['thumb_name'][$pictures_of_disrepair]  = "HDR_pictures_of_disrepair_document_thumb_" . $pictures_of_disrepair . "_" . $lead_id . "_" . time() . $ext;
                            $dest                                                                       = $pictures_of_disrepair_upload_dir . "thumb_images/" . $file_names['pictures_of_disrepair']['thumb_name'][$pictures_of_disrepair];
                            $desired_width                                                              = "250";         

                            move_uploaded_file($_FILES['pictures_of_disrepair']['tmp_name'][$pictures_of_disrepair], $pictures_of_disrepair_upload_dir . $file_names['pictures_of_disrepair']['org_name'][$pictures_of_disrepair]);
                            $this->make_thumb($src, $dest, $desired_width);                

                        }                

                    }else{
                        $file_names['pictures_of_disrepair']['org_name']    = "";
                        $file_names['pictures_of_disrepair']['thumb_name']  = "";
                    }

                    if ($_FILES['videos_of_disrepair']['name']){

                        $videos_of_disrepair_upload_dir                 = 'uploads/HDRDOCUMENTS/videos_of_disrepair/';
                        $ext                                            = '.' . pathinfo($_FILES['videos_of_disrepair']['name'], PATHINFO_EXTENSION);
                        $file_names['videos_of_disrepair']['org_name']  = "HDR_videos_of_disrepair_video_file_" . $lead_id . $ext;
                        move_uploaded_file($_FILES['videos_of_disrepair']['tmp_name'], $videos_of_disrepair_upload_dir . $file_names['videos_of_disrepair']['org_name']);

                    }else{
                       $file_names['videos_of_disrepair']['org_name']  = "";
                    }

                    if ($_FILES['proof_of_rental_payment']['name']){

                        $proof_of_rental_payment_upload_dir                   = 'uploads/HDRDOCUMENTS/proof_of_rental_payment/';
                        $ext                                                  = '.' . pathinfo($_FILES['proof_of_rental_payment']['name'], PATHINFO_EXTENSION);
                        $file_names['proof_of_rental_payment']['org_name']    = "HDR_proof_of_rental_payment_document_"  . $lead_id . "_" . time() . $ext;
                        $src                                                  = $proof_of_rental_payment_upload_dir . $file_names['proof_of_rental_payment']['org_name'];
                        $file_names['proof_of_rental_payment']['thumb_name']  = "HDR_proof_of_rental_payment_document_thumb_"  . $lead_id . "_" . time() . $ext;
                        $dest                                                 = $proof_of_rental_payment_upload_dir . "thumb_images/" . $file_names['proof_of_rental_payment']['thumb_name'];
                        $desired_width                                        = "250";         

                        move_uploaded_file($_FILES['proof_of_rental_payment']['tmp_name'], $proof_of_rental_payment_upload_dir . $file_names['proof_of_rental_payment']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                

                    }else{
                        $file_names['proof_of_rental_payment']['org_name']    = "";
                        $file_names['proof_of_rental_payment']['thumb_name']  = "";
                    }

                    if ($_FILES['survey_report']['name']){

                        $survey_report_upload_dir                               = 'uploads/HDRDOCUMENTS/survey_report/';
                        $ext                                                    = '.' . pathinfo($_FILES['survey_report']['name'], PATHINFO_EXTENSION);
                        $file_names['survey_report']['org_name']                = "HDR_survey_report_document_"  . $lead_id . "_" . time() . $ext;
                        $src                                                    = $survey_report_upload_dir . $file_names['survey_report']['org_name'];
                        $file_names['survey_report']['thumb_name']              = "HDR_survey_report_document_thumb_"  . $lead_id . "_" . time() . $ext;                
                        $dest                                                   = $survey_report_upload_dir . "thumb_images/" . $file_names['survey_report']['thumb_name'];
                        $desired_width                                          = "250";         

                        move_uploaded_file($_FILES['survey_report']['tmp_name'], $survey_report_upload_dir . $file_names['survey_report']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                

                    }else{
                        $file_names['survey_report']['org_name']                = "";
                        $file_names['survey_report']['thumb_name']              = "";                
                    }
                    
                     if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                             => $lead_id, 
                        'tenancy_agreement_org_name'          => ($file_names['tenancy_agreement']['org_name']) ? $file_names['tenancy_agreement']['org_name'] : NULL, 
                        'tenancy_agreement_thumb_name'        => ($file_names['tenancy_agreement']['thumb_name']) ? $file_names['tenancy_agreement']['thumb_name'] : NULL, 
                        'pictures_of_disrepair_org_name'      => ($file_names['pictures_of_disrepair']['org_name']) ? json_encode($file_names['pictures_of_disrepair']['org_name']) : NULL, 
                        'pictures_of_disrepair_thumb_name'    => ($file_names['pictures_of_disrepair']['thumb_name']) ? json_encode($file_names['pictures_of_disrepair']['thumb_name']) : NULL, 
                        'videos_of_disrepair_org_name'        => ($file_names['videos_of_disrepair']['org_name']) ? $file_names['videos_of_disrepair']['org_name'] : NULL,
                        'proof_of_rental_payment_org_name'    => ($file_names['proof_of_rental_payment']['org_name']) ? $file_names['proof_of_rental_payment']['org_name'] : NULL, 
                        'proof_of_rental_payment_thumb_name'  => ($file_names['proof_of_rental_payment']['thumb_name']) ? $file_names['proof_of_rental_payment']['thumb_name'] : NULL, 
                        'survey_report_org_name'              => ($file_names['survey_report']['org_name']) ? $file_names['survey_report']['org_name'] : NULL, 
                        'survey_report_thumb_name'            => ($file_names['survey_report']['thumb_name']) ? $file_names['survey_report']['thumb_name'] : NULL, 
                        'other_files'                           => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'                          => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['tenancy_agreement']['name'] || $_FILES['pictures_of_disrepair']['name'][0] || $_FILES['videos_of_disrepair']['name'] || $_FILES['proof_of_rental_payment']['name'] || $_FILES['survey_report']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('leads_documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT leads_documents.*, leads.* FROM leads INNER JOIN leads_documents on leads.lead_id = leads_documents.lead_id WHERE leads_documents.lead_document_id = $companyInsert ORDER BY leads_documents.lead_document_id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;
                            
                            $tenancy_agreement_org_name         = $doc[0]->tenancy_agreement_org_name;
                            $pictures_of_disrepair_org_name     = $doc[0]->pictures_of_disrepair_org_name;
                            $videos_of_disrepair_org_name       = $doc[0]->videos_of_disrepair_org_name;
                            $proof_of_rental_payment_org_name   = $doc[0]->proof_of_rental_payment_org_name;
                            $survey_report_org_name             = $doc[0]->survey_report_org_name; 
                            
                            $other_document_name                = $doc[0]->other_files;
                            
                            $other_document_name_file          = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $tenancy_agreement_org_name_file         = "uploads/HDRDOCUMENTS/tenancy_agreement/" . $doc[0]->tenancy_agreement_org_name;
                            $videos_of_disrepair_org_name_file       = "uploads/HDRDOCUMENTS/videos_of_disrepair/" . $doc[0]->videos_of_disrepair_org_name;
                            $proof_of_rental_payment_org_name_file   = "uploads/HDRDOCUMENTS/proof_of_rental_payment/" . $doc[0]->proof_of_rental_payment_org_name;
                            $survey_report_org_name_file             = "uploads/HDRDOCUMENTS/survey_report/" . $doc[0]->survey_report_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

                            $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = "$mailTitle" ;

                            if ($tenancy_agreement_org_name){
                                $this->mailer->AddAttachment($tenancy_agreement_org_name_file, $tenancy_agreement_org_name);
                            }
                            
                            if ($proof_of_rental_payment_org_name){
                                $this->mailer->AddAttachment($proof_of_rental_payment_org_name_file, $proof_of_rental_payment_org_name);
                            }
                            
                            if ($survey_report_org_name){
                                $this->mailer->AddAttachment($survey_report_org_name_file, $survey_report_org_name);
                            }
                            
                            if ($videos_of_disrepair_org_name_file){
                                $this->mailer->AddAttachment($videos_of_disrepair_org_name_file, $videos_of_disrepair_org_name_file);
                            }
                            
                            if ($other_document_name){
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file);
                            }
                            
                            /*if ($other_document_name){
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file);
                            }*/

                            if ($pictures_of_disrepair_org_name){
                                
                                $pictures_of_disrepair_org_name = json_decode($pictures_of_disrepair_org_name);
                                
                                foreach ($pictures_of_disrepair_org_name as $pictures_of_disrepair){
                                    
                                    if ($pictures_of_disrepair){
                                        $pictures_of_disrepair_org_name_file     = "uploads/HDRDOCUMENTS/pictures_of_disrepair/" . $pictures_of_disrepair;
                                        $this->mailer->AddAttachment($pictures_of_disrepair_org_name_file, $pictures_of_disrepair);
                                    }
                                    
                                }
                                
                            }
                            
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Tenancy Agreement File Name</th>
                                                    <th>Pictures of Disrepair File Name</th>
                                                    <th>Videos of Disrepair Video Name</th>
                                                    <th>Proof of Rental Payment File Name</th>
                                                    <th>Survey Report File Name</th>
                                                     <th>Documents</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->tenancy_agreement_org_name . '</td>
                                                    <td>'. $doc[0]->pictures_of_disrepair_org_name . '</td>
                                                    <td>'. $doc[0]->videos_of_disrepair_org_name . '</td>
                                                    <td>'. $doc[0]->proof_of_rental_payment_org_name . '</td>
                                                    <td>'. $doc[0]->survey_report_org_name . '</td>
                                                    <td>'. $doc[0]->other_files . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'leads_documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'HDR Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Company Created.');
                            redirect(base_url('Mod/manageLeads'));
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Company Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
                
            }
            elseif ($campaigns[0]->campaign_short_name == "CH") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                 if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/CHDOCUMENTS/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "CH_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "CH_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/CHDOCUMENTS/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "CH_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "CH_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/CHDOCUMENTS/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "CH_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "CH_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/CHDOCUMENTS/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "CH_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "CH_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                     if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'            => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';
                            
                            
//                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName;
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;

                            
                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/CHDOCUMENTS/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/CHDOCUMENTS/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/CHDOCUMENTS/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/CHDOCUMENTS/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

//                            $this->mailer->setFrom('kwikcarhire12@gmail.com', ' Leads Notification');
                            $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                                                        
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                            
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'CH Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Company Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Company Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "PI") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (@$_FILES['videos_of_disrepair']['name']){

                    $allowedTypes   = array('video/webm', 'video/x-flv', 'video/mp4', 'application/x-mpegURL', 'video/MP2T', 'video/3gpp', 'video/quicktime', 'video/x-msvideo', 'video/x-ms-wmv', 'video/x-matroska');
                    $mimeType       = ($_FILES['videos_of_disrepair']['tmp_name']) ? mime_content_type($_FILES['videos_of_disrepair']['tmp_name']) : '';

                    if ($_FILES['videos_of_disrepair']['error'] == 4){
        //                $errors['videos_of_disrepair'] = 'Videos of Disrepair File is Required.';
                    }else{

                        if (!in_array($_FILES['videos_of_disrepair']['type'], $allowedTypes)) {
                            $errors['videos_of_disrepair'] = 'Only Allowed webm/mkv/flv/mp4/m3u8/ts/3gp/mov/avi/wmv Extension file for upload.';
                        }

                        elseif ($mimeType != $_FILES['videos_of_disrepair']['type']) {
                            $errors['videos_of_disrepair'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['videos_of_disrepair']['size'] >= 50000){
            //                $errors['videos_of_disrepair'] = 'Sorry, your file is too large.';
            //            }


                    }

                } 
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/PIDOCUMENTS/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "PI_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "PI_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/PIDOCUMENTS/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "PI_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "PI_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/PIDOCUMENTS/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "PI_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "PI_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/PIDOCUMENTS/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "PI_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "PI_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    if ($_FILES['videos_of_disrepair']['name']){

                        $videos_of_disrepair_upload_dir                 = 'uploads/PIDOCUMENTS/videos_of_evidence/';
                        $ext                                            = '.' . pathinfo($_FILES['videos_of_disrepair']['name'], PATHINFO_EXTENSION);
                        $file_names['videos_of_disrepair']['org_name']  = "PI_videos_of_evidence_video_file_" . $lead_id . $ext;
                        move_uploaded_file($_FILES['videos_of_disrepair']['tmp_name'], $videos_of_disrepair_upload_dir . $file_names['videos_of_disrepair']['org_name']);

                    }else{
                       $file_names['videos_of_disrepair']['org_name']  = "";
                    }
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        
                        'videos_of_disrepair_org_name'        => ($file_names['videos_of_disrepair']['org_name']) ? $file_names['videos_of_disrepair']['org_name'] : NULL,
                        
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name'] || $_FILES['videos_of_disrepair']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/PIDOCUMENTS/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/PIDOCUMENTS/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/PIDOCUMENTS/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/PIDOCUMENTS/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            
                            $videos_of_disrepair_org_name_file  = "uploads/PIDOCUMENTS/videos_of_evidence/" . $doc[0]->videos_of_disrepair_org_name;
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

$this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            if ($videos_of_disrepair_org_name_file){
                                $this->mailer->AddAttachment($videos_of_disrepair_org_name_file, $videos_of_disrepair_org_name_file);
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'PI Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Company Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Company Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "EC") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/ECDOCUMENTS/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "EC_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "EC_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/ECDOCUMENTS/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "EC_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "EC_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/ECDOCUMENTS/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "EC_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "EC_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/ECDOCUMENTS/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "EC_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "EC_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/TRDOCUMENTS/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/TRDOCUMENTS/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/TRDOCUMENTS/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/TRDOCUMENTS/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

$this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'EC Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Document Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Document Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "TR") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/TRDOCUMENTS/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "TR_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "TR_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/TRDOCUMENTS/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "TR_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "TR_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/TRDOCUMENTS/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "TR_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "TR_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/TRDOCUMENTS/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "TR_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "TR_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/TRDOCUMENTS/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/TRDOCUMENTS/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/TRDOCUMENTS/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/TRDOCUMENTS/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

$this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'TR Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Document Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Document Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "SO") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/SOLICITORDOCUMENTS/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "SOLICITOR_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "SOLICITOR_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/SOLICITORDOCUMENTS/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "SOLICITOR_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "SOLICITOR_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/SOLICITORDOCUMENTS/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "SOLICITOR_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "SOLICITOR_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/SOLICITORDOCUMENTS/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "SOLICITOR_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "SOLICITOR_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/SOLICITORDOCUMENTS/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/SOLICITORDOCUMENTS/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/SOLICITORDOCUMENTS/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/SOLICITORDOCUMENTS/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

                            $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'Solicitor Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Document Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Document Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "MIB") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "MIB_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "MIB_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "MIB_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "MIB_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "MIB_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "MIB_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "MIB_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "MIB_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/AllDocuments/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/AllDocuments/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/AllDocuments/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/AllDocuments/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

                            $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'MIB Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Document Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Document Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "CICA") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "EM_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "EM_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "EM_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "EM_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "EM_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "EM_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "EM_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "EM_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/AllDocuments/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/AllDocuments/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/AllDocuments/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/AllDocuments/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

                            $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'EM Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Document Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Document Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
            elseif ($campaigns[0]->campaign_short_name == "EM") {
                
                if (@$_FILES['Document_1']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_1']['tmp_name']) ? getimagesize($_FILES['Document_1']['tmp_name']) : '';

                    if ($_FILES['Document_1']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_1']['type'], $allowedTypes)) {
                            $errors['Document_1'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_1']['type']) {
                            $errors['Document_1'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_2']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_2']['tmp_name']) ? getimagesize($_FILES['Document_2']['tmp_name']) : '';

                    if ($_FILES['Document_2']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_2']['type'], $allowedTypes)) {
                            $errors['Document_2'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_2']['type']) {
                            $errors['Document_2'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_3']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_3']['tmp_name']) ? getimagesize($_FILES['Document_3']['tmp_name']) : '';

                    if ($_FILES['Document_3']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_3']['type'], $allowedTypes)) {
                            $errors['Document_3'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_3']['type']) {
                            $errors['Document_3'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }

                if (@$_FILES['Document_4']['name']){

                    $allowedTypes   = array('image/gif', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png');
                    $mimeType       = ($_FILES['Document_4']['tmp_name']) ? getimagesize($_FILES['Document_4']['tmp_name']) : '';

                    if ($_FILES['Document_4']['error'] == 4){
        //                $errors['tenancy_agreement'] = 'Tenancy Agreement File is Required.';
                    }else{

                        if (!in_array($_FILES['Document_4']['type'], $allowedTypes)) {
                            $errors['Document_4'] = 'Only Allowed gif/jpg/png Extension file for upload.';
                        }

                        elseif ($mimeType['mime'] != $_FILES['Document_4']['type']) {
                            $errors['Document_4'] = 'Selected File is Corrupted.';
                        }

            //            elseif ($_FILES['tenancy_agreement']['size'] >= 50000){
            //                $errors['tenancy_agreement'] = 'Sorry, your file is too large.';
            //            }

                    }

                }
                
                if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
                
                if (count($errors) == 0 ){

                    $lead_id = $this->input->post('leadId');
        //            $this->HDRDocuments($id = $this->input->post('leadId'));

                    if ($_FILES['Document_1']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_1/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_1']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_1']['org_name']    = "EM_Document_1_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name'];
                        $file_names['Document_1']['thumb_name']  = "EM_Document_1_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_1']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_1']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_1']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_1']['org_name']    = "";
                        $file_names['Document_1']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_2']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_2/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_2']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_2']['org_name']    = "EM_Document_2_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name'];
                        $file_names['Document_2']['thumb_name']  = "EM_Document_2_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_2']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_2']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_2']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_2']['org_name']    = "";
                        $file_names['Document_2']['thumb_name']  = "";
                    }


                    if ($_FILES['Document_3']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_3/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_3']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_3']['org_name']    = "EM_Document_3_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name'];
                        $file_names['Document_3']['thumb_name']  = "EM_Document_3_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_3']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_3']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_3']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_3']['org_name']    = "";
                        $file_names['Document_3']['thumb_name']  = "";
                    }

                    if ($_FILES['Document_4']['name']){

                        $tenancy_agreement_upload_dir            = 'uploads/AllDocuments/Document_4/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_4']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_4']['org_name']    = "EM_Document_4_" . $lead_id . "_" . time() . $ext;
                        $src                                     = $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name'];
                        $file_names['Document_4']['thumb_name']  = "EM_Document_4_thumb_" . $lead_id . "_" . time() . $ext;
                        $dest                                    = $tenancy_agreement_upload_dir . "thumb_images/" . $file_names['Document_4']['thumb_name'];
                        $desired_width                           = "250";         

                        move_uploaded_file($_FILES['Document_4']['tmp_name'], $tenancy_agreement_upload_dir . $file_names['Document_4']['org_name']);
                        $this->make_thumb($src, $dest, $desired_width);                


                    }else{
                        $file_names['Document_4']['org_name']    = "";
                        $file_names['Document_4']['thumb_name']  = "";
                    }
                    
                    if ($_FILES['Document_5']['name']){

                        $other_upload_dir            = 'uploads/OTHERFILES/';
                        $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                        $file_names['Document_5']['org_name']    = "Document_5" . $lead_id . "_" . time() . $ext;
                        $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                        move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);
                       
                    }else{
                        $file_names['Document_5']['org_name']    = "";
                    }
                    
                    date_default_timezone_set('Europe/London');

                    $leadFileData = array(

                        'lead_id'                => $lead_id, 
                        'campaign_short_code'    => $campaigns[0]->campaign_short_name,
                        'document_1_org_name'    => ($file_names['Document_1']['org_name']) ? $file_names['Document_1']['org_name'] : NULL, 
                        'document_1_thumb_name'  => ($file_names['Document_1']['thumb_name']) ? $file_names['Document_1']['thumb_name'] : NULL, 
                        'document_2_org_name'    => ($file_names['Document_2']['org_name']) ? $file_names['Document_2']['org_name'] : NULL, 
                        'document_2_thumb_name'  => ($file_names['Document_2']['thumb_name']) ? $file_names['Document_2']['thumb_name'] : NULL, 
                        'document_3_org_name'    => ($file_names['Document_3']['org_name']) ? $file_names['Document_3']['org_name'] : NULL, 
                        'document_3_thumb_name'  => ($file_names['Document_3']['thumb_name']) ? $file_names['Document_3']['thumb_name'] : NULL, 
                        'document_4_org_name'    => ($file_names['Document_4']['org_name']) ? $file_names['Document_4']['org_name'] : NULL, 
                        'document_4_thumb_name'  => ($file_names['Document_4']['thumb_name']) ? $file_names['Document_4']['thumb_name'] : NULL, 
                        'other_files'               => ($file_names['Document_5']['org_name']) ? $file_names['Document_5']['org_name'] : NULL, 
                        'created_at'             => date('Y-m-d H:i:s'),

                    );

                    $this->load->model('Mods');

                    if ($_FILES['Document_1']['name'] || $_FILES['Document_2']['name'][0] || $_FILES['Document_3']['name'] || $_FILES['Document_4']['name'] || $_FILES['Document_5']['name']){

                        $companyInsert = $this->Mods->single_insert('documents', $leadFileData);

                        if ($companyInsert){

                            $doc_sql = "SELECT documents.*, leads.* FROM leads INNER JOIN documents on leads.lead_id = documents.lead_id WHERE documents.id = $companyInsert ORDER BY documents.id DESC LIMIT 0, 1";
                            $doc     = $this->db->query($doc_sql)->result();
                            $user       = ($doc) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $doc[0]->user_id) : '';
                            $status = ($doc) ? $this->Mods->getIdByName($table_name = 'lead_statuses', $condition = 'id', $doc[0]->lead_status) : '';
                            $company = ($doc) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $doc[0]->company_id) : '';


                            
//$mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . ($company) ? $company[0]->company_name: 'All';

                            $company_name = ($company) ? $company[0]->company_name: 'All';                            
                            $mailTitle  = $campaigns[0]->campaign_short_name . " - Lead new Document Uploaded - Client Name: " . $doc[0]->first_name . " " . $doc[0]->last_name ." - User Name: " . $user[0]->userName . ' - Company: ' . $company_name;


                            $document_1_org_name  = $doc[0]->document_1_org_name;
                            $document_2_org_name  = $doc[0]->document_2_org_name;
                            $document_3_org_name  = $doc[0]->document_3_org_name;
                            $document_4_org_name  = $doc[0]->document_4_org_name;    
                            
                            $other_document_name = $doc[0]->other_files; 
                            $other_document_name_file = "uploads/OTHERFILES/" . $doc[0]->other_files;
                            
                            $document_1_org_name_file   = "uploads/AllDocuments/Document_1/" . $doc[0]->document_1_org_name;
                            $document_2_org_name_file   = "uploads/AllDocuments/Document_2/" . $doc[0]->document_2_org_name;
                            $document_3_org_name_file   = "uploads/AllDocuments/Document_3/" . $doc[0]->document_3_org_name;
                            $document_4_org_name_file   = "uploads/AllDocuments/Document_4/" . $doc[0]->document_4_org_name;    
                            
                            $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                            $this->mailer->SMTPDebug = 0;
                            $this->mailer->isSMTP();
                            $this->mailer->Host = 'smtp.gmail.com';
                            $this->mailer->SMTPAuth = true;
                            $this->mailer->Username = 'kwikcarhire12@gmail.com';
                            $this->mailer->Password = 'White2020@';
                            $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                            $this->mailer->Port = 587;

                            //Recipients

                            $this->mailer->setFrom('kwikcarhire12@gmail.com', $campaigns[0]->campaign_short_name . ' Doc Upload');
                            $this->mailer->addAddress('roundoneweb@gmail.com');
                            $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                            $this->mailer->isHTML(true);

                            $this->mailer->Subject = $mailTitle ;

                            if ($document_1_org_name){
                                $this->mailer->AddAttachment($document_1_org_name_file, $document_1_org_name);
                            }
                            
                            if ($document_2_org_name){
                                $this->mailer->AddAttachment($document_2_org_name_file, $document_2_org_name);
                            }
                            
                            if ($document_3_org_name){
                                $this->mailer->AddAttachment($document_3_org_name_file, $document_3_org_name);
                            }
                            
                            if ($document_4_org_name){
                                $this->mailer->AddAttachment($document_4_org_name_file, $document_4_org_name);
                            }
                            if ($other_document_name){ 
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file); 
                            }
                            
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>' . $mailTitle . '</h2>
                                                
                                            <table>
                                            
                                                <tr>
                                                    <th>File Ref #</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Phone Number</th>
                                                    <th>Lead Status</th>
                                                    <th>Lead Type</th>
                                                    <th>Document 1 File Name</th>
                                                    <th>Document 2 File Name</th>
                                                    <th>Document 3 File Name</th>
                                                    <th>Document 4 File Name</th>
                                                    <th>Document Uploaded Date</th>
                                                </tr>
                                                
                                                <tr>
                                                    <td>'. $doc[0]->reference_id .'</td>
                                                    <td>'. $doc[0]->first_name . '</td>
                                                    <td>'. $doc[0]->last_name . '</td>
                                                    <td>'. $doc[0]->phone_1 . '</td>
                                                    <td>'. $status[0]->status_name . '</td>
                                                    <td>'. $status[0]->lead_type . '</td>
                                                    <td>'. $doc[0]->document_1_org_name . '</td>
                                                    <td>'. $doc[0]->document_2_org_name . '</td>
                                                    <td>'. $doc[0]->document_3_org_name . '</td>
                                                    <td>'. $doc[0]->document_4_org_name . '</td>
                                                    <td>'. $doc[0]->created_at . '</td>
                                                </tr>


                                            </table>
                                        </body>
                                    </html>                
                                ';

                                    $this->mailer->send();
                            
                             $this->load->library('user_agent');

                                        if ($this->agent->is_browser())
                                        {
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();
                                            $device_type        = "Desktop";
                                        }

                                        elseif ($this->agent->isRobot())
                                        {
                                                $device_type = $this->agent->robot();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        elseif ($this->agent->isMobile())
                                        {
                                                $device_type = $this->agent->getMobile();
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }
                                        else
                                            {
                                            $device_type = 'Unidentified User Agent';
                                            $agent              = $this->agent->browser();
                                            $browser_version    = $this->agent->version();
                                            $platform           = $this->agent->platform();
                                            $ip_address         = $this->input->ip_address();

                                        }

                                        $activity_data = array(

                                            "user_id" => $_SESSION['adminData']['user_id'],
                                            "company_id" => $_SESSION['adminData']['company_id'], 
                                            "database_table_name" => 'documents',                        
                                            "module_name" => 'documents',
                                            "module_id" => $companyInsert,
                                            "note" => 'CICA Document Upladed.',
                                            'ip_address' => $ip_address,
                                            'platform' => $platform,
                                            'browser' => $agent,
                                            'browser_version' => $browser_version,
                                            'device_type' => $device_type,
                                            "created_at" => date('Y-m-d H:i:s'),

                                        );

                                        $this->load->model('Mods');
                                        $this->Mods->single_insert('user_activities', $activity_data);


                            $this->session->set_flashdata('Success_Leads_documents', 'Document Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }

                    }else{

                        $this->session->set_flashdata('NoUoload_Leads_documents', 'Document Created.');
                        redirect(base_url('Mod/manageLeads'));

                    }

                }else{

                    $this->session->set_flashdata('file_errors', $errors);
                    $this->documents($id = $this->input->post('leadId'));

                }
                
            }
        }else{
            
            $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
            redirect(base_url('Mod/manageLeads'));
            
        }         
        
    }

// Done
    public function addCHWIP($id = 0){
        
        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        
        
        $this->headerV($this->title = "Add Car Hire WIP");
        $this->load->view('Mod/leads/addCHWIP');
        $this->load->view('Mod/footer/footer');
        
        
    }
    
    public function addCH($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();
            if (!$checkCampaign){
                show_404();
            }
            $this->headerV($this->title = "Add Car Hire");
            $this->load->view('Mod/leads/addCH');
            $this->load->view('Mod/footer/footer');
        }else{
            show_404(); 
        }   
    }
     public function addEC($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "Add Energy");
            $this->load->view('Mod/leads/addEC');
            $this->load->view('Mod/footer/footer');
        }else{
            show_404(); 
        }
    }
    
     public function addEmails($id = 0){
        $this->load->model('Mods');
        $sql = "select lead_id, email from leads WHERE lead_id = $id ";
        $sqlemails = $this->db->query($sql)->result();
        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        if($id!=0){
        $this->data['email_addressclient'] = $sqlemails[0]->email;
        $this->headerV($this->title = "Add Emails");
        $this->load->view('Mod/leads/addEmailsSender',$this->data);
        $this->load->view('Mod/footer/footer');
        }else{
        $this->data['email_formname'] = "Compose Email";
        $this->headerV($this->title = "Add Emails");
        $this->load->view('Mod/leads/addEmailsSender',$this->data);
        $this->load->view('Mod/footer/footer');
        }   
    }
     public function addMessages($param1 = 'message_home', $param2 = '', $param3 = ''){   
        $this->data['message_inner_page_name'] = $param1;
        $this->data['page_name']               = 'message';
        $this->data['email_formname'] = "Compose Email";
        $this->headerV($this->title = "Add Messages");
        $this->load->view('Mod/messages/messages',$this->data);
        $this->load->view('Mod/footer/footer');
  
    }
     public function New_messageWithLeads($id = 0){
         
         $this->load->library('ckeditor');
		$this->load->library('ckfinder');
        $this->ckeditor->basePath = base_url().'assets/ckeditor/';
		$this->ckeditor->config['toolbar'] = array(
        array( 'Source', '-', 'Bold', 'Italic', 'Underline', '-','Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo','-','NumberedList','BulletedList','-','Link','Unlink','-','TextColor','Format','Font','FontSize'));
            $this->ckeditor->config['language'] = 'en';
            $this->ckeditor->config['allowedContent'] = true;
         
         
        $lead    = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
         
         
          if (is_array($lead)) {
            
            $this->data['changeLeadStatus'] = $lead[0];
            $leadsStatuses                  = $this->Mods->getAllData($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses");
            $this->data['leadsStatuses']    = $leadsStatuses;
            
        } else {
            
            $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            
        }
         
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';  
        $this->data['leadsDetails'] = $lead;
        
        $this->data['page_name']               = 'message';
        $this->data['email_formname'] = "Compose Email";
        $this->headerV($this->title = "Add Messages");
        $this->load->view('Mod/messages/messageswith_leadid',$this->data);
        $this->load->view('Mod/footer/footer');
  
    }
     public function reply_message($thread_id = 0){ 
        $this->load->library('ckeditor');
		$this->load->library('ckfinder');
        $this->ckeditor->basePath = base_url().'assets/ckeditor/';
		$this->ckeditor->config['toolbar'] = array(
        array( 'Source', '-', 'Bold', 'Italic', 'Underline', '-','Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo','-','NumberedList','BulletedList','-','Link','Unlink','-','TextColor','Format','Font','FontSize'));
            $this->ckeditor->config['language'] = 'en';
            $this->ckeditor->config['allowedContent'] = true;
         $sqlthread    = "SELECT message_thread_code, lead_id FROM message_thread WHERE message_thread_code = '$thread_id' ";
        $querythread  = ($sqlthread) ? $this->db->query($sqlthread)->result() : FALSE;
         /*echo "<pre>";
         print_r($querythread);
         die();*/
         $lead = ($querythread[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $querythread[0]->lead_id) : '';
         $campaign_id                    = $lead[0]->campaign_id;
         $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
         
        $lead_user = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
        $partner   = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
        $campaign  = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);
            
        $this->data['changeLeadStatus'] = $lead[0];
        $this->data['leadsStatuses']    = $leadsStatuses;
        $this->load->model('Mods');
        $this->Mods->mark_thread_messages_read($thread_id);
    
        $this->headerV($this->title = "New Messages");
        $this->load->view('Mod/messages/message_repy',$this->data);
        $this->load->view('Mod/footer/footer');
  
    }
    public function only_view_messages($thread_id = 0){   
         
         $sqlthread    = "SELECT message_thread_code, lead_id FROM message_thread WHERE message_thread_code = '$thread_id' ";
        $querythread  = ($sqlthread) ? $this->db->query($sqlthread)->result() : FALSE;
         /*echo "<pre>";
         print_r($querythread);
         die();*/
         $lead = ($querythread[0]->lead_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $querythread[0]->lead_id) : '';
         $campaign_id                    = $lead[0]->campaign_id;
         $leadsStatuses                  = $this->Mods->getAllData_where($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses", $where = "campaign_id = $campaign_id");
         
        $lead_user = $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $lead[0]->user_id);
        $partner   = ($lead[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $lead[0]->company_id) : 'All';
        $campaign  = $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id);
            
        $this->data['changeLeadStatus'] = $lead[0];
        $this->data['leadsStatuses']    = $leadsStatuses;
    
        $this->headerV($this->title = "View Messages");
        $this->load->view('Mod/messages/message_views',$this->data);
        $this->load->view('Mod/footer/footer');
  
    }
    
    
    public function send_create_reply_message($thread_id){   
      
        $logedin_id  = $_SESSION['adminData']['user_id'];  
        $sql                   = "select * from message_thread where message_thread_code = '$thread_id' ";
        $thread_data           = $this->db->query($sql)->result();
       /* $this->data['threaddetails']    = $thread_data;*/
        
      /*  echo "<pre>";
        print_r($thread_data);
        die();*/
        
        /*swap the sender reciver if the reply to the conversation*/
        if($logedin_id == $thread_data[0]->reciever){
            $sender_id  = $_SESSION['adminData']['user_id'];  
            $reciver_id = $thread_data[0]->sender;
        }else{
            $sender_id  = $thread_data[0]->sender;  
            $reciver_id = $thread_data[0]->reciever;
        }
        /*swap the sender reciver if the reply to the conversation*/
        
        $lead_id   = $thread_data[0]->lead_id;        
        
        $senderName = $_SESSION['adminData']['user_name'];
        
            $user = ($sender_id) ? 'select email, firstName, lastName from users where id = ' . $sender_id : '';
            $users = ($user) ? $this->db->query($user)->result() : '';
            $to_email_address = $users[0]->email;
            $to_firstname = $users[0]->firstName;
            $to_lasttname = $users[0]->lastName;
            
            $userReciver = ($reciver_id) ? 'select firstName, lastName from users where id = ' . $reciver_id : '';
            $usersRecv = ($userReciver) ? $this->db->query($userReciver)->result() : '';
            $rcv_firstname = $usersRecv[0]->firstName;
            $rcv_lasttname = $usersRecv[0]->lastName;
            $rcv_fullName = $rcv_firstname.' '.$rcv_lasttname;
      
        $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $lead_id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
             $heading = '<h2 style="text-align: center;" > Client Full Name: ' . $getleadData[0]->first_name . ' '. $getleadData[0]->last_name .'</h2>';
        
        $headingsubj = 'Client Full Name: ' . $getleadData[0]->first_name. ' ' . $getleadData[0]->last_name;
        
        $threadcod  = $thread_data[0]->message_thread_code;
        
        $message_org = $this->input->post('bodymessage');
        
        $HedaintwosenderName = '<h3 style="text-align: center;" > Sender Name: '.$senderName.'</h3>';
                 
           // $message = $heading.$HedaintwosenderName.$message_org;
        
           $message = $heading.$HedaintwosenderName.$message_org;
        $message_data = array(
                        'message_thread_code'       => $threadcod,
                        'message'                   => $message_org,
                        'sender'                    => $sender_id,
                        'sendername'                => $senderName,
                        'sender_id'                 => $sender_id,
                        'reciver_id'                => $reciver_id,
                        'recverName'                => $rcv_fullName,
                        'timestamp	'               => date('Y-m-d H:i:s'),
                        'read_status'               => 0
                        );
        try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New Email');
                        $this->mailer->AddReplyTo($to_email_address);
                        $this->mailer->addBCC('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $headingsubj;
                        $this->mailer->Body = $message;
                        $this->mailer->CharSet = 'UTF-8';
                        $send=$this->mailer->send();
                        
                        if($send){
                       $this->Mods->single_insert('message', $message_data);
                        }
                       
                    } catch (Exception $e) {/*echo 'innside exception';*/}
        
        
           /* echo "<pre>";
            print_r($thread_data);
            die();*/
         $this->reply_message($thread_id);
  
    }
    
     public function New_message(){   
    
        $this->headerV($this->title = "New Messages");
        $this->load->view('Mod/messages/message_new',$this->data);
        $this->load->view('Mod/footer/footer');
  
    }
    

    
    function send_messagetoHandler(){
        
        $errors         = array();
        $file_names     = array();
        
        $subjectOfEmail     = $this->input->post('subject');
        if($subjectOfEmail ==''){
            $subjectOfEmail = 'Subject not provided';
        }
        $message_org     = $this->input->post('bodymessage');
        
       
        $lead_id = $this->input->post('leadId');
        $timestamp   = date('Y-m-d H:i:s');
       /* $sender_type = $this->session->userdata('login_type');*/
        
         if (@$_FILES['Document_5']['name']){
                   $allowedTypes   =  $allowedTypes   = array('application/doc','application/msword', 'application/pdf', 'text/plain', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document' ,'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
                    if ($_FILES['Document_5']['error'] == 5){
                    }
                        if (!in_array($_FILES['Document_5']['type'], $allowedTypes)) {
                            $errors['Document_5'] = 'Only Documents file for upload.';
                        }
                }
        if (count($errors) == 0 ){
         if ($_FILES['Document_5']['name']){
                $other_upload_dir            = 'uploads/OTHERFILES/';
                $ext                                     = '.' . pathinfo($_FILES['Document_5']['name'], PATHINFO_EXTENSION);
                $file_names['Document_5']['org_name']    = "Report-Document-file" . $lead_id . "_" . time() . $ext;
                $src                                     = $other_upload_dir . $file_names['Document_5']['org_name'];
                move_uploaded_file($_FILES['Document_5']['tmp_name'], $other_upload_dir . $file_names['Document_5']['org_name']);       
            }else{
            $file_names['Document_5']['org_name']    = "";
            }
        }
       
         $other_document_name                = $file_names['Document_5']['org_name'] ;
                            
        $other_document_name_file          = "uploads/OTHERFILES/" . $other_document_name;
        
        if ($this->input->post('usr_email') != "") {
            $data['receiver'] = $this->input->post('usr_email');

            $reciever = $this->input->post('usr_email');

            $sender = $_SESSION['adminData']['user_id'];
            $senderName = $_SESSION['adminData']['user_name'];
            
            $user = ($sender) ? 'select email, firstName, lastName from users where id = ' . $sender : '';
            $users = ($user) ? $this->db->query($user)->result() : '';
            $to_email_address = $users[0]->email;
            $to_firstname = $users[0]->firstName;
            $to_lasttname = $users[0]->lastName;
            
            $userReciver = ($reciever) ? 'select firstName, lastName from users where id = ' . $reciever : '';
            $usersRecv = ($userReciver) ? $this->db->query($userReciver)->result() : '';
            $rcv_firstname = $usersRecv[0]->firstName;
            $rcv_lasttname = $usersRecv[0]->lastName;
            $rcv_fullName = $rcv_firstname.' '.$rcv_lasttname;
            
          /*  echo $to_email_address;
            echo "<pre>";
            print_r($users);
            die();*/
            //check if the thread between those 2 users and lead id exists, if not create new thread
            $num1 = $this->db->get_where('message_thread', array(
                'sender' => $sender,
                'reciever' => $reciever,
                'lead_id' => $lead_id
            ))->num_rows();
            $num2 = $this->db->get_where('message_thread', array(
                'sender' => $reciever,
                'reciever' => $sender,
                'lead_id' => $lead_id
            ))->num_rows();

            if ($num1 == 0 && $num2 == 0) {
                $message_thread_code                        = substr(md5(rand(100000000, 20000000000)), 0, 15);
                $data_message_thread['message_thread_code'] = $message_thread_code;
                $data_message_thread['sender']              = $sender;
                $data_message_thread['reciever']            = $reciever;
                $data_message_thread['lead_id']            = $lead_id;
                $this->db->insert('message_thread', $data_message_thread);
            }
            if ($num1 > 0)
                $message_thread_code = $this->db->get_where('message_thread', array(
                    'sender' => $sender,
                    'reciever' => $reciever
                ))->row()->message_thread_code;
            if ($num2 > 0)
                $message_thread_code = $this->db->get_where('message_thread', array(
                    'sender' => $reciever,
                    'reciever' => $sender
                ))->row()->message_thread_code;
            
            $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $lead_id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
    $heading = '<h2 style="text-align: center;" > Client Full Name: '.$getleadData[0]->first_name. ' ' .$getleadData[0]->last_name.'</h2>';
    $HedaintwosenderName = '<h3 style="text-align: center;" > Sender Name: '.$senderName.'</h3>';
                 
            $message = $heading.$HedaintwosenderName.$message_org;
          /*  echo $message_org.'<br>';
            echo $HedaintwosenderName.'<br>';
            echo $heading.'<br>';
            die();*/
            $data_message['message_thread_code'] = $message_thread_code;
            $data_message['mailsubject']             = $subjectOfEmail;
            $data_message['message']             = $message_org;
            $data_message['sender']              = $sender;
            $data_message['sendername']           = $senderName;
            
            $data_message['sender_id']           = $sender;
            $data_message['reciver_id']           = $reciever;
            $data_message['recverName']           = $rcv_fullName;
            
            $data_message['timestamp']           = $timestamp;
            
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', $subjectOfEmail);
                        $this->mailer->addAddress($to_email_address);
                        $this->mailer->addBCC('roundoneweb@gmail.com', $subjectOfEmail);
                        $this->mailer->addBCC('ssn@ovalcommunications.com', $subjectOfEmail);
                        
                         if ($other_document_name){
                                $this->mailer->AddAttachment($other_document_name_file, $other_document_name_file);
                            }
                 
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $subjectOfEmail;
                        $this->mailer->Body = $message;
                        $this->mailer->CharSet = 'UTF-8';
                        $send=$this->mailer->send();
                        if($send){
                       $this->Mods->single_insert('message', $data_message);
                        }
                       
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            $this->session->set_flashdata('SuccessEmail', 'Lead Status Created.');
            }
          //$this->New_messageWithLeads($lead_id);  
         
          redirect(base_url('Mod/New_messageWithLeads/'.$lead_id));
        }
     
     public function send_email(){
         //echo "hello";
        $to_email_address = "";
        $subject          = "";
        $body             = "";
         
        $to_email_address   = $this->input->post('usr_email');
        $lead_id            = $this->input->post('lead_id');
        $subject            = $this->input->post('subject');
        $body               = $this->input->post('bodymessage');
      
        if(!empty($to_email_address)) {
            
            /*$to_email_address = "roundoneweb@gmail.com";*/
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New Email');
                        $this->mailer->addAddress($to_email_address);
                        //$this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $subject;
                        $this->mailer->Body = $body;
                        $this->mailer->CharSet = 'UTF-8';
                        $send=$this->mailer->send();
                        if($send){
                             $arr_data = array(
                                "send_by_user_id"       => $_SESSION['adminData']['user_id'], 
                                "sent_from"             => "kwikcarhire12@gmail.com", 
                                "sent_to"               => $to_email_address, 
                                "lead_id"               => $lead_id, 
                                "subject"               => $subject, 
                                "body"                  => $body, 
                                "created_at"            => date('Y-m-d H:i:s'), 
                            ); 
                            $this->Mods->single_insert('email_history', $arr_data);
                             $this->session->set_flashdata('SuccessEmail', 'Lead Status Created.');
                        redirect(base_url('Mod/manageLeads'));
                        }
                       
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            }else{
                $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
                $checkCampaign = $this->db->query($sql)->result();
                $this->data['email_formname'] = "Compose Email";
                $this->headerV($this->title = "Add Emails");
                $this->load->view('Mod/leads/addEmailsSender',$this->data);
                $this->load->view('Mod/footer/footer'); 
            }
         
          
    }
    
    public function addTR($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "Tax Reclaim");
            $this->load->view('Mod/leads/addTR');
            $this->load->view('Mod/footer/footer'); 
        }else{
            show_404(); 
        }
          
    }
    
    public function addTRWIP($id = 0){
        
        $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
        $checkCampaign = $this->db->query($sql)->result();
        
        
        $this->headerV($this->title = "Tax Reclaim WIP");
        $this->load->view('Mod/leads/addTRWIP');
        $this->load->view('Mod/footer/footer');   
    }
    /*Create TR###################################################### Create TR*/
     public function createTR($id){
        if ($this->form_validation->run('addtaxreclaimlead') == FALSE) {
            $this->addTR($id);
        } else {
             if(isset($_POST['wipleadId'])){
               $wipleadId = $this->input->post('wipleadId');
                $wipid = $wipleadId;
              $del=$this->Mods->delete_single($companyId = $wipid, $conditionField = 'lead_id', $table_name = 'leadswip'); 
            }
            /*$user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : ''; 
            echo "Hello";
            echo"<pre>";
            print_r();
            die();*/
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstname']) ? $_POST['firstname'] : ''; 
            $last_name          = !empty($_POST['lastname']) ? $_POST['lastname'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();
            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID         = $_SESSION['adminData']['user_id'];
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            
            
 $duplicateLead = "";            
  
 if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

    $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
    
}
else{
    $sqlCheckDuplicateLead = "SELECT
                count(*) AS 'CountoFDuplicateEntery'
                    FROM
                    `leads`
                    WHERE
                (user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
            (user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
                (user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND campaign_id = $campaign_id)";

    $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
    $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
}         
            
    if (empty($duplicateLead) || !empty($duplicateLead)){
            $sqlLinkedLead = "SELECT
                                    lead_id, ('Linked lead') AS 'LinkedLead'
                                FROM
                                    `leads`
                                WHERE
                                    (
                                        post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                    ) OR( 
                                        post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                    ) OR( 
                                        post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                    ) OR(
                                        post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                    )";

                    $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();    
        
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>1NzafyHhaSXtOHl9Mr27PhW0ZoQFKVVp</key>
                                    <leadgroup>56132</leadgroup>
                                    <site>0</site>
                                    <introducer>0</introducer>
                                    <type></type>
                                    <user></user>
                                    <status></status>
                                    <reference></reference>
                                    <source>" . $companyName . "</source>
                                    <medium>" . $companyName . "</medium>
                                    <cost></cost>
                                    <value></value>
                                    <title></title>
                                    <firstname>" . $this->input->post('firstname') . "</firstname>
                                    <lastname>" . $this->input->post('lastname') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" .$this->input->post('NationalInsurancenumber'). "</data1>
                                    <data2>". $this->input->post('bestTimeofCall') ."</data2>
                                    <data3>". $this->input->post('AgentFullname') ."</data3>
                                    <data4>" .$this->input->post('agentaddress'). "</data4>
                                    <data5>" .$this->input->post('TottalEmploymentsPayments'). "</data5>
                                    <data6>" .$this->input->post('Taxtakenoff'). "</data6>
                                    <data7>" .$this->input->post('Amountreceiveweeklyearly'). "</data7>
                                    <data8>" .$this->input->post('receiveStatePension'). "</data8>
                                    <data9>" .$this->input->post('Taxablestatebenefits'). "</data9>
                                    <data10>" .$this->input->post('TaxableIncapacityBenefit'). "</data10>
                                    <data11>" .$this->input->post('TotalofOtherPensions'). "</data11>
                                    <data12>" .$this->input->post('Taxtakenoffbox'). "</data12>
                                    <data13>" .$this->input->post('ProfessionalSubscriptions'). "</data13>
                                    <data14>" .$this->input->post('PPIPayments'). "</data14>
                                    <data15>" .$this->input->post('Taxtakenoff32'). "</data15>
                                    <data16>" .$this->input->post('AmountBeforeTaxTakenOff'). "</data16>
                                    <data17>" .$this->input->post('UntaxedInterest'). "</data17>
                                    <data18>" .$this->input->post('UKcompanydividends'). "</data18>
                                    <data19>" .$this->input->post('DividendsfromUKAuthorised'). "</data19>
                                    <data20>" .$this->input->post('EntertheAppropriateShareCapital'). "</data20>
                                    <data21>" .$this->input->post('UniqueTaxpayerReference'). "</data21>
                                    <data22>" .$this->input->post('NetAmountTaxed'). "</data22>
                                    <data23>" .$this->input->post('Taxpaidonboxincome'). "</data23>
                                    <data24>" .$this->input->post('NetAmountofnonSavingsIncome'). "</data24>
                                    <data25>" .$this->input->post('TaxPidorTaxCredit'). "</data25>
                                    <data26>" .$this->input->post('AfterTaxTakenoffNetAmount'). "</data26>
                                    <data27>" .$this->input->post('TaxPaidonbox46income'). "</data27>
                                    <data28>" .$this->input->post('NetAmountofDividendIncome'). "</data28>
                                    <data29>" .$this->input->post('TaxCreditonBox48Income'). "</data29>
                                    <data30>" .$this->input->post('IncomePaymentsfromSettlor'). "</data30>
                                    <data31>" .$this->input->post('NetAmountofDividendIncome411'). "</data31>
                                    <data32>" .$this->input->post('Taxpaidonbox411income'). "</data32>
                                    <data33>" .$this->input->post('Income51'). "</data33>
                                    <data34>" .$this->input->post('ExpensesAllowableforTax'). "</data34>
                                    <data35>" .$this->input->post('Profit53'). "</data35>
                                    <data36>" .$this->input->post('Loss54'). "</data36>
                                    <data37>" .$this->input->post('LandandPropertyLosses55'). "</data37>
                                    <data38>" .$this->input->post('ForeignDividends'). "</data38>
                                    <data39>" .$this->input->post('ForeignTaxTakenoffBox'). "</data39>
                                    <data40>" .$this->input->post('ForeignDividendsEligible'). "</data40>
                                    <data41>" .$this->input->post('ForeigntaxTakenOff64'). "</data41>
                                    <data42>" .$this->input->post('ForeignPropertyIncome65'). "</data42>
                                    <data43>" .$this->input->post('ForeignPropertyexpensesallowable'). "</data43>
                                    <data44>" .$this->input->post('ForeignTaxTakenoffBox65Income'). "</data44>
                                    <data45>" .$this->input->post('ForeignInterestandOtherSaving'). "</data45>
                                    <data46>" .$this->input->post('ForeignTaxTakenOffbox68Income'). "</data46>
                                    <data47>" .$this->input->post('ForeignPensionsOtherForeignIncome'). "</data47>
                                    <data48>" .$this->input->post('CountryofOrigin'). "</data48>
                                    <data49>" .$this->input->post('ChargeableEventGains'). "</data49>
                                    <data50>" .$this->input->post('NumberofYears'). "</data50>
                                  </lead>
                                </data>";
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
        $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);

            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
           /* echo "<pre>";
            print_r($output);
            echo "<br>";
        die();*/
/* ---------------------------flg hit end------------------ */
             if ($hit_message == 'OK') {

                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'reference_id' => $reference_id,
                    'campaign_id' => $campaign_id,
                    'first_name' => $this->input->post('firstname'),
                    'last_name' => $this->input->post('lastname'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    
                    'clients_occupation' => $this->input->post('AgentFullname'),//Agent Name
                    'ni_number' => $this->input->post('NationalInsurancenumber'),//Nation insurance numer
                    'marital_status' => $this->input->post('agenphonenumber'),//Agent Phone Number
                    'are_you_a_litigation_friend' => $this->input->post('agentaddress'),//Agent Address
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('incomeBeforetheEnd'),//5 april 
                    'client_password' => $this->input->post('bestTimeofCall'),//Best time of call
                    
                    'number_of_passengers' => $this->input->post('TottalEmploymentsPayments'),//Agent Name
                    'passenger_1' => $this->input->post('Taxtakenoff'),//Nation insurance numer
                    'passenger_1_relationship' => $this->input->post('Amountreceiveweeklyearly'),//Agent Phone Number
                    'passenger_1_position_in_car' => $this->input->post('receiveStatePension'),//Agent Address
                    'passenger_2' => $this->input->post('Taxablestatebenefits'),//5 april 
                    'passenger_2_relationship' => $this->input->post('TaxableIncapacityBenefit'),//Best time of call
                    'passenger_2_position_in_car' => $this->input->post('TotalofOtherPensions'),//Best time of call
                    'passenger_3' => $this->input->post('Taxtakenoffbox'),//Best time of call
                    'passenger_4' => $this->input->post('ProfessionalSubscriptions'),//Best time of call
                    
                    'position_on_liability' => $this->input->post('PPIPayments'),//
                    'tp_insurer_details_name' => $this->input->post('Taxtakenoff32'),//Agent Address
                    'additional_notes' => $this->input->post('AmountBeforeTaxTakenOff'),//ril 
                    'nature_of_disrepair' => $this->input->post('UntaxedInterest'),//Bestof call
                    'date_disrepair_first_notice' => $this->input->post('UKcompanydividends'),//UKcompanydividends of call
                    'were_you_injured' => $this->input->post('DividendsfromUKAuthorised'),//
                    'date_hrd_noticed' => $this->input->post('EntertheAppropriateShareCapital'),//
                    
                    'med_neg_only' => $this->input->post('UniqueTaxpayerReference'),//
                    'ol_pl_only' => $this->input->post('NetAmountTaxed'),//Agent Address
                    'interpreter_name' => $this->input->post('Taxpaidonboxincome'),//ril 
                    'interpreter_paid' => $this->input->post('NetAmountofnonSavingsIncome'),//Bestof call
                    'type_of_hire_car' => $this->input->post('TaxPidorTaxCredit'),//UKcompanydividends of call
                    'hire_provided_by' => $this->input->post('AfterTaxTakenoffNetAmount'),//
                    'were_you_injured' => $this->input->post('TaxPaidonbox46income'),//Agent Address
                    'description_of_injuries' => $this->input->post('NetAmountofDividendIncome'),//ril 
                    'office_use_only_rejection_reason' => $this->input->post('TaxCreditonBox48Income'),//Bestof call
                    'client_policy_number' => $this->input->post('IncomePaymentsfromSettlor'),//UKcompanydividends of call
                    'client_insurer' => $this->input->post('NetAmountofDividendIncome411'),//
                    'is_this_a_linked_passenger' => $this->input->post('Taxpaidonbox411income'),//
                    
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('Address1'),
                    'address_3' => $this->input->post('Address2'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : Null,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    
                    /*forign income*/
                    'fi_net_amunt' => $this->input->post('ForeignDividends'),
                    'fi_tax_takenoff61' => $this->input->post('ForeignTaxTakenoffBox'),
                    'fi_eligble_tax_credit' => $this->input->post('ForeignDividendsEligible'),
                    'fi_tax_tk_63' => $this->input->post('ForeigntaxTakenOff64'),
                    'fi_icome_b_expnse' => $this->input->post('ForeignPropertyIncome65'),
                    'fi_expne_allowble_f_tx' => $this->input->post('ForeignPropertyexpensesallowable'),
                    'fi_takenoffbox65income' => $this->input->post('ForeignTaxTakenoffBox65Income'),
                    'fi_othersaving' => $this->input->post('ForeignInterestandOtherSaving'),
                    'fi_taxtken_68' => $this->input->post('ForeignTaxTakenOffbox68Income'),
                    'fi_pen_other_income' => $this->input->post('ForeignPensionsOtherForeignIncome'),
                    'fi_tax_of610' => $this->input->post('ForeignTaxTakenoffBox610Income'),
                    'fi_counttax' => $this->input->post('CountryofOrigin'),
                    /*forign income*/
                    
                    /*UK land and property*/
                    'ec_repid' => $this->input->post('Income51'),
                    'ec_language' => $this->input->post('ExpensesAllowableforTax'),
                    'ec_auth_fname' => $this->input->post('Profit53'),
                    'ec_auth_lname' => $this->input->post('Loss54'),
                    'copy_of_complaint_letter' => $this->input->post('LandandPropertyLosses55'),
                    /*UK land and property*/
                    
                    /*Any other income and benefits*/
                    'ec_acc_fname' => $this->input->post('ChargeableEventGains'),
                    'ec_acc_lname' => $this->input->post('DescriptionofBox74Income'),
                    'ec_state' => $this->input->post('NumberofYears'),
                    'ec_relationship' => $this->input->post('TaxTreatedasPaidonBox71Income'),
                    'ec_accountclass' => $this->input->post('OtherIncomeandBenefits'),
                    'ec_salestype' => $this->input->post('TaxTakenoffBox74'),
                    /*Any other income and benefits*/
                    
                    /*Gift*/
                    'ec_commodity' => $this->input->post('GiftAidPaymentsClaimYear'),
                    'ec_accounttype' => $this->input->post('GiftAidPaymentsClaimYearProcedding'),
                    'ec_utillity' => $this->input->post('oneOffPaymentAmount'),
                    'ec_plancode' => $this->input->post('GiftAidPaymentsClaimYearAfter'),
                    /*Gift*/
                    
                    /*Blind person*/
                    'ec_accountnumber' => $this->input->post('impairedScotlandorNorthernIreland'),
                    'ec_meternumber' => $this->input->post('LocalAuthorityRegister'),
                    /*Blind person*/
                    
                    /*Married Couple’s Allowance*/
                    'ec_namekey' => $this->input->post('claimthefullallowance'),
                    'ec_servicezip' => $this->input->post('minimumCoupleamount'),
                    'ec_servicecity' => $this->input->post('AlreadyAgreedminimumCoupleamount'),
                    'ec_servicestate' => $this->input->post('spousesorcivilpartnerdate'),
                    'ec_serviceaddress' => $this->input->post('marriageOrcivilpartnership'),
                    'ec_servicepsuite' => $this->input->post('BlindPersonsAllowance'),
                    /*Married Couple’s Allowance*/
                    
                    /*Repayment instructions*/
                    'ec_billingzip' => $this->input->post('SendtheRepaymentTo'),
                    'ec_billingcity' => $this->input->post('PayableOrdertogotoyourNominee'),
                    'ec_billingstate' => $this->input->post('NomineeisyourAdviser'),
                    /*Repayment instructions*/
                    
                    /* Declaration – Please make sure that you’ve read the R40 Notes at section 12.2 before signing*/
                    'ec_billingaddress' => $this->input->post('SignanddatethisDeclare'),
                    'ec_billingapsuite' => $this->input->post('SignedonBehalfofSomeoneElse'),
                    'ec_budgetbilling' => $this->input->post('NeedclaimforminFuture'),
                    /* Declaration – Please make sure that you’ve read the R40 Notes at section 12.2 before signing*/
                    
                    "reference_id" => $reference_id,
                    "lead_status" => 120,
                    "flg_ccj_id" => $lead_ccj_id,
                    'created_at' => date("y-m-d H:i:s")
                );

             /*               
                */
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
               /* print_r($this->db->error());
                echo "<pre>";
                print_r($leadData);
                die(); */
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                        }
                    }
                    
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => 'User Added new TR lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New TR Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');

//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW TR Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW TR Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                               
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {
                            if($del){
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageWIP'));
                            }else{
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageLeads'));
                            }
                            
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } 
            else {    
                $xmlToArrany    = json_decode(json_encode($item), 1);
                $xmlToArrany_1  = json_decode(json_encode($item_1), 1);
                $xmlToArrany_2  = json_decode(json_encode($item_2), 1);
                $_SESSION['Errors'] = array($xmlToArrany['item'], $xmlToArrany_1['item'], $xmlToArrany_2['item']);
                $this->addTR($id);
                }
            }
        }
     }
    /*WIP TR*/
    public function createTRWIP($id){
        
        if ($this->form_validation->run('addtaxreclaimlead') == FALSE) {
            $this->addTRWIP($id);
        } else {
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstname']) ? $_POST['firstname'] : ''; 
            $last_name          = !empty($_POST['lastname']) ? $_POST['lastname'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();
            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID         = $_SESSION['adminData']['user_id'];
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            

                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'reference_id' => $reference_id,
                    'campaign_id' => $campaign_id,
                    'first_name' => $this->input->post('firstname'),
                    'last_name' => $this->input->post('lastname'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    
                    'clients_occupation' => $this->input->post('AgentFullname'),//Agent Name
                    'ni_number' => $this->input->post('NationalInsurancenumber'),//Nation insurance numer
                    'marital_status' => $this->input->post('agenphonenumber'),//Agent Phone Number
                    'are_you_a_litigation_friend' => $this->input->post('agentaddress'),//Agent Address
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('incomeBeforetheEnd'),//5 april 
                    'client_password' => $this->input->post('bestTimeofCall'),//Best time of call
                    
                    'number_of_passengers' => $this->input->post('TottalEmploymentsPayments'),//Agent Name
                    'passenger_1' => $this->input->post('Taxtakenoff'),//Nation insurance numer
                    'passenger_1_relationship' => $this->input->post('Amountreceiveweeklyearly'),//Agent Phone Number
                    'passenger_1_position_in_car' => $this->input->post('receiveStatePension'),//Agent Address
                    'passenger_2' => $this->input->post('Taxablestatebenefits'),//5 april 
                    'passenger_2_relationship' => $this->input->post('TaxableIncapacityBenefit'),//Best time of call
                    'passenger_2_position_in_car' => $this->input->post('TotalofOtherPensions'),//Best time of call
                    'passenger_3' => $this->input->post('Taxtakenoffbox'),//Best time of call
                    'passenger_4' => $this->input->post('ProfessionalSubscriptions'),//Best time of call
                    
                    'position_on_liability' => $this->input->post('PPIPayments'),//
                    'tp_insurer_details_name' => $this->input->post('Taxtakenoff32'),//Agent Address
                    'additional_notes' => $this->input->post('AmountBeforeTaxTakenOff'),//ril 
                    'nature_of_disrepair' => $this->input->post('UntaxedInterest'),//Bestof call
                    'date_disrepair_first_notice' => $this->input->post('UKcompanydividends'),//UKcompanydividends of call
                    'were_you_injured' => $this->input->post('DividendsfromUKAuthorised'),//
                    'date_hrd_noticed' => $this->input->post('EntertheAppropriateShareCapital'),//
                    
                    'med_neg_only' => $this->input->post('UniqueTaxpayerReference'),//
                    'ol_pl_only' => $this->input->post('NetAmountTaxed'),//Agent Address
                    'interpreter_name' => $this->input->post('Taxpaidonboxincome'),//ril 
                    'interpreter_paid' => $this->input->post('NetAmountofnonSavingsIncome'),//Bestof call
                    'type_of_hire_car' => $this->input->post('TaxPidorTaxCredit'),//UKcompanydividends of call
                    'hire_provided_by' => $this->input->post('AfterTaxTakenoffNetAmount'),//
                    'were_you_injured' => $this->input->post('TaxPaidonbox46income'),//Agent Address
                    'description_of_injuries' => $this->input->post('NetAmountofDividendIncome'),//ril 
                    'office_use_only_rejection_reason' => $this->input->post('TaxCreditonBox48Income'),//Bestof call
                    'client_policy_number' => $this->input->post('IncomePaymentsfromSettlor'),//UKcompanydividends of call
                    'client_insurer' => $this->input->post('NetAmountofDividendIncome411'),//
                    'is_this_a_linked_passenger' => $this->input->post('Taxpaidonbox411income'),//
                    
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('Address1'),
                    'address_3' => $this->input->post('Address2'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : Null,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    
                    /*forign income*/
                    'fi_net_amunt' => $this->input->post('ForeignDividends'),
                    'fi_tax_takenoff61' => $this->input->post('ForeignTaxTakenoffBox'),
                    'fi_eligble_tax_credit' => $this->input->post('ForeignDividendsEligible'),
                    'fi_tax_tk_63' => $this->input->post('ForeigntaxTakenOff64'),
                    'fi_icome_b_expnse' => $this->input->post('ForeignPropertyIncome65'),
                    'fi_expne_allowble_f_tx' => $this->input->post('ForeignPropertyexpensesallowable'),
                    'fi_takenoffbox65income' => $this->input->post('ForeignTaxTakenoffBox65Income'),
                    'fi_othersaving' => $this->input->post('ForeignInterestandOtherSaving'),
                    'fi_taxtken_68' => $this->input->post('ForeignTaxTakenOffbox68Income'),
                    'fi_pen_other_income' => $this->input->post('ForeignPensionsOtherForeignIncome'),
                    'fi_tax_of610' => $this->input->post('ForeignTaxTakenoffBox610Income'),
                    'fi_counttax' => $this->input->post('CountryofOrigin'),
                    /*forign income*/
                    
                    /*UK land and property*/
                    'ec_repid' => $this->input->post('Income51'),
                    'ec_language' => $this->input->post('ExpensesAllowableforTax'),
                    'ec_auth_fname' => $this->input->post('Profit53'),
                    'ec_auth_lname' => $this->input->post('Loss54'),
                    'copy_of_complaint_letter' => $this->input->post('LandandPropertyLosses55'),
                    /*UK land and property*/
                    
                    /*Any other income and benefits*/
                    'ec_acc_fname' => $this->input->post('ChargeableEventGains'),
                    'ec_acc_lname' => $this->input->post('DescriptionofBox74Income'),
                    'ec_state' => $this->input->post('NumberofYears'),
                    'ec_relationship' => $this->input->post('TaxTreatedasPaidonBox71Income'),
                    'ec_accountclass' => $this->input->post('OtherIncomeandBenefits'),
                    'ec_salestype' => $this->input->post('TaxTakenoffBox74'),
                    /*Any other income and benefits*/
                    
                    /*Gift*/
                    'ec_commodity' => $this->input->post('GiftAidPaymentsClaimYear'),
                    'ec_accounttype' => $this->input->post('GiftAidPaymentsClaimYearProcedding'),
                    'ec_utillity' => $this->input->post('oneOffPaymentAmount'),
                    'ec_plancode' => $this->input->post('GiftAidPaymentsClaimYearAfter'),
                    /*Gift*/
                    
                    /*Blind person*/
                    'ec_accountnumber' => $this->input->post('impairedScotlandorNorthernIreland'),
                    'ec_meternumber' => $this->input->post('LocalAuthorityRegister'),
                    /*Blind person*/
                    
                    /*Married Couple’s Allowance*/
                    'ec_namekey' => $this->input->post('claimthefullallowance'),
                    'ec_servicezip' => $this->input->post('minimumCoupleamount'),
                    'ec_servicecity' => $this->input->post('AlreadyAgreedminimumCoupleamount'),
                    'ec_servicestate' => $this->input->post('spousesorcivilpartnerdate'),
                    'ec_serviceaddress' => $this->input->post('marriageOrcivilpartnership'),
                    'ec_servicepsuite' => $this->input->post('BlindPersonsAllowance'),
                    /*Married Couple’s Allowance*/
                    
                    /*Repayment instructions*/
                    'ec_billingzip' => $this->input->post('SendtheRepaymentTo'),
                    'ec_billingcity' => $this->input->post('PayableOrdertogotoyourNominee'),
                    'ec_billingstate' => $this->input->post('NomineeisyourAdviser'),
                    /*Repayment instructions*/
                    
                    /* Declaration – Please make sure that you’ve read the R40 Notes at section 12.2 before signing*/
                    'ec_billingaddress' => $this->input->post('SignanddatethisDeclare'),
                    'ec_billingapsuite' => $this->input->post('SignedonBehalfofSomeoneElse'),
                    'ec_budgetbilling' => $this->input->post('NeedclaimforminFuture'),
                    /* Declaration – Please make sure that you’ve read the R40 Notes at section 12.2 before signing*/
                    
                    "reference_id" => $reference_id,
                    "lead_status" => 120,
                    
                    'created_at' => date("y-m-d H:i:s")
                );

               /* echo "<pre>";
                print_r($leadData);
               die();             
                */
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leadswip', $leadData);
                
            
                if ($leadInsert) {
    
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leadsWIP',                        
                                    "module_name" => 'addLeadTR LEAD',
                                    "module_id" => $leadInsert,
                                    "note" => 'User Added new TR WIP lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
                    
                    $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                    redirect(base_url('Mod/manageWIP'));
                   
                }
            
            else {    
                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                redirect(base_url('Mod/manageWIP'));
                $this->addTRWIP($id);
                }
           
        }
     }
    /*WIP TR*/
    /*Create TR###################################################### Create TR*/
    /*##################################UPDATE TR########################################*/
    public function updateTRLead(){
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        if ($this->form_validation->run('addtaxreclaimlead') == FALSE) {
            $this->editLead($id);
        }else{  
           $lead    = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
           $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
           date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id=$userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstname'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastname'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();
            $campaign_id        = $checkCampaign[0]->campaign_id;
            
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID         = $_SESSION['adminData']['user_id'];
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            
            
            if($flg_ccj_id != NULL){
                $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>1NzafyHhaSXtOHl9Mr27PhW0ZoQFKVVp</key>
                                    <id>".$flg_ccj_id."</id>
                                    <firstname>" . $this->input->post('firstname') . "</firstname>
                                    <lastname>" . $this->input->post('lastname') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" .$this->input->post('NationalInsurancenumber'). "</data1>
                                    <data2>". $this->input->post('bestTimeofCall') ."</data2>
                                    <data3>". $this->input->post('AgentFullname') ."</data3>
                                    <data4>" .$this->input->post('agentaddress'). "</data4>
                                    <data5>" .$this->input->post('TottalEmploymentsPayments'). "</data5>
                                    <data6>" .$this->input->post('Taxtakenoff'). "</data6>
                                    <data7>" .$this->input->post('Amountreceiveweeklyearly'). "</data7>
                                    <data8>" .$this->input->post('receiveStatePension'). "</data8>
                                    <data9>" .$this->input->post('Taxablestatebenefits'). "</data9>
                                    <data10>" .$this->input->post('TaxableIncapacityBenefit'). "</data10>
                                    <data11>" .$this->input->post('TotalofOtherPensions'). "</data11>
                                    <data12>" .$this->input->post('Taxtakenoffbox'). "</data12>
                                    <data13>" .$this->input->post('ProfessionalSubscriptions'). "</data13>
                                    <data14>" .$this->input->post('PPIPayments'). "</data14>
                                    <data15>" .$this->input->post('Taxtakenoff32'). "</data15>
                                    <data16>" .$this->input->post('AmountBeforeTaxTakenOff'). "</data16>
                                    <data17>" .$this->input->post('UntaxedInterest'). "</data17>
                                    <data18>" .$this->input->post('UKcompanydividends'). "</data18>
                                    <data19>" .$this->input->post('DividendsfromUKAuthorised'). "</data19>
                                    <data20>" .$this->input->post('EntertheAppropriateShareCapital'). "</data20>
                                    <data21>" .$this->input->post('UniqueTaxpayerReference'). "</data21>
                                    <data22>" .$this->input->post('NetAmountTaxed'). "</data22>
                                    <data23>" .$this->input->post('Taxpaidonboxincome'). "</data23>
                                    <data24>" .$this->input->post('NetAmountofnonSavingsIncome'). "</data24>
                                    <data25>" .$this->input->post('TaxPidorTaxCredit'). "</data25>
                                    <data26>" .$this->input->post('AfterTaxTakenoffNetAmount'). "</data26>
                                    <data27>" .$this->input->post('TaxPaidonbox46income'). "</data27>
                                    <data28>" .$this->input->post('NetAmountofDividendIncome'). "</data28>
                                    <data29>" .$this->input->post('TaxCreditonBox48Income'). "</data29>
                                    <data30>" .$this->input->post('IncomePaymentsfromSettlor'). "</data30>
                                    <data31>" .$this->input->post('NetAmountofDividendIncome411'). "</data31>
                                    <data32>" .$this->input->post('Taxpaidonbox411income'). "</data32>
                                    <data33>" .$this->input->post('Income51'). "</data33>
                                    <data34>" .$this->input->post('ExpensesAllowableforTax'). "</data34>
                                    <data35>" .$this->input->post('Profit53'). "</data35>
                                    <data36>" .$this->input->post('Loss54'). "</data36>
                                    <data37>" .$this->input->post('LandandPropertyLosses55'). "</data37>
                                    <data38>" .$this->input->post('ForeignDividends'). "</data38>
                                    <data39>" .$this->input->post('ForeignTaxTakenoffBox'). "</data39>
                                    <data40>" .$this->input->post('ForeignDividendsEligible'). "</data40>
                                    <data41>" .$this->input->post('ForeigntaxTakenOff64'). "</data41>
                                    <data42>" .$this->input->post('ForeignPropertyIncome65'). "</data42>
                                    <data43>" .$this->input->post('ForeignPropertyexpensesallowable'). "</data43>
                                    <data44>" .$this->input->post('ForeignTaxTakenoffBox65Income'). "</data44>
                                    <data45>" .$this->input->post('ForeignInterestandOtherSaving'). "</data45>
                                    <data46>" .$this->input->post('ForeignTaxTakenOffbox68Income'). "</data46>
                                    <data47>" .$this->input->post('ForeignPensionsOtherForeignIncome'). "</data47>
                                    <data48>" .$this->input->post('CountryofOrigin'). "</data48>
                                    <data49>" .$this->input->post('ChargeableEventGains'). "</data49>
                                    <data50>" .$this->input->post('NumberofYears'). "</data50>
                                  </lead>
                                </data>";
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
                $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );
            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);
           
                
            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
                        }
             $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                   
                    'first_name' => $this->input->post('firstname'),
                    'last_name' => $this->input->post('lastname'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    
                    'clients_occupation' => $this->input->post('AgentFullname'),//Agent Name
                    'ni_number' => $this->input->post('NationalInsurancenumber'),//Nation insurance numer
                    'marital_status' => $this->input->post('agenphonenumber'),//Agent Phone Number
                    'are_you_a_litigation_friend' => $this->input->post('agentaddress'),//Agent Address
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('incomeBeforetheEnd'),//5 april 
                    'client_password' => $this->input->post('bestTimeofCall'),//Best time of call
                    
                    'number_of_passengers' => $this->input->post('TottalEmploymentsPayments'),//Agent Name
                    'passenger_1' => $this->input->post('Taxtakenoff'),//Nation insurance numer
                    'passenger_1_relationship' => $this->input->post('Amountreceiveweeklyearly'),//Agent Phone Number
                    'passenger_1_position_in_car' => $this->input->post('receiveStatePension'),//Agent Address
                    'passenger_2' => $this->input->post('Taxablestatebenefits'),//5 april 
                    'passenger_2_relationship' => $this->input->post('TaxableIncapacityBenefit'),//Best time of call
                    'passenger_2_position_in_car' => $this->input->post('TotalofOtherPensions'),//Best time of call
                    'passenger_3' => $this->input->post('Taxtakenoffbox'),//Best time of call
                    'passenger_4' => $this->input->post('ProfessionalSubscriptions'),//Best time of call
                    
                    'position_on_liability' => $this->input->post('PPIPayments'),//
                    'tp_insurer_details_name' => $this->input->post('Taxtakenoff32'),//Agent Address
                    'additional_notes' => $this->input->post('AmountBeforeTaxTakenOff'),//ril 
                    'nature_of_disrepair' => $this->input->post('UntaxedInterest'),//Bestof call
                    'date_disrepair_first_notice' => $this->input->post('UKcompanydividends'),//UKcompanydividends of call
                    'were_you_injured' => $this->input->post('DividendsfromUKAuthorised'),//
                    'date_hrd_noticed' => $this->input->post('EntertheAppropriateShareCapital'),//
                    
                    'med_neg_only' => $this->input->post('UniqueTaxpayerReference'),//
                    'ol_pl_only' => $this->input->post('NetAmountTaxed'),//Agent Address
                    'interpreter_name' => $this->input->post('Taxpaidonboxincome'),//ril 
                    'interpreter_paid' => $this->input->post('NetAmountofnonSavingsIncome'),//Bestof call
                    'type_of_hire_car' => $this->input->post('TaxPidorTaxCredit'),//UKcompanydividends of call
                    'hire_provided_by' => $this->input->post('AfterTaxTakenoffNetAmount'),//
                    'were_you_injured' => $this->input->post('TaxPaidonbox46income'),//Agent Address
                    'description_of_injuries' => $this->input->post('NetAmountofDividendIncome'),//ril 
                    'office_use_only_rejection_reason' => $this->input->post('TaxCreditonBox48Income'),//Bestof call
                    'client_policy_number' => $this->input->post('IncomePaymentsfromSettlor'),//UKcompanydividends of call
                    'client_insurer' => $this->input->post('NetAmountofDividendIncome411'),//
                    'is_this_a_linked_passenger' => $this->input->post('Taxpaidonbox411income'),//
                    
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('Address1'),
                    'address_3' => $this->input->post('Address2'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : Null,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    
                    /*forign income*/
                    'fi_net_amunt' => $this->input->post('ForeignDividends'),
                    'fi_tax_takenoff61' => $this->input->post('ForeignTaxTakenoffBox'),
                    'fi_eligble_tax_credit' => $this->input->post('ForeignDividendsEligible'),
                    'fi_tax_tk_63' => $this->input->post('ForeigntaxTakenOff64'),
                    'fi_icome_b_expnse' => $this->input->post('ForeignPropertyIncome65'),
                    'fi_expne_allowble_f_tx' => $this->input->post('ForeignPropertyexpensesallowable'),
                    'fi_takenoffbox65income' => $this->input->post('ForeignTaxTakenoffBox65Income'),
                    'fi_othersaving' => $this->input->post('ForeignInterestandOtherSaving'),
                    'fi_taxtken_68' => $this->input->post('ForeignTaxTakenOffbox68Income'),
                    'fi_pen_other_income' => $this->input->post('ForeignPensionsOtherForeignIncome'),
                    'fi_tax_of610' => $this->input->post('ForeignTaxTakenoffBox610Income'),
                    'fi_counttax' => $this->input->post('CountryofOrigin'),
                    /*forign income*/
                    
                    /*UK land and property*/
                    'ec_repid' => $this->input->post('Income51'),
                    'ec_language' => $this->input->post('ExpensesAllowableforTax'),
                    'ec_auth_fname' => $this->input->post('Profit53'),
                    'ec_auth_lname' => $this->input->post('Loss54'),
                    'copy_of_complaint_letter' => $this->input->post('LandandPropertyLosses55'),
                    /*UK land and property*/
                    
                    /*Any other income and benefits*/
                    'ec_acc_fname' => $this->input->post('ChargeableEventGains'),
                    'ec_acc_lname' => $this->input->post('DescriptionofBox74Income'),
                    'ec_state' => $this->input->post('NumberofYears'),
                    'ec_relationship' => $this->input->post('TaxTreatedasPaidonBox71Income'),
                    'ec_accountclass' => $this->input->post('OtherIncomeandBenefits'),
                    'ec_salestype' => $this->input->post('TaxTakenoffBox74'),
                    /*Any other income and benefits*/
                    
                    /*Gift*/
                    'ec_commodity' => $this->input->post('GiftAidPaymentsClaimYear'),
                    'ec_accounttype' => $this->input->post('GiftAidPaymentsClaimYearProcedding'),
                    'ec_utillity' => $this->input->post('oneOffPaymentAmount'),
                    'ec_plancode' => $this->input->post('GiftAidPaymentsClaimYearAfter'),
                    /*Gift*/
                    
                    /*Blind person*/
                    'ec_accountnumber' => $this->input->post('impairedScotlandorNorthernIreland'),
                    'ec_meternumber' => $this->input->post('LocalAuthorityRegister'),
                    /*Blind person*/
                    
                    /*Married Couple’s Allowance*/
                    'ec_namekey' => $this->input->post('claimthefullallowance'),
                    'ec_servicezip' => $this->input->post('minimumCoupleamount'),
                    'ec_servicecity' => $this->input->post('AlreadyAgreedminimumCoupleamount'),
                    'ec_servicestate' => $this->input->post('spousesorcivilpartnerdate'),
                    'ec_serviceaddress' => $this->input->post('marriageOrcivilpartnership'),
                    'ec_servicepsuite' => $this->input->post('BlindPersonsAllowance'),
                    /*Married Couple’s Allowance*/
                    
                    /*Repayment instructions*/
                    'ec_billingzip' => $this->input->post('SendtheRepaymentTo'),
                    'ec_billingcity' => $this->input->post('PayableOrdertogotoyourNominee'),
                    'ec_billingstate' => $this->input->post('NomineeisyourAdviser'),
                    /*Repayment instructions*/
                    
                    /* Declaration – Please make sure that you’ve read the R40 Notes at section 12.2 before signing*/
                    'ec_billingaddress' => $this->input->post('SignanddatethisDeclare'),
                    'ec_billingapsuite' => $this->input->post('SignedonBehalfofSomeoneElse'),
                    'ec_budgetbilling' => $this->input->post('NeedclaimforminFuture'),
                    /* Declaration – Please make sure that you’ve read the R40 Notes at section 12.2 before signing*/
                    
                    'updated_at' => date("y-m-d H:i:s")
                );
          
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Lead Updated');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = ' Lead Updated - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Updated Lead </h2>
                                            <p>Please be advised that the following lead has been edited and a change to the lead has been made</p>
                                            <table>
                                                
                                                <tr>
                                                    <td>Email</td>
                                                    <td>'. $this->input->post('email') .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $this->input->post('firstName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $this->input->post('lastName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Phone</td>
                                                    <td>' . $this->input->post('phone1') . '</td>
                                                </tr>
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        $this->mailer->send();
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            /* echo 'after exception Hello';*/
            /*flf update*/
            if($this->input->post('dateOfBirth')=="0000-00-00"){
                $dobDay = 1;
                $dobMonth = 1;
                $dobYear = 1990;
            }else{
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            }
           
            $this->load->model('Mods');
            
            $updatelead = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);
            
            if ($updatelead){
            
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                          
                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'editLead',
                                    "module_id" => $id,
                                    "note" => " User Update the TR Lead",
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                
                
                $this->session->set_flashdata('Successupdatelead', 'Lead Record Update.');
                //redirect(base_url('Mod/manageLeads'));
                redirect(base_url('Mod/editLead/'.$id));
            }  
            }
        }
    /*##################################UPDATE TR########################################*/
     /*WIP CH*/
  public function createCHWIP($id){
        
        if ($this->form_validation->run('addCarHireLead') == FALSE) {
            $this->addCHWIP($id);
        } 
       else {
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
            
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                    'client_car_registration' => $this->input->post('ClientCarRegistration'),
                    'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                    'client_insurer' => $this->input->post('ClientInsurer'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $this->input->post('TPCarRegistration'),
                    'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                    'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('ClientsOccupation'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                    'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                    'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ClientPassword'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                    'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => 140,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "number_of_passengers" => $this->input->post('number_of_passengers'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    "referred_by_your_name"         => $this->input->post('referred_by_your_name'),
                    "referrer_contact_number"       => $this->input->post('referrer_contact_number'),
                    "best_time_to_call_client"      => $this->input->post('best_time_to_call_client'),
                    "introducer_name"               => $this->input->post('introducer_name'),
                    "best_day_and_time_to_call"     => $this->input->post('best_day_and_time_to_call'),
                    "type_of_hire_car"              => $this->input->post('type_of_hire_car'),
                    "hire_provided_by"              => $this->input->post('hire_provided_by'),
                    "date_hire_provided"            => $this->input->post('date_hire_provided'),
                    "invoice_number"                => $this->input->post('invoice_number'),
                    "date_invoice_paid"             => $this->input->post('date_invoice_paid'),
                    "date_introducer_paid"          => $this->input->post('date_introducer_paid'),
                    "date_agent_paid"               => $this->input->post('date_agent_paid'),
                    "ref_date"                      => $this->input->post('ref_date'),
                    "rep_due"                       => $this->input->post('rep_due'),
                    "reference_id" => $reference_id,
                    'created_at' => date("y-m-d H:i:s"));

                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leadswip', $leadData);
               if($leadInsert){
                    $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                    redirect(base_url('Mod/manageWIP'));
               }else{
                    $this->session->set_flashdata('ErrorLeadData', 'Lead Status Created.');
                    $this->addCHWIP($id);  
               }
           }
       }
    /*WIP CH*/
    
    public function createCH($id){
        
        if ($this->form_validation->run('addCarHireLead') == FALSE) {
            $this->addCH($id);
        } else {
             if(isset($_POST['wipleadId'])){
               $wipleadId = $this->input->post('wipleadId');
                $wipid = $wipleadId;
              $del=$this->Mods->delete_single($companyId = $wipid, $conditionField = 'lead_id', $table_name = 'leadswip'); 
            }
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

$duplicateLead = "";            
            
if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
    
}
else{
    $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        (user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id)
                                        OR 
                                            (user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id)
                                        OR 
                                            (user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id)";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
//            if ($duplicateLead){
//                $this->session->set_flashdata('duplicateLeadError', $duplicateLead);
//                $this->addCH($id);
//            } 
            
}

//echo "<pre>";
//print_r($duplicateLead);
//echo $this->input->post('dateOfBirth');
//die();



    if (empty($duplicateLead) || !empty($duplicateLead)){
                
            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

                $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));

            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                            <data>
                              <lead>
                                <key>jdSVRnQ5KhynWMqf5auToImoBmAdO6GJ</key>
                                <leadgroup>55094</leadgroup>
                                <site>18111</site>
                                <introducer>0</introducer>
                                <type></type>
                                <user></user>
                                <status></status>
                                <reference></reference>
                                <source>" . $companyName . "</source>
                                <medium>" . $companyName . "</medium>
                                <term>$BDMName</term>
                                <cost></cost>
                                <value></value>
                                <title></title>
                                <firstname>" . $this->input->post('firstName') . "</firstname>
                                <lastname>" . $this->input->post('lastName') . "</lastname>
                                <company>". $companyName ."</company>
                                <jobtitle>". $BDMName ."</jobtitle>
                                <phone1>" . $this->input->post('phone1') . "</phone1>
                                <phone2>" . $this->input->post('phone2') . "</phone2>
                                <fax></fax>
                                <email>" . $this->input->post('email') . "</email>
                                <address>" . $this->input->post('address') . "</address>
                                <address2>" . $this->input->post('address2') . "</address2>
                                <address3>" . $this->input->post('address3') . "</address3>
                                <towncity>" . $this->input->post('towncity') . "</towncity>
                                <postcode>" . $this->input->post('postcode') . "</postcode>
                                <dobday>$dobDay</dobday>
                                <dobmonth>$dobMonth</dobmonth>
                                <dobyear>$dobYear</dobyear>
                                <contactphone>". $this->input->post('contactphone') ."</contactphone>
                                <contactsms>". $this->input->post('contactsms') ."</contactsms>
                                <contactemail>". $this->input->post('contactemail') ."</contactemail>
                                <contactmail>". $this->input->post('contactmail') ."</contactmail>
                                <contactfax></contactfax>
                                <contacttime>". $this->input->post('contacttime') ."</contacttime>
                                <data1>" . $this->input->post('referred_by_your_name') . "</data1>
                                <data2>" . $this->input->post('referrer_contact_number') . "</data2>
                                <data3>" . $this->input->post('best_time_to_call_client') . "</data3>
                                <data4>" . $this->input->post('introducer_name') . "</data4>
                                <data5>" . $this->input->post('best_day_and_time_to_call') . "</data5>
                                <data6>" . $this->input->post('type_of_hire_car') . "</data6>
                                <data7>" . $this->input->post('hire_provided_by') . "</data7>
                                <data8>" . $this->input->post('date_hire_provided') . "</data8>
                                <data9>" . $this->input->post('invoice_number') . "</data9>
                                <data10>" . $this->input->post('date_invoice_paid') . "</data10>
                                <data11>" . $this->input->post('date_introducer_paid') . "</data11>
                                <data12>" . $this->input->post('date_agent_paid') . "</data12>
                                <data13>" . $this->input->post('ref_date') . "</data13>
                                <data14>" . $this->input->post('rep_due') . "</data14>
                                <data15>" . $this->input->post('introducer_name') . "</data15>
                              </lead>
                            </data>";
            
        // Round 1 Flg Integration 
            
            $URL = "https://round1solutions.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;

            curl_close($ch);

            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
            
            $api_ids = array('round1solutions_fld' => $lead_id);
            
            /* ---------------------------flg hit end------------------ */

            if ($hit_message == 'OK') {

                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'tp_insurer_details_name' => $this->input->post('TPInsurerDetailsName'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'are_you_a_litigation_friend' => $this->input->post('AreyouaLitigationFriend'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('iflitigationfriendnameanddateofbirthoftheclaimant'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'do_you_have_access_to_the_details_of_the_party_you_blame' => $this->input->post('Doyouhaveaccesstothedetailsofthepartyyoublame'),
                    'client_car_registration' => $this->input->post('ClientCarRegistration'),
                    'client_car_make_model' => $this->input->post('ClientCarMakeModel'),
                    'client_insurer' => $this->input->post('ClientInsurer'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $this->input->post('TPCarRegistration'),
                    'tp_car_make_model' => $this->input->post('TPCarMakeModel'),
                    'have_you_claimed_before' => $this->input->post('Haveyouclaimedbefore'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('ClientsOccupation'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('Hastheclientbeenpaidoutforhis-hervehicledamage'),
                    'were_the_police_involved' => $this->input->post('Werethepoliceinvolved'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                    'how_many_occupants_in_the_vehicle' => $this->input->post('HowmanyOccupantsinthevehicle'),
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ClientPassword'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'employers_name_address_telephone_number' => $this->input->post('EmployersName-Address-TelephoneNumber'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('IsInjuryOngoingInjury-Physio'),
                    'third_party_policy_number' => $this->input->post('ThirdpartypolicyNumber'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 125 : 121,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "number_of_passengers" => $this->input->post('number_of_passengers'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'api_inseration_id'             => json_encode($api_ids),
                    "referred_by_your_name"         => $this->input->post('referred_by_your_name'),
                    "referrer_contact_number"       => $this->input->post('referrer_contact_number'),
                    "best_time_to_call_client"      => $this->input->post('best_time_to_call_client'),
                    "introducer_name"               => $this->input->post('introducer_name'),
                    "best_day_and_time_to_call"     => $this->input->post('best_day_and_time_to_call'),
                    "type_of_hire_car"              => $this->input->post('type_of_hire_car'),
                    "hire_provided_by"              => $this->input->post('hire_provided_by'),
                    "date_hire_provided"            => $this->input->post('date_hire_provided'),
                    "invoice_number"                => $this->input->post('invoice_number'),
                    "date_invoice_paid"             => $this->input->post('date_invoice_paid'),
                    "date_introducer_paid"          => $this->input->post('date_introducer_paid'),
                    "date_agent_paid"               => $this->input->post('date_agent_paid'),
                    "ref_date"                      => $this->input->post('ref_date'),
                    "rep_due"                       => $this->input->post('rep_due'),
                    "reference_id" => $reference_id,
                    'created_at' => date("y-m-d H:i:s")
                );

                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
                
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }
                    
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addCH',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new CH lead.' : 'User add new CH lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    
                  $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                  $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
 
                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);

                  
                  $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New Car Hire Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $this->mailer->Subject = 'NEW CH Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . " - Company: ". $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW CH Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company ' . $companyName .'</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Position on Liability</td>
                                                    <td>' . $getleadData[0]->position_on_liability  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Insurer Details-Name</td>
                                                    <td>' . $getleadData[0]->tp_insurer_details_name  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Accident Circumstances</td>
                                                    <td>' . $getleadData[0]->accident_circumstances  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Status in Accident</td>
                                                    <td>' . $getleadData[0]->client_status_in_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Are you a Litigation Friend</td>
                                                    <td>' . $getleadData[0]->are_you_a_litigation_friend  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Replacement invoice Number</td>
                                                    <td>' . $getleadData[0]->replacement_invoice_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>If litigation friend, name and date of birth of the claimant</td>
                                                    <td>' . $getleadData[0]->if_litigation_friend_name_and_date_of_birth_of_the_claimant  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Date of Accident</td>
                                                    <td>' . $date_of_accident . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Time of Accident</td>
                                                    <td>' . $getleadData[0]->time_of_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What Injuries did you suffer?</td>
                                                    <td>' . $getleadData[0]->what_injuries_did_you_suffer  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Did you seek Medical Attention</td>
                                                    <td>' . $getleadData[0]->did_you_seek_medical_attention  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Who do you blame for the accident?</td>
                                                    <td>' . $getleadData[0]->who_do_you_blame_for_the_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Do you have access to the details of the party you blame?</td>
                                                    <td>' . $getleadData[0]->do_you_have_access_to_the_details_of_the_party_you_blame  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Car Registration</td>
                                                    <td>' . $getleadData[0]->client_car_registration  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Car Make Model</td>
                                                    <td>' . $getleadData[0]->client_car_make_model  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Insurer</td>
                                                    <td>' . $getleadData[0]->client_insurer  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Policy Number</td>
                                                    <td>' . $getleadData[0]->client_policy_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Car Registration</td>
                                                    <td>' . $getleadData[0]->tp_car_registration  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>TP Car Make Model</td>
                                                    <td>' . $getleadData[0]->tp_car_make_model  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Have you claimed before?</td>
                                                    <td>' . $getleadData[0]->have_you_claimed_before  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Do you wish to make a claim?</td>
                                                    <td>' . $getleadData[0]->do_you_wish_to_make_a_claim  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Additional notes</td>
                                                    <td>' . $getleadData[0]->additional_notes  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Is this a linked passenger</td>
                                                    <td>' . $getleadData[0]->is_this_a_linked_passenger  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Preferred time of Contact</td>
                                                    <td>' . $getleadData[0]->preferred_time_of_contact  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Clients Occupation</td>
                                                    <td>' . $getleadData[0]->clients_occupation  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>NI Number</td>
                                                    <td>' . $getleadData[0]->ni_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Was the Client Vehicle repaired or total loss</td>
                                                    <td>' . $getleadData[0]->was_the_client_vehicle_repaired_or_total_loss  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Has the client been paid out for hisher vehicle damage?</td>
                                                    <td>' . $getleadData[0]->has_the_client_been_paid_out_for_his_her_vehicle_damage  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Were the police involved?</td>
                                                    <td>' . $getleadData[0]->were_the_police_involved  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What was the exact location of the accident?</td>
                                                    <td>' . $getleadData[0]->what_was_the_exact_location_of_the_accident  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>What was the weather like?</td>
                                                    <td>' . $getleadData[0]->what_was_the_weather_like  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>How many Occupants in the vehicle</td>
                                                    <td>' . $getleadData[0]->how_many_occupants_in_the_vehicle  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Preferred Time to Call</td>
                                                    <td>' . $getleadData[0]->preferred_time_to_call  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Client Password</td>
                                                    <td>' . $getleadData[0]->client_password  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Was Accident reported or recorded in the accident Book?</td>
                                                    <td>' . $getleadData[0]->was_accident_reported_or_recorded_in_the_accident_book  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Employers Name, Address, Telephone Number</td>
                                                    <td>' . $getleadData[0]->employers_name_address_telephone_number  . '</td>
                                                </tr> 
                                                <tr>
                                                    <td>Med Neg Only</td>
                                                    <td>' . $getleadData[0]->med_neg_only  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>OL PL ONLY</td>
                                                    <td>' . $getleadData[0]->ol_pl_only  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Credit Hire or Vehicle Replacement Required</td>
                                                    <td>' . $getleadData[0]->credit_hire_or_vehicle_replacement  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Is Injury Ongoing Injury- Physio Required</td>
                                                    <td>' . $getleadData[0]->is_injury_on_going_injury_physio  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Third party policy Number</td>
                                                    <td>' . $getleadData[0]->third_party_policy_number  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Interpreter Name</td>
                                                    <td>' . $getleadData[0]->interpreter_name  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Interpreter paid</td>
                                                    <td>' . $getleadData[0]->interpreter_paid  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {

                            $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany        = json_decode(json_encode($item), 1);
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                $this->addCH($id);                
                
                
                }
                
                    
            }
        }
        
    }
    
    /*ec######################################################ec*/
public function createEC($id){
        if ($this->form_validation->run('addEnergyLead') == FALSE) {
            $this->addEC($id);
        } else {
            if(isset($_POST['wipleadId'])){
               $wipleadId = $this->input->post('wipleadId');
                $wipid = $wipleadId;
              $del=$this->Mods->delete_single($companyId = $wipid, $conditionField = 'lead_id', $table_name = 'leadswip'); 
            }
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstname']) ? $_POST['firstname'] : ''; 
            $last_name          = !empty($_POST['lastname']) ? $_POST['lastname'] : '';          
            
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();
            /*echo '<pre>';
            print_r($checkCampaign);
            echo '<br>';*/
            //die();
            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

$duplicateLead = "";            
 if ($this->input->post('clone') == "clone"){
    
$this->session->set_userdata('clone', 'clone');

            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
    
}else{
            
        $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        (user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id)
                                        OR 
                                            (user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number'  AND campaign_id = $campaign_id)
                                        OR 
                                            (user_id = $user_id  AND company_id = $company_id AND email = '$email_address'  AND campaign_id = $campaign_id)";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : ""; 
            
}

    if (empty($duplicateLead) || !empty($duplicateLead)){
                
            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";
                $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array(); 
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));

            
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                            <data>
                              <lead>
                                <key>em2l9Xh8qcrKXVeenXozXP88NGgob19R</key>
                                <leadgroup>56117</leadgroup>
                                <site>0</site>
                                <introducer>0</introducer>
                                <type></type>
                                <user></user>
                                <status></status>
                                <reference></reference>
                                <source>" . $companyName . "</source>
                                <medium>" . $companyName . "</medium>
                                <term>$BDMName</term>
                                <cost></cost>
                                <value></value>
                                <title></title>
                                <firstname>" . $this->input->post('firstname') . "</firstname>
                                <lastname>" . $this->input->post('lastname') . "</lastname>
                                <company>". $companyName ."</company>
                                <jobtitle>". $this->input->post('jobtitle') ."</jobtitle>
                                <phone1>" . $this->input->post('phone1') . "</phone1>
                                <phone2>" . $this->input->post('phone2') . "</phone2>
                                <fax></fax>
                                <email>" . $this->input->post('email') . "</email>
                                <address>" . $this->input->post('address') . "</address>
                                <address2>" . $this->input->post('address2') . "</address2>
                                <address3>" . $this->input->post('address3') . "</address3>
                                <towncity>" . $this->input->post('TownCity') . "</towncity>
                                <postcode>" . $this->input->post('postcode') . "</postcode>
                                <dobday>$dobDay</dobday>
                                <dobmonth>$dobMonth</dobmonth>
                                <dobyear>$dobYear</dobyear>
                                <contactphone>". $this->input->post('contactphone') ."</contactphone>
                                <contactsms>". $this->input->post('contactsms') ."</contactsms>
                                <contactemail>". $this->input->post('contactemail') ."</contactemail>
                                <contactmail>". $this->input->post('contactmail') ."</contactmail>
                                <contactfax></contactfax>
                                <contacttime>". $this->input->post('contacttime') ."</contacttime>
                                <data1>". $this->input->post('RepId') ."</data1>
                                <data2>". $this->input->post('ECLanguage') ."</data2>
                                <data3>". $this->input->post('AuthorizerFirstname') ."</data3>
                                <data4>". $this->input->post('AuthorizerLastName') ."</data4>
                                <data5>". $this->input->post('AccountHolderFirstName') ."</data5>
                                <data6>". $this->input->post('AccountHolderLastName') ."</data6>
                                <data7>". $this->input->post('State') ."</data7>
                                <data8>". $this->input->post('Relationship') ."</data8>
                                <data9>". $this->input->post('AccountClass') ."</data9>
                                <data10>". $this->input->post('SalesType') ."</data10>
                                <data11>". $this->input->post('Commodity') ."</data11>
                                <data12>". $this->input->post('Accounttype') ."</data12>
                                <data13>". $this->input->post('Utillity') ."</data13>
                                <data14>". $this->input->post('PlanCode') ."</data14>
                                <data15>". $this->input->post('AccountNumber') ."</data15>
                                <data16>". $this->input->post('MeterNumber') ."</data16>
                                <data17>". $this->input->post('NameKey') ."</data17>
                                <data18>". $this->input->post('ServiceZip') ."</data18>
                                <data19>". $this->input->post('ServiceCity') ."</data19>
                                <data20>". $this->input->post('ServiceState') ."</data20>
                                <data21>". $this->input->post('ServiceAddress') ."</data21>
                                <data22>". $this->input->post('ServiceAptSuite') ."</data22>
                                <data23>". $this->input->post('BillingZip') ."</data23>
                                <data24>". $this->input->post('BillingCity') ."</data24>
                                <data25>". $this->input->post('BillingState') ."</data25>
                                <data26>". $this->input->post('BillingAddress') ."</data26>
                                <data27>". $this->input->post('BillingAptSuite') ."</data27>
                                <data28>". $this->input->post('BudgetBilling') ."</data28>
                              </lead>
                            </data>";
            
            
            
        // Round 1 Flg Integration 
            
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            $xml_data = str_replace('&', '&#38;', $xml_data);
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
       
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $c_c_j_lead_id = $lead_id;
            curl_close($ch);

            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
            
            $api_ids = array('round1solutions_fld' => $lead_id);
        
            /* ---------------------------flg hit end------------------ */

            if ($hit_message == 'OK') {
                $leadData = array(
                        'user_id' => $userID,
                        'company_id' => $companyId,
                        "first_name" => $this->input->post('firstname'),
                        "last_name" => $this->input->post('lastname'),
                        "company_name" => $companyName,
                        "job_title" => $this->input->post('jobtittle'),
                        "phone_1" => $this->input->post('phone1'),
                        "phone_2" => $this->input->post('phone2'),
                        "email" => $this->input->post('email'),
                        "address" => $this->input->post('address'),
                        "address_2" => $this->input->post('address2'),
                        "address_3" => $this->input->post('address3'),
                        "town_city" => $this->input->post('TownCity'),
                        "post_code" => $this->input->post('postcode'),
                        "date_of_birth" => $this->input->post('dateOfBirth') ? $this->input->post('dateOfBirth') : NULL,
                        "ec_repid" => $this->input->post('RepId'),
                        "ec_language" => $this->input->post('ECLanguage'),
                        "ec_auth_fname" => $this->input->post('AuthorizerFirstname'),
                        "ec_auth_lname" => $this->input->post('AuthorizerLastName'),
                        "ec_acc_fname" => $this->input->post('AccountHolderFirstName'),
                        "ec_acc_lname" => $this->input->post('AccountHolderLastName'),
                        "ec_state" => $this->input->post('State'),
                        "ec_relationship" => $this->input->post('Relationship'),
                        "ec_accountclass" => $this->input->post('AccountClass'),
                        "ec_salestype" => $this->input->post('SalesType'),
                        "ec_commodity" => $this->input->post('Commodity'),
                        "ec_accounttype" => $this->input->post('Accounttype'),
                        "ec_utillity" => $this->input->post('Utillity'),
                        "ec_plancode" => $this->input->post('PlanCode'),
                        "ec_accountnumber" => $this->input->post('AccountNumber'),
                        "ec_meternumber" => $this->input->post('MeterNumber'),
                        "ec_namekey" => $this->input->post('NameKey'),
                        "ec_servicezip" => $this->input->post('ServiceZip'),
                        "ec_servicecity" => $this->input->post('ServiceCity'),
                        "ec_servicestate" => $this->input->post('ServiceState'),
                        "ec_serviceaddress" => $this->input->post('ServiceAddress'),
                        "ec_servicepsuite" => $this->input->post('ServiceAptSuite'),
                        "ec_billingzip" => $this->input->post('BillingZip'),
                        "ec_billingcity" => $this->input->post('BillingCity'),
                        "ec_billingstate" => $this->input->post('BillingState'),
                        "ec_billingaddress" => $this->input->post('BillingAddress'),
                        "ec_billingapsuite" => $this->input->post('BillingAptSuite'),
                        "ec_budgetbilling" => $this->input->post('BudgetBilling'),
                        "contact_phone" => $this->input->post('contactphone'),
                        "contact_sms" => $this->input->post('contactsms'),
                        "contact_email" => $this->input->post('contactemail'),
                        "contact_mail" => $this->input->post('contactmail'),
                        "contact_time" => $this->input->post('contacttime'),
                        'lead_status' => ($duplicateLead || $checkLinkedLead) ? 150 : 140 ,
                        'campaign_id' => $checkCampaign[0]->campaign_id,
                        'api_inseration_id' => json_encode($api_ids),
                        "flg_ccj_id" => $c_c_j_lead_id,
                        "reference_id" => $reference_id,
                        "created_at" => date("y-m-d H:i:s")
                    );
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);                
                if ($leadInsert) {
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            
                        $linkLeadData1 = array(
                             'lead_id'       => $leadInsert, 
                             'link_lead_id'  => $linkedLead['lead_id'], 
                             'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                         );
                        $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }
                    
                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addEC',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new EC lead.' : 'User add new EC lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    
                  $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                  $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
 
                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);

                  
                  $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New Energy Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $this->mailer->Subject = 'NEW EC Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . " - Company: ". $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW EC Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company ' . $companyName .'</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Job Tittle</td>
                                                    <td>' . $getleadData[0]->title . '</td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Authorizer First Name</td>
                                                    <td>' . $getleadData[0]->ec_auth_fname . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Authorizer Last name</td>
                                                    <td> '. $getleadData[0]->ec_auth_lname . ' </td>
                                                </tr>
                                                
                                                 <tr>
                                                    <td>Account Holder First Name</td>
                                                    <td> '. $getleadData[0]->ec_acc_fname . ' </td>
                                                </tr>
                                                
                                                 <tr>
                                                    <td>Account Holder Last Name</td>
                                                    <td> '. $getleadData[0]->ec_acc_lname . ' </td>
                                                </tr>
                                                
                                                 <tr>
                                                    <td>Rep Id</td>
                                                    <td> '. $getleadData[0]->ec_repid . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Language</td>
                                                    <td> '. $getleadData[0]->ec_language . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>State</td>
                                                    <td> '. $getleadData[0]->ec_state . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Relationship</td>
                                                    <td> '. $getleadData[0]->ec_relationship . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Account Class</td>
                                                    <td> '. $getleadData[0]->ec_accountclass . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Sales Type</td>
                                                    <td> '. $getleadData[0]->ec_salestype . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Commodity</td>
                                                    <td> '. $getleadData[0]->ec_commodity . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Account Type</td>
                                                    <td> '. $getleadData[0]->ec_accounttype . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Utility</td>
                                                    <td> '. $getleadData[0]->ec_utillity . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Plan Code</td>
                                                    <td> '. $getleadData[0]->ec_plancode . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Meter Number</td>
                                                    <td> '. $getleadData[0]->ec_meternumber . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Account Number</td>
                                                    <td> '. $getleadData[0]->ec_accountnumber . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Name Key</td>
                                                    <td> '. $getleadData[0]->ec_namekey . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Service Zip</td>
                                                    <td> '. $getleadData[0]->ec_servicezip . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Service City</td>
                                                    <td> '. $getleadData[0]->ec_servicecity . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Service State</td>
                                                    <td> '. $getleadData[0]->ec_servicestate . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Budget Billing</td>
                                                    <td> '. $getleadData[0]->ec_budgetbilling . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Service Apt/Suite</td>
                                                    <td> '. $getleadData[0]->ec_servicepsuite . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Billing Zip</td>
                                                    <td> '. $getleadData[0]->ec_billingzip . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Billing City</td>
                                                    <td> '. $getleadData[0]->ec_billingcity . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Billing Address</td>
                                                    <td> '. $getleadData[0]->ec_billingaddress . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Service State</td>
                                                    <td> '. $getleadData[0]->ec_servicestate . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Service Address</td>
                                                    <td> '. $getleadData[0]->ec_serviceaddress . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Billing State</td>
                                                    <td> '. $getleadData[0]->ec_billingstate . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Phone 1 </td>
                                                    <td> '. $getleadData[0]->phone_1 . ' </td>
                                                </tr> 
                                                 <tr>
                                                    <td>Phone 2</td>
                                                    <td> '. $getleadData[0]->phone_2 . ' </td>
                                                </tr>
                                                  
                                                 <tr>
                                                    <td>Email</td>
                                                    <td> '. $getleadData[0]->email . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Address 1</td>
                                                    <td> '. $getleadData[0]->address . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Address 2</td>
                                                    <td> '. $getleadData[0]->address_2 . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Address 3</td>
                                                    <td> '. $getleadData[0]->address_3 . ' </td>
                                                </tr>
                                                 <tr>
                                                    <td>Town City</td>
                                                    <td> '. $getleadData[0]->town_city . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Post Code</td>
                                                    <td> ' . $getleadData[0]->post_code . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>DOB DAY</td>
                                                    <td> ' . $dobDay . ' </td>
                                                </tr> 
                                                <tr>
                                                    <td>DOB MONTH</td>
\                                                    <td> ' . $dobMonth . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>DOB YEAR</td>
                                                    <td> ' . $dobYear . ' </td>
                                                </tr>
                                                <tr>
                                                    <td>Permission To Phone</td>
\                                                    <td> ' . $getleadData[0]->contact_phone . ' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Permission To SMS</td>
                                                    <td> ' . $getleadData[0]->contact_sms .' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Permission To EMAIL</td>
                                                    <td> ' . $getleadData[0]->contact_email . ' </td>
                                                </tr>
                                                
                                                <tr>
                                                    <td>Permission To MAIL</td>
                                                    <td> ' . $getleadData[0]->contact_mail . ' </td>
                                                </tr> 
                                                
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td> ' . $getleadData[0]->contact_time . ' </td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {

                          if($del){
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageWIP'));
                            }else{
                                $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                                redirect(base_url('Mod/manageLeads'));
                            }
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany        = json_decode(json_encode($item), 1);
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                $this->addEC($id);                
                
                
                }
                
                    
            }
        }
    }
/*EC WIP*/
public function createECWIP($id){
        if ($this->form_validation->run('addEnergyLead') == FALSE) {
            
            $this->addECWIP($id);
        } 
    else {
            /*echo 'Hell';
            echo $_POST['AuthorizerFirstname'];*/
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstname']) ? $_POST['firstname'] : ''; 
            $last_name          = !empty($_POST['lastname']) ? $_POST['lastname'] : '';          
            
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();
           
            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
                
            
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));

                $leadData = array(
                        'user_id' => $userID,
                        'company_id' => $companyId,
                        "first_name" => $this->input->post('firstname'),
                        "last_name" => $this->input->post('lastname'),
                        "company_name" => $companyName,
                        "job_title" => $this->input->post('jobtittle'),
                        "phone_1" => $this->input->post('phone1'),
                        "phone_2" => $this->input->post('phone2'),
                        "email" => $this->input->post('email'),
                        "address" => $this->input->post('address'),
                        "address_2" => $this->input->post('address2'),
                        "address_3" => $this->input->post('address3'),
                        "town_city" => $this->input->post('TownCity'),
                        "post_code" => $this->input->post('postcode'),
                        "date_of_birth" => $this->input->post('dateOfBirth') ? $this->input->post('dateOfBirth') : NULL,
                        "ec_repid" => $this->input->post('RepId'),
                        "ec_language" => $this->input->post('ECLanguage'),
                        "ec_auth_fname" => $this->input->post('AuthorizerFirstname'),
                        "ec_auth_lname" => $this->input->post('AuthorizerLastName'),
                        "ec_acc_fname" => $this->input->post('AccountHolderFirstName'),
                        "ec_acc_lname" => $this->input->post('AccountHolderLastName'),
                        "ec_state" => $this->input->post('State'),
                        "ec_relationship" => $this->input->post('Relationship'),
                        "ec_accountclass" => $this->input->post('AccountClass'),
                        "ec_salestype" => $this->input->post('SalesType'),
                        "ec_commodity" => $this->input->post('Commodity'),
                        "ec_accounttype" => $this->input->post('Accounttype'),
                        "ec_utillity" => $this->input->post('Utillity'),
                        "ec_plancode" => $this->input->post('PlanCode'),
                        "ec_accountnumber" => $this->input->post('AccountNumber'),
                        "ec_meternumber" => $this->input->post('MeterNumber'),
                        "ec_namekey" => $this->input->post('NameKey'),
                        "ec_servicezip" => $this->input->post('ServiceZip'),
                        "ec_servicecity" => $this->input->post('ServiceCity'),
                        "ec_servicestate" => $this->input->post('ServiceState'),
                        "ec_serviceaddress" => $this->input->post('ServiceAddress'),
                        "ec_servicepsuite" => $this->input->post('ServiceAptSuite'),
                        "ec_billingzip" => $this->input->post('BillingZip'),
                        "ec_billingcity" => $this->input->post('BillingCity'),
                        "ec_billingstate" => $this->input->post('BillingState'),
                        "ec_billingaddress" => $this->input->post('BillingAddress'),
                        "ec_billingapsuite" => $this->input->post('BillingAptSuite'),
                        "ec_budgetbilling" => $this->input->post('BudgetBilling'),
                        "contact_phone" => $this->input->post('contactphone'),
                        "contact_sms" => $this->input->post('contactsms'),
                        "contact_email" => $this->input->post('contactemail'),
                        "contact_mail" => $this->input->post('contactmail'),
                        "contact_time" => $this->input->post('contacttime'),
                        'lead_status' => 140 ,
                        'campaign_id' => $checkCampaign[0]->campaign_id,
                        
                        "reference_id" => $reference_id,
                        "created_at" => date("y-m-d H:i:s")
                    );
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leadswip', $leadData);  
            if($leadInsert){
                $this->session->set_flashdata('SuccessLeadData', 'Lead Created.');
                redirect(base_url('Mod/manageWIP'));
            }else{
                $this->session->set_flashdata('ErorrLeadData', 'Lead Created.');
                $this->addECWIP($id);        
            }
                
                           
                    
            
        }
    }
/*EC WIP*/
    /*ec######################################################ec*/
    public function activities(){
        
        $this->headerV($this->title = "User Activities");
        $this->load->view('Mod/leads/activities');
        $this->load->view('Mod/footer/footer');
        
    }
    
    public function tasks_events_calendar(){
        $view_data['allusersdata'] = $this->Mods->getUsers();
        $loggedInuserid =  $_SESSION['adminData']['user_id'];
        $sql_label       = "SELECT events.id,
                            events.title AS oldishTittle, 
                            events.client_id, 
                            events.description,
                            events.eventstatus, 
                            events.start, 
                            events.end, 
                            events.color,
                            events.created_by,
                            users.userName AS EventCreatedUserName,
                            CASE 
                                WHEN events.client_id = 0 THEN 'Event Without Client' 
                                WHEN events.client_id != 0 THEN (SELECT CONCAT(leads.first_name, ' ', leads.last_name, ' [ ', leads.phone_1,' ] ') FROM leads  WHERE leads.lead_id = events.client_id)
                            END AS 'shortDetailsClient',
                            CONCAT('(',users.userName,')',' ', events.title) as title
                        FROM
                        events JOIN users ON users.id = events.created_by WHERE events.created_by = $loggedInuserid";
             $label_data  = $this->db->query($sql_label)->result();
            
         $NewRecords = array();
            foreach($label_data as $single){
                /*echo "<pre>";
                print_r($single);
                die();*/
                $temp = array();
                $temp['id']             = $single->id;
                $temp['oldishTittle'] =  $single->oldishTittle;
                $temp['client_id'] = $single->client_id;
                $temp['description'] = $single->description;
                $temp['eventstatus'] = $single->eventstatus;
                $temp['start'] = $single->start;
                $temp['end'] = $single->end;
                $temp['color'] = $single->color;
                $temp['shortDetailsClient'] = $single->shortDetailsClient;
                $temp['title'] = $single->title.' ('.$single->shortDetailsClient.')';
                $temp['created_by'] = $single->created_by;
                array_push($NewRecords, $temp);
            }    
        
             $view_data['events'] = $NewRecords;
             
             $this->headerV($this->title = "User Tasks Calender");
             $this->load->view('Mod/calendar/acalender',$view_data);
             $this->load->view('Mod/footer/footer');
        
    }
    public function view_userevents_details($EventUserID){
        if($EventUserID!='' && $EventUserID !=0){
             $view_data['allusersdata'] = $this->Mods->getUsers();
            $loggedInuserid =  $EventUserID;
            $sql_label       = "SELECT events.id,
                                events.title AS oldishTittle, 
                                events.client_id, 
                                events.description,
                                events.eventstatus, 
                                events.start, 
                                events.end, 
                                events.color,
                                users.userName AS EventCreatedUserName,
                                 
                                CASE 
                                    WHEN events.client_id = 0 THEN 'Event Without Client' 
                                    WHEN events.client_id != 0 THEN (SELECT CONCAT(leads.first_name, ' ', leads.last_name, ' [ ', leads.phone_1,' ] ') FROM leads  WHERE leads.lead_id = events.client_id)
                                END AS 'shortDetailsClient',
                                CONCAT('(',users.userName,')',' ', events.title) as title
                            FROM
                            events JOIN users ON users.id = events.created_by WHERE events.created_by = $loggedInuserid";
                /*$sql_label  = "SELECT events.id,
                                events.title, 
                                events.client_id, 
                                events.description,
                                events.eventstatus, 
                                events.start, 
                                events.end, 
                                events.color,
                                CASE 
                                    WHEN events.client_id = 0 THEN 'Event Without Client' 
                                    WHEN events.client_id != 0 THEN (SELECT CONCAT(leads.first_name, ' ', leads.last_name, ' [ ', leads.phone_1,' ] ') FROM leads  WHERE leads.lead_id = events.client_id)
                                END AS 'shortDetailsClient'
                            FROM
                            events WHERE events.created_by = $loggedInuserid";*/
            
                 $label_data  = $this->db->query($sql_label)->result();
            
            $NewRecords = array();
            foreach($label_data as $single){
                /*echo "<pre>";
                print_r($single);
                die();*/
                $temp = array();
                $temp['id']             = $single->id;
                $temp['oldishTittle'] =  $single->oldishTittle;
                $temp['client_id'] = $single->client_id;
                $temp['description'] = $single->description;
                $temp['eventstatus'] = $single->eventstatus;
                $temp['start'] = $single->start;
                $temp['end'] = $single->end;
                $temp['color'] = $single->color;
                $temp['EventCreatedUserName'] = $single->EventCreatedUserName;
                $temp['shortDetailsClient'] = $single->shortDetailsClient;
                $temp['title'] = $single->title.' ('.$single->shortDetailsClient.')';
                /*$temp['title'] => $single->title*/
                array_push($NewRecords, $temp);
            }    
            
                 $view_data['events'] = $NewRecords;
            
                /*echo "<pre>";
                print_r($NewRecords);
                die();*/
                
                 $this->headerV($this->title = "User Tasks Calender");
                 $this->load->view('Mod/calendar/acalender',$view_data);
                 $this->load->view('Mod/footer/footer');
        }else{
            redirect('Mod/tasks_events_calendar');
        }
       
        
    }
    
    
    public function EventsTasksWithLeads($id = 0){
         $this->data['allusersdata'] = $this->Mods->getUsers();
        $lead    = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';       
          if (is_array($lead)) {
            $this->data['changeLeadStatus'] = $lead[0];
            $leadsStatuses                  = $this->Mods->getAllData($fields = "id, status_name", $order = "status_name", $sort = "ASC", $tableName = "lead_statuses");
            $this->data['leadsStatuses']    = $leadsStatuses;
              $lead_id = $lead[0]->lead_id;
            //$loggedInuserid =  $_SESSION['adminData']['user_id'];
         
             /*$sql_label       = "SELECT id, title, start, end, color FROM events WHERE created_by = $loggedInuserid AND client_id = $lead_id";
             $label_data  = $this->db->query($sql_label)->result();
             $this->data['events'] = $label_data;
			 */
			 $view_data['allusersdata'] = $this->Mods->getUsers();
			$loggedInuserid =  $_SESSION['adminData']['user_id'];
			$sql_label       = "SELECT events.id,
								events.title AS oldishTittle,  
								events.client_id, 
								events.description,
								events.eventstatus, 
								events.start, 
								events.end, 
								events.color,
                                events.created_by,
                                users.userName AS EventCreatedUserName,
								CASE 
									WHEN events.client_id = 0 THEN 'Event Without Client' 
									WHEN events.client_id != 0 THEN (SELECT CONCAT(leads.first_name, ' ', leads.last_name, ' [ ', leads.phone_1,' ] ') FROM leads  WHERE leads.lead_id = events.client_id)
								END AS 'shortDetailsClient',
                                CONCAT('(',users.userName,')',' ', events.title) as title
							FROM
							events JOIN users ON users.id = events.created_by WHERE events.created_by = $loggedInuserid AND client_id = $lead_id";
				 $label_data  = $this->db->query($sql_label)->result();
               $NewRecords = array();
                foreach($label_data as $single){
                   /* echo "<pre>";
                    print_r($single);
                    die();*/
                    $temp = array();
                    $temp['id']             = $single->id;
                    $temp['oldishTittle'] =  $single->oldishTittle;
                    $temp['client_id'] = $single->client_id;
                    $temp['description'] = $single->description;
                    $temp['eventstatus'] = $single->eventstatus;
                    $temp['start'] = $single->start;
                    $temp['end'] = $single->end;
                    $temp['color'] = $single->color;
                    $temp['EventCreatedUserName'] = $single->EventCreatedUserName;
                    $temp['shortDetailsClient'] = $single->shortDetailsClient;
                    $temp['title'] = $single->title.' ('.$single->shortDetailsClient.')';
                    $temp['created_by'] = $single->created_by;
                    array_push($NewRecords, $temp);
                }   
				 $this->data['events'] = $NewRecords;
            
        } else {
            
            $this->session->set_flashdata('leadNoteDataError', 'Record Not Exists.');
            $this->data['changeLeadStatus'] = '';
            $this->data['leadsStatuses']    = '';            
            
        }
         
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';  
        $this->data['leadsDetails'] = $lead;
        /*echo "<pre>";
        print_r($label_data);
        die();*/
        $this->headerV($this->title = "Events and Tasks");
        $this->load->view('Mod/calendar/leads_ref_single_user_calender',$this->data);
        //$this->load->view('Mod/calendar/acalender',$this->data);
        $this->load->view('Mod/footer/footer');
  }
    
    function get_details($options = array()) {
        $labels_table = 'labels';

        $where = "";

        $context = "event";
        if ($context) {
            $where .= " AND $labels_table.context='$context'";
        }

        $user_id =  $_SESSION['adminData']['user_id'];
        if ($user_id) {
            $where .= " AND $labels_table.user_id=$user_id";
        }

      /*  $label_ids = "label_ids";
        if ($label_ids) {
            $where .= " OR $labels_table.id IN($label_ids)";
        }
*/
        $sql = "SELECT $labels_table.*
        FROM $labels_table
        WHERE $labels_table.deleted=0 $where 
        ORDER BY $labels_table.id DESC";
        //echo $sql;
        return $this->db->query($sql);
    }

    function label_group_list($label_ids = "") {
        if (preg_match('/[A-Za-z]/', $label_ids)) {
            //strings found, prepare class object with values
            $result = new stdClass();
            $result->label_group_name = $label_ids;
            return $result;
        } else {
            $labels_table = $this->db->dbprefix('labels');

            $sql = "SELECT GROUP_CONCAT(' ', $labels_table.title) AS label_group_name
            FROM $labels_table
            WHERE FIND_IN_SET($labels_table.id, '$label_ids')";
            return $this->db->query($sql)->row();
        }
    }

    function is_label_exists($id = 0, $type = "") {
        if ($id && $type) {
            $table = $this->db->dbprefix($type);

            $sql = "SELECT COUNT($table.id) AS existing_labels FROM $table WHERE $table.deleted=0 AND $table.labels REGEXP '[[:<:]]" . $id . "[[:>:]]'";

            return $this->db->query($sql)->row()->existing_labels;
            //$datares = $this->db->query($sql)->row()->existing_labels;
            /*echo "<pre>";
            print_r($datares);
            die();*/
        }/*else{
            echo "sah";
        }*/
    }
    
    
     function saveCalenderEventsofLeads($leadid) {
          $UserSelected      = $_POST['users'];
       if ($_SESSION['adminData']['role_name'] == "Admin"){
            if($UserSelected!==''){
                $userid      = $_POST['users'];
            }else{
                $userid = $_SESSION['adminData']['user_id'];
            }
        }else{
             $userid = $_SESSION['adminData']['user_id'];
        }
    $title = $_POST['title'];
	$start = $_POST['start'];
	$end = $_POST['end'];
	$color = $_POST['color'];
         
         $title = str_replace("'", "\\'", $title);
         $stringDesc = str_replace("'", "\\'", $this->input->post('description'));
      
             $start_date = $this->input->post('start_date');
         
                $task_event_data = array(
                "title" => $title,
                "description" => trim(preg_replace('/\s\s+/', ' ',$stringDesc)),
                "start" => $start,
                "end" => $end,
                "color" => $color,
                 "eventstatus" => 'Pending',
                "created_by" => $userid,
                "client_id" => $leadid,
                );

            $this->load->model('Mods');
            $save_id = $this->Mods->single_insert('events', $task_event_data);

            if ($save_id) {
              redirect('Mod/EventsTasksWithLeads/'.$leadid);
            } else {
                redirect('Mod/EventsTasksWithLeads/'.$leadid);
            }
        }
    
    function saveCalenderEvents() {         
               $title      = $_POST['title'];
	           $start      = $_POST['start'];
	           $end        = $_POST['end'];
	           $color      = $_POST['color'];
            $UserSelected      = $_POST['users'];
        if ($_SESSION['adminData']['role_name'] == "Admin"){
            if($UserSelected!==''){
                $userid      = $_POST['users'];
            }else{
                $userid = $_SESSION['adminData']['user_id'];
            }
        }else{
             $userid = $_SESSION['adminData']['user_id'];
        }
            
             $start_date = $this->input->post('start_date');
        
         $title = str_replace("'", "\\'", $title);
         $stringDesc = str_replace("'", "\\'", $this->input->post('description'));
        
             $task_event_data = array(
                "title" => $title,
                "description" => trim(preg_replace('/\s\s+/', ' ',$stringDesc)),
                "start" => $start,
                "end" => $end,
                "color" => $color,
                "eventstatus" => 'Pending',
                "created_by" => $userid,
            );
            
            $this->load->model('Mods');
            $save_id = $this->Mods->single_insert('events', $task_event_data);

            if ($save_id) {
              redirect('Mod/tasks_events_calendar');
            } else {
                echo json_encode(array("success" => false, 'message' => 'error_occurred'));
            }
        }
     function EditEventsDate() { 
        $id = $_POST['Event'][0];
	   $start = $_POST['Event'][1];
	   $end = $_POST['Event'][2];
            $userid = $_SESSION['adminData']['user_id'];
            $event_dataDate = array(
                "start" => $start,
                "end" => $end,
            );

    if (isset($_POST['Event'][0]) && isset($_POST['Event'][1]) && isset($_POST['Event'][2])){
        $this->load->model('Mods');
        $update = $this->Mods->update($table_name = 'events', $conditionField = array('id' => $id), $id = $id, $data = $event_dataDate);
        if($update){
              echo "OK";
            } 
        }else{
            echo 'Erreur execute';
        }
          
    }
    function getCalandersOfusers($id = 0) {
        if(isset($_POST['slectedusers'])){
            $userIds = implode(",", $_POST['slectedusers']);
             $sql_EvUsers       = "SELECT id, title, start, end, color FROM events WHERE created_by in (" . $userIds . ")";
            $users_data  = $this->db->query($sql_EvUsers)->result();
           //echo $sql_camp;
             $view_data['Usersevents'] = $users_data;
            //echo $userIds;
            }
    }
    function EditEntireEventsData($EventUserID = 0) {
        
         if ($_SESSION['adminData']['role_name'] == "Admin"){
                if($UserSelected!==''){
                    $userid      = $_POST['users'];
                }else{
                    $userid = $_SESSION['adminData']['user_id'];
                }
        }else{
                $userid = $_SESSION['adminData']['user_id'];
        }
        
        $this->load->model('Mods');
        if (isset($_POST['delete']) && isset($_POST['id'])){
            /*$id = $_POST['id'];
            $del = $this->Mods->delete_single($companyId = $id, $conditionField = 'id', $table_name = 'events');
            if($del){
                  redirect('Mod/tasks_events_calendar');
            }*/
        }elseif(isset($_POST['title']) && isset($_POST['color']) && isset($_POST['id'])){
            $id = $_POST['id'];
            $title = $_POST['title'];
            $color = $_POST['color'];
            if($EventUserID){
                if($EventUserID == 0){
                    $title = $_POST['title'];
                    $userid = $_SESSION['adminData']['user_id'];
                }else{
                     $sql_Users       = "SELECT id, userName FROM users WHERE id = $EventUserID";
                     $users_data  = $this->db->query($sql_Users)->result();
                     $RemoveName  = $users_data[0]->userName;
                     $RemoveName  = '('.$RemoveName.')';
                    // Given string 
                    //$str = "(Muhammadayyazs) some settings"; 
                    $str = $title;
                    // Word to be replaced 
                    $w1 = $RemoveName; 

                    // Replaced by 
                    $w2 = ""; 

                    // Using str_replace() function 
                    // to replace the word 
                    $str = str_replace($w1, $w2, $str); 
                    // $str = str_replace('--', $RemoveName, $title); 
                     $title = $str; 
                    //
                    if ($_SESSION['adminData']['role_name'] == "Admin"){
                        if($UserSelected!==''){
                            $userid = $_POST['users'];
                        }else{
                            $userid = $_SESSION['adminData']['user_id'];
                        }
                    }else{
                            $userid = $_SESSION['adminData']['user_id'];
                    }
                }
            }
           // $userid = $_SESSION['adminData']['user_id'];
            $EventStatus = $this->input->post('eventstatus');
            if($EventStatus == "Done"){
                $color = "#81948a";
            }
         $title = str_replace("'", "\\'", $title);
         $stringDesc = str_replace("'", "\\'", $this->input->post('description'));
          if($userid){
               $event_dataDate = array(
                    "title" => $title,
                    "color" => $color,
                    "eventstatus" => $this->input->post('eventstatus'),
                    "description" => trim(preg_replace('/\s\s+/', ' ',$stringDesc)),
                    "created_by" => $userid,
                    );
          }else{
               $event_dataDate = array(
                    "title" => $title,
                    "color" => $color,
                    "eventstatus" => $this->input->post('eventstatus'),
                    "description" => trim(preg_replace('/\s\s+/', ' ',$stringDesc)),
                    );
            }
        $update = $this->Mods->update($table_name = 'events', $conditionField = array('id' => $id), $id = $id, $data = $event_dataDate);
            if($update){
                  redirect('Mod/tasks_events_calendar');
            }
        }
        
    }
    /*emails*/
    function email_settings($param1 = 1, $param2 = '')
    {
        if ($param1 == 'do_update') {
            $this->save_email_template($param2);
            //$this->session->set_flashdata('flash_message', 'email template updated');
            redirect(site_url('Mod/email_settings'), 'refresh');
        }
        $this->load->library('ckeditor');
		$this->load->library('ckfinder');
        $this->ckeditor->basePath = base_url().'assets/ckeditor/';
		$this->ckeditor->config['toolbar'] = array(
	array( 'Source', '-', 'Bold', 'Italic', 'Underline', '-','Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo','-','NumberedList','BulletedList','-','Link','Unlink','-','TextColor','Format','Font','FontSize'));
		$this->ckeditor->config['language'] = 'en';
		$this->ckeditor->config['allowedContent'] = true;
        $page_data['current_email_template_id'] = $param1;
        $page_data['page_name']                 = 'email_settings';
        $page_data['page_title']                = 'email template settings';
       /* echo "<pre>";
        print_r($page_data);
        die();*/
        $this->headerV($this->title = "View Activity");
        $this->load->view('Mod/emails/emailsettings', $page_data);
        $this->load->view('Mod/footer/footer');
    }
    function send_emailsToSelectedClient($id)
	{
        $task = 'new_project_opening';
       // $this->load->library('email');
        $email_sub     =   $this->db->get_where('email_template' , array('task' => $task))->row()->subject;
        $email_msg      =   $this->db->get_where('email_template' , array('task' => $task))->row()->body;
        $staff_id = $id;
		/*$data['row'] = $this->inquiries_model->get_visitors_details($id);*/
        $leads_data  = ($staff_id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $staff_id) : '';
		if (empty($leads_data))
		{
			show_404();
		}
		//$this->email_model->notify_email('new_project_opening', $staff_id);
        $CLIENT_FNAME     =   $this->db->get_where('leads' , array('lead_id' => $staff_id))->row()->first_name;
        $CLIENT_LNAME     =   $this->db->get_where('leads' , array('lead_id' => $staff_id))->row()->last_name;
        $CLIENT_EMAIL    =   $this->db->get_where('leads' , array('lead_id' => $staff_id))->row()->email;
        $SYSTEM_URL     =   site_url();
        $CLIENT_FULL_NAME = $CLIENT_FNAME.' '.$CLIENT_LNAME;
        $email_msg      =   str_replace('[CLIENT_NAME]' , $CLIENT_FULL_NAME , $email_msg);
           // $email_msg      =   str_replace('[SYSTEM_URL]' , $SYSTEM_URL , $email_msg);
        $email_msg      =   str_replace('[STAFF_EMAIL]' , $CLIENT_EMAIL , $email_msg);
        //$email_msg      =   str_replace('[PROJECT_LINK]' , $STAFF_PASSWORD , $email_msg);

        $email_to       =   $CLIENT_EMAIL;
            
        //$yes = $this->send_smtp_mail($email_msg , $email_sub , $email_to);
                try {
                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;
                        //Recipients
                        $this->mailer->setFrom('kwikcarhire12@gmail.com', $email_sub);
                        $this->mailer->addBCC('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->addAddress($email_to);
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = $email_sub;
                        $this->mailer->Body = $email_msg;
                        
                        if(!empty($email_to)){
                            $this->mailer->CharSet = 'UTF-8';
                             $this->mailer->send();
                            $this->session->set_flashdata('SuccessEmail', 'Send.');
                            redirect(base_url('Mod/manageLeads'));
                        } 
                        
                    } catch (Exception $e) {
                        
                    }
        /*echo "<pre>";
        print_r($data['row']);
        die();*/
				
		redirect('Mod/manageLeads');		
	}
    public function SendMultilpleLeadEmailsToclients(){
        $SelectedLeads = unserialize(base64_decode($_POST['Multipleleads_Id']));
        date_default_timezone_set('Europe/London');
        $task = 'new_project_opening';
        //$this->load->library('email');
        $email_sub     =   $this->db->get_where('email_template' , array('task' => $task))->row()->subject;
        $email_msg      =   $this->db->get_where('email_template' , array('task' => $task))->row()->body;
        foreach($SelectedLeads as $singlead){
                $id = $singlead;
                $sqlusersClinets = "select first_name, last_name, email from leads where lead_id = " . $id;
                $usersClients = $this->db->query($sqlusersClinets)->result();
                $fullname = $usersClients[0]->first_name.' '.$usersClients[0]->last_name;    
                
                $email_to           = $usersClients[0]->email;
                //echo $email_to.'<br>';
                $email_sub        = $fullname;
                $email_body        = $fullname;
                $email_msg      =   str_replace('[CLIENT_NAME]' , $fullname , $email_msg);
                $email_msg      =   str_replace('[STAFF_EMAIL]' , $email_to , $email_msg);
                $email_body  =  $email_msg;
                
               // $email_body        = "Hi ".$fullname.",<br>".' My email '.$email_to;
                $this->sendmyemails($email_to,$email_to,$email_sub,$email_body);  
                
                }
        $this->session->set_flashdata('SuccessEmail', 'Send.');
        redirect(base_url('Mod/manageLeads'));
        //redirect('Mod/manageLeads');
     }
     /////email template settings////
    function save_email_template($email_template_id)
    {
        $data['subject'] = $this->input->post('subject');
        $data['body']    = $this->input->post('body');

        $this->db->where('email_template_id', $email_template_id);
        $this->db->update('email_template', $data);
    }
        /*emails*/
    public function view_activity($id){
        
        $this->load->model('Mods');
        
        $activity_data  = ($id) ? $this->Mods->getIdByName($table_name = 'user_activities', $condition = 'id', $id) : '';
        $user_data      = ($activity_data) ? $this->Mods->getIdByName($table_name = 'users', $condition = 'id', $activity_data[0]->user_id) : '';
        $company_data   = ($activity_data[0]->company_id) ? $this->Mods->getIdByName($table_name = 'companies', $condition = 'id', $activity_data[0]->company_id) : 'All';

        $activity_data[0]->user_id      = $user_data[0]->userName;        
        $activity_data[0]->company_id   = ($company_data == "All") ? $company_data : $company_data[0]->company_name;        
        
        $this->data['activity_data'] = $activity_data[0];
        $this->headerV($this->title = "View Activity");
        $this->load->view('Mod/leads/view_activity', $this->data);
        $this->load->view('Mod/footer/footer');
        
    }

    public function adminLoadActivitiesData() {

        $aColumns = array(
                "user_activities.id", 
                "user_activities.user_id", 
                "users.userName",
                "user_activities.company_id", 
                "companies.company_name",
                "user_activities.database_table_name", 
                "user_activities.module_name", 
                "user_activities.module_id", 
                "user_activities.note", 
                "user_activities.ip_address", 
                "user_activities.platform", 
                "user_activities.browser", 
                "user_activities.browser_version", 
                "user_activities.device_type", 
                "user_activities.created_at"
        );

        $aColumns_for_sorting = array(                
                "user_activities.id", 
                "users.userName",
                "companies.company_name",
                "user_activities.note", 
                "user_activities.created_at"
        );
        
        $aColumns_for_loop = array(
                "userName",
                "company_name",
                "note", 
//                "ip_address", 
                "created_at"            
        );

        /* Indexed column (used for fast and accurate table cardinality) */
        
        $sIndexColumn = "id";

        /* DB table to use */
        $sTable = "user_activities";


        /*
         * Paging
         */
        
        $sLimit = "";
        if (isset($_GET['iDisplayStart']) && $_GET['iDisplayLength'] != '-1') {
            $sLimit = "LIMIT " . $_GET['iDisplayStart'] . ", " .
                    @$_GET['iDisplayLength'];
        }


        /*0
         * Ordering
         */
        $sOrder = "";
        if (isset($_GET['iSortCol_0'])) {
            $sOrder = "ORDER BY  ";
            for ($i = 0; $i < intval($_GET['iSortingCols']); $i++) {
                if ($_GET['bSortable_' . intval($_GET['iSortCol_' . $i])] == "true") {
                    $sOrder .= $aColumns_for_sorting[intval($_GET['iSortCol_' . $i])] . "
				 	" . $_GET['sSortDir_' . $i] . ", ";
                }
            }

            $sOrder = substr_replace($sOrder, "", -2);
            if ($sOrder == "ORDER BY") {
                $sOrder = "";
            }
        }

//        echo "<pre>";
//        print_r($_GET);
//        print_r($aColumns_for_sorting);
//        die();

        /*
         * Filtering
         * NOTE this does not match the built-in DataTables filtering which does it
         * word by word on any field. It's possible to do here, but concerned about efficiency
         * on very large tables, and MySQL's regex functionality is very limited
         */
        
        $sWhere = "";
        if (@$_GET['sSearch'] != "") {
            $sWhere = "WHERE (";
            for ($i = 0; $i < count($aColumns); $i++) {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch'] . "%' OR ";
            }
            $sWhere = substr_replace($sWhere, "", -3);
            $sWhere .= ')';
            
//            $sWhere .= "AND  id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }           
            
            
            $sWhere .=  "";
        } else {
            
//            $sWhere = "WHERE id='" . 1 . "' ";


        if ($_SESSION['adminData']['role_name'] != "Admin"){
            
            $company_id = $_SESSION['adminData']['company_id'];
            $user_id = $_SESSION['adminData']['user_id'];
            $module_permissions = $_SESSION['adminData']['Leads'];
            
            $sWhere .= "AND user_id='$user_id'";            
            
        }                       
            
        }
        
        /* Individual column filtering */
        for ($i = 0; $i < count($aColumns); $i++) {
            if (@$_GET['bSearchable_' . $i] == "true" && $_GET['sSearch_' . $i] != '') {
                $sWhere .= $aColumns[$i] . " LIKE '%" . $_GET['sSearch_' . $i] . "%'  ";
            }
        }

        /*
         * SQL queries
         * Get data to display
         */
        
        $joins = "  left JOIN users ON users.id = user_activities.user_id 
                    left JOIN companies ON companies.id = user_activities.company_id ";
                    
        
        $sQuery = "SELECT DISTINCT SQL_CALC_FOUND_ROWS " . implode(", ", array_filter($aColumns)) .
                " FROM " . $sTable . $joins. ' ' . $sWhere . ' ' . $sOrder . ' ' . $sLimit;
        
        $rResult = $this->db->query($sQuery)->result_array();
        
        /* Data set length after filtering */
        $sQuery = "
		SELECT FOUND_ROWS() as total_found
	";

        $aResultFilterTotal = $this->db->query($sQuery)->result_array();

        
//        print_r($aResultFilterTotal);
//        die();
        
        
        $iFilteredTotal = @$aResultFilterTotal[0]['total_found'];

        /* Total data set length */
        $sQuery = "
		SELECT COUNT(" . $sIndexColumn . ") as result_total
		FROM   $sTable
	";

        $aResultTotal = $this->db->query($sQuery)->result_array();
        
        $iTotal = $aResultTotal[0]['result_total'];

        

        /*
         * Output
         */
        $output = array(
            "sEcho" => intval(@$_GET['sEcho']),
            "iTotalRecords" => $iTotal,
            "iTotalDisplayRecords" => $iFilteredTotal,
            "aaData" => array()
        );
        
        $baseScriptUrl = '';
        $x = 1;
        
        foreach ($rResult as $aRow) {
            $row = array();

                $aRow['created_at'] = date("d-m-Y H:i:s", strtotime($aRow['created_at']));
                $aRow['company_name'] = ($aRow['company_name']) ? $aRow['company_name'] : 'All';
                $row[] = $x;
                        
            for ($i = 0; $i < count($aColumns_for_loop); $i++) {

                if ($aColumns_for_loop[$i] != '') {
                    $row[] = $aRow[$aColumns_for_loop[$i]];
                }
            }

            $view               = ($_SESSION['adminData']['role_name'] == "Admin") ? '<a title="View Lead" style="padding: 5px 5px 5px 5px" href="' . base_url('Mod/view_activity/') . $aRow['id'] . '" type="button" class="btn" ><i class="ti-search"></i></a>' : '';
            $row[]              = $view ;

//                                <a href="' . base_url('Mod/deleteCompany/') . $aRow['id'] . '" type="button" class="btn btn-info btn-outline btn-circle btn-lg m-r-5" id="sa-params" ><i class="ti-trash"></i></a>                                                

            
            $output['aaData'][] = $row;
            $x++;
//            break;
        }
            
//        echo "<pre>";
//        print_r($output);
        
        echo json_encode($output);
        
    }

//MIB Claims and CICA  Functions
    
    // MIB Claim Modules starts from here //
    
    public function addMIBClaims($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();
            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "MIB Claims");
            $this->load->view('Mod/leads/addMIBClaims');
            $this->load->view('Mod/footer/footer');
        }else{
            show_404(); 
        }
    }
    
    public function createMIBClaims($id = 0) {
        if ($this->form_validation->run('addMIB') == FALSE) {
            $this->addMIBClaims($id);
        } else {
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('VehicleRegistrationNumber')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('RegistrationTP')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $hirePeriodstart      = !empty($_POST['hirePeriodstart']) ? $_POST['hirePeriodstart'] : '';
            $hirePeriodstart               = str_replace('/', '-', $hirePeriodstart);
            $Date_OfPeriodstart   = date("Y-m-d", strtotime($hirePeriodstart));
            
            $hireperiodend      = !empty($_POST['hireperiodend']) ? $_POST['hireperiodend'] : '';
            $hireperiodend               = str_replace('/', '-', $hireperiodend);
            $date_Ofhireperiodend   = date("Y-m-d", strtotime($hireperiodend));
            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);
            
$duplicateLead = "";            
        
if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
             

    
}else{
            

            
        $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        OR 
                                            user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        OR 
                                            user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
}
    $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone' ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";
        /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'insode empty';*/
    } else{
        /*echo '<pre>';*/
        $StatusofPhone1Duplication = 0;
        /*echo 'outide empty';*/
    }  
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
            
    if(!empty($ClientCarRegistrationNumb)){
      /*duplicate Client Vehicle*/
    $sqlCheckDuplicateVehicle = "SELECT count(*) AS 'CountoFDuplicateVehicl' 
                                FROM `leads` WHERE client_car_registration = '$ClientCarRegistrationNumb' 
                                OR tp_car_registration = '$ClientCarRegistrationNumb' ";
    $CheckDuplicateVehicle    = $this->db->query($sqlCheckDuplicateVehicle)->result_array();
    $duplicateLeadofVehicle   = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? "1" : " ";
   
    //$duplicateLeadofVehiclemessg      = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? " Both are checked 1" : "";
    $StatusofVehicleRegistrationDuplication = $duplicateLeadofVehicle;
    }    
    
    if(!empty($TPCarRegistrationNumb)){
        /*duplicate Client TPVehicle*/
    $sqlCheckDuplicateVehicleTP = "SELECT count(*) AS 'CountoFDuplicateVehiclTP' 
                                FROM `leads` WHERE client_car_registration = '$TPCarRegistrationNumb' 
                                OR tp_car_registration = '$TPCarRegistrationNumb' ";
    $CheckDuplicateVehicleTP    = $this->db->query($sqlCheckDuplicateVehicleTP)->result_array();
    $duplicateLeadofVehicleTP   = ($CheckDuplicateVehicleTP[0]['CountoFDuplicateVehiclTP'] > 0) ? "1" : " ";
    $StatusofTPVehicleRegistrationDuplication = $duplicateLeadofVehicleTP; 
    }       
    

            if (empty($duplicateLead) || !empty($duplicateLead)){
            if((!empty($ClientCarRegistrationNumb))&&(!empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    tp_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                )
                                OR(
                                    (tp_car_registration = '$TPCarRegistrationNumb' OR client_car_registration = '$TPCarRegistrationNumb' ) AND (campaign_id = $campaign_id)
                                    )
                                OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
            else{
                if(!empty($ClientCarRegistrationNumb)){
                //echo 'inside client car='.$ClientCarRegistrationNumb;
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
                if(!empty($TPCarRegistrationNumb)){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
             }
            if((empty($ClientCarRegistrationNumb))&&(empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                )OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
                }

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  
                      
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                     <key>YyvZkbD6LfTSIOTp0PXrAIevWvUJaSBz</key>
                                    <leadgroup>50960</leadgroup>
                                    <site>0</site>
                                    <introducer>0</introducer>
                                    <source>MIB Claims</source>
                                    <medium>MIB Claims</medium>
                                    <term>MIB Claims</term>
                                    <title>" . $this->input->post('title') . "</title>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <jobtitle>" . $BDMName . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('HowinvoledInAccident') . "</data1>
                                    <data2>" . $this->input->post('comprehensiveInsurance') . "</data2>
                                    <data3>" . $this->input->post('DamageOfVehicle') . "</data3>
                                    <data4>" . $this->input->post('DamageOfVehicleExcess') . "</data4>
                                    <data5>" . $this->input->post('VehicleRegistrationNumber') . "</data5>
                                    <data6>" . $this->input->post('Makemodelofvehicle') . "</data6>
                                    <data7>" . $this->input->post('ExcessAmount') . "</data7>
                                    <data8>" . $this->input->post('NameofcompanyHiring') . "</data8>
                                    <data9>" . $hirePeriodstartDate . "</data9>
                                    <data10>" . $this->input->post('thehireongoing') . "</data10>
                                    <data11>" . $date_Ofhireperiodend . "</data11>
                                    <data12>" . $this->input->post('EmploymentStatus') . "</data12>
                                    <data13>" . $this->input->post('occupationonAccident') . "</data13>
                                    <data14>" . $this->input->post('AbsentfromWork') . "</data14>
                                    <data15>" . $this->input->post('stilloffWork') . "</data15>
                                    <data16>" . $this->input->post('YortotallosinEaring') . "</data16>
                                    <data17>" . $this->input->post('AbouttheDamagedProperty') . "</data17>
                                    <data18>" . $this->input->post('isDamagesRepaired') . "</data18>
                                    <data19>" . $this->input->post('RepairorReplacement') . "</data19>
                                    <data20>" . $this->input->post('coveredbyaninsurancePolicy') . "</data20>
                                    <data21>" . $this->input->post('detailsforthedamagedProperty') . "</data21>
                                    <data22>" . $this->input->post('lossestotheirClaim') . "</data22>
                                    <data23>" . $this->input->post('Yudriverdetails') . "</data23>
                                    <data24>" . $this->input->post('Fulldetails') . "</data24>
                                    <data25>" . $this->input->post('additionalDetails') . "</data25>
                                    <data26>" . $this->input->post('DiffrentDriverthenOwner') . "</data26>
                                    <data27>" . $this->input->post('RegistrationTP') . "</data27>
                                    <data28>" . $this->input->post('MademodelColor') . "</data28>
                                    <data29>" . $this->input->post('DamagedAreasOfVehcile') . "</data29>
                                    <data30>" . $this->input->post('AwareOfVehcileinsurer') . "</data30>
                                    <data31>" . $this->input->post('NameofInsuer') . "</data31>
                                    <data32>" . $date_of_accident . "</data32>
                                    <data33>" . $this->input->post('TimeofAccident') . "</data33>
                                    <data34>" . $this->input->post('AccidentCricumstances') . "</data34>
                                    <data35>" . $this->input->post('CountryofAccident') . "</data35>
                                    <data36>" . $this->input->post('ExactLocationofaccident') . "</data36>
                                    <data37>" . $this->input->post('AbouttheAccidentLocation') . "</data37>
                                    <data38>" . $this->input->post('PoliceAttendtheAccident') . "</data38>
                                    <data39>" . $this->input->post('accidentReportedPolice') . "</data39>
                                    <data40>" . $this->input->post('witnessdetailsknown') . "</data40>
                                    <data41>" . $this->input->post('FullWitnessesDetails') . "</data41>
                                    <data42>" . $this->input->post('witnessBeforeAccident') . "</data42>
                                    <data43>" . $this->input->post('relationshipOfClient') . "</data43>
                                    <data44>" . $this->input->post('NINumber') . "</data44>
                                    <data45>" . $this->input->post('InjuriesSuffer') . "</data45>
                                    <data46>" . $this->input->post('Medicalattention') . "</data46>
                                    <data47>" . $this->input->post('MedicationUndergo') . "</data47>
                                    <data48>" . $this->input->post('Hospitalattended') . "</data48>
                                    <data49>" . $this->input->post('GPDetails') . "</data49>
                                  </lead>
                                </data>";

            
            $xml_data = str_replace('&', '&#38;', $xml_data);
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_ENCODING, "");
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);
    
            $xml = simplexml_load_string($output, "SimpleXMLElement", LIBXML_NOCDATA);
            $json = json_encode($xml);
            $outputArray = json_decode($json, TRUE);
            
            $api_ids = array('consumercreditjustice_flg' => $lead_id);
            /* ---------------------------flg hit end------------------ */

  //         if ('OK' == 'OK') {
           if ($hit_message == 'OK') {
               $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'title' => $this->input->post('title'),
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    "passenger_4_position_in_car" => $this->input->post('HowinvoledInAccident'),
                    'tp_insurer_details_name' => $date_hireperiodend,
                    'accident_circumstances' => $this->input->post('AccidentCricumstances'),
                    'client_status_in_accident' => $this->input->post('EmploymentStatus'),
                    'are_you_a_litigation_friend' => $this->input->post('comprehensiveInsurance'),
                    'replacement_invoice_number' => $this->input->post('AbsentfromWork'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('FullWitnessesDetails'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('witnessdetailsknown'),
                    'did_you_seek_medical_attention' => $this->input->post('Medicalattention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('AbouttheDamagedProperty'),
                    'client_car_registration' => $ClientCarRegistrationNumb,
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'tp_car_make_model' => $this->input->post('Makemodelofvehicle'),
                    'have_you_claimed_before' => $this->input->post('stilloffWork'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('YortotallosinEaring'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('occupationonAccident'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('DamageOfVehicle'),
                    'were_the_police_involved' => $this->input->post('PoliceAttendtheAccident'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('AbouttheAccidentLocation'),
                    'what_was_the_weather_like' => $this->input->post('DamageOfVehicleExcess'),
                    'how_many_occupants_in_the_vehicle' => $hirePeriodstartDate,
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ExcessAmount'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('accidentReportedPolice'),
                    'employers_name_address_telephone_number' => $this->input->post('NameofcompanyHiring'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('thehireongoing'),
                    'is_injury_on_going_injury_physio' => $this->input->post('hireperiodend'),
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 231 : 227,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "number_of_passengers" => $this->input->post('isDamagesRepaired'),
                    "passenger_1" => $this->input->post('RepairorReplacement'),
                    "passenger_1_relationship" => $this->input->post('coveredbyaninsurancePolicy'),
                    "passenger_1_date_of_birth" => $this->input->post('detailsforthedamagedProperty'),
                    "passenger_1_position_in_car" => $this->input->post('lossestotheirClaim'),
                    "passenger_2" => $this->input->post('Yudriverdetails'),
                    "passenger_2_relationship" => $this->input->post('Fulldetails'),
                    "passenger_2_date_of_birth" => $this->input->post('additionalDetails'),
                    "passenger_2_position_in_car" => $this->input->post('DiffrentDriverthenOwner'),
                    "passenger_3" => $this->input->post('MademodelColor'),
                    "passenger_3_relationship" => $this->input->post('DamagedAreasOfVehcile'),
                    "passenger_3_date_of_birth" => $this->input->post('AwareOfVehcileinsurer'),
                    "passenger_3_position_in_car" => $this->input->post('NameofInsuer'),
                    "passenger_4" => $this->input->post('AccidentCricumstances'),
                    "passenger_4_relationship" => $this->input->post('CountryofAccident'),
                    "passenger_4_date_of_birth" => $this->input->post('ExactLocationofaccident'),
                    "passenger_5" => $this->input->post('FullWitnessesDetails'),
                    "passenger_5_relationship" => $this->input->post('witnessBeforeAccident'),
                    "passenger_5_date_of_birth" => $this->input->post('relationshipOfClient'),
                    "passenger_5_position_in_car" => $this->input->post('InjuriesSuffer'),
                    "passenger_6" => $this->input->post('Medicalattention'),
                    "passenger_6_relationship" => $this->input->post('MedicationUndergo'),
                    "passenger_6_date_of_birth" => $this->input->post('Hospitalattended'),
                    "passenger_6_position_in_car" => $this->input->post('GPDetails'),
                    'api_inseration_id' => json_encode($api_ids),
                    "reference_id" => $reference_id,
                    "duplicateLeadofEmail" => $StatusofEmailDuplication,
                    "duplicateLeadofPhone" => $StatusofPhoneDuplication,
                    "duplicateLeadofPhone1" => $StatusofPhone1Duplication,
                    "duplicateLeadofpost_code" => $StatusofPostcodDuplication,
                    "duplicateLeadofVehicle" => $StatusofVehicleRegistrationDuplication,
                    "duplicateLeadofVehicleTP" => $StatusofTPVehicleRegistrationDuplication,
                    "flg_ccj_id" => $lead_ccj_id,
                    'created_at' => date("y-m-d H:i:s")
                );

              /* echo "<pre>";
                print_r($leadData);
               die(); */               
                
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
                
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }


                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone new MIB lead.' : 'User add new MIB lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'New MIB Lead');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW MIB Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW MIB Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>FLG Insertion ID</td>
                                                    <td>' . $getleadData[0]->api_inseration_id  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Added At</td>
                                                    <td>' . $getleadData[0]->created_at  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {

                            $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany    = json_decode(json_encode($item), 1);
                
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                
                $this->addMIBClaims($id);
                
                }
            }
        }
    }
    //Update Campaign leads//
    
    public function updateMIBCampaignLead(){
        $campaignflg = 1;
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
        
            if($this->form_validation->run('updateLead') == FALSE) {
            $this->editLead($id);
            $campaignflg = 0;
            }
        else{

            date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id=$userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            
            $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            $flg_ros_id      = $lead[0]->flg_ros_id;
          
            /*start of  of update checks*/
            $duplicateLead = "";      
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            
            $date_hirePeriodstart      = !empty($_POST['hirePeriodstart']) ? $_POST['hirePeriodstart'] : '';
            $date_hirePeriodstart               = str_replace('/', '-', $date_hirePeriodstart);
            $date_hirePeriodstart   = date("Y-m-d", strtotime($date_hirePeriodstart));
            
            $date_hireperiodend      = !empty($_POST['hireperiodend']) ? $_POST['hireperiodend'] : '';
            $date_hireperiodend               = str_replace('/', '-', $date_hireperiodend);
            $date_hireperiodend   = date("Y-m-d", strtotime($date_hireperiodend));
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $company_id);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date)); 
           
            if ($lead_campaign[0]->campaign_name == "MIB Claims"){
                $leadData = array(
                    'title' => $this->input->post('title'),
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    "passenger_4_position_in_car" => $this->input->post('HowinvoledInAccident'),
                    'tp_insurer_details_name' => $this->input->post('hireperiodend'),
                    'accident_circumstances' => $this->input->post('AccidentCricumstances'),
                    'client_status_in_accident' => $this->input->post('EmploymentStatus'),
                    'are_you_a_litigation_friend' => $this->input->post('comprehensiveInsurance'),
                    'replacement_invoice_number' => $this->input->post('AbsentfromWork'),
                    'if_litigation_friend_name_and_date_of_birth_of_the_claimant' => $this->input->post('FullWitnessesDetails'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('witnessdetailsknown'),
                    'did_you_seek_medical_attention' => $this->input->post('Medicalattention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('AbouttheDamagedProperty'),
                    'client_car_registration' => $ClientCarRegistrationNumb,
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'tp_car_make_model' => $this->input->post('Makemodelofvehicle'),
                    'have_you_claimed_before' => $this->input->post('stilloffWork'),
                    'do_you_wish_to_make_a_claim' => $this->input->post('YortotallosinEaring'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'preferred_time_of_contact' => $this->input->post('PreferredtimeofContact'),
                    'clients_occupation' => $this->input->post('occupationonAccident'),
                    'ni_number' => $this->input->post('NINumber'),
                    'was_the_client_vehicle_repaired_or_total_loss' => $this->input->post('WastheClientVehiclerepairedortotalloss'),
                    'has_the_client_been_paid_out_for_his_her_vehicle_damage' => $this->input->post('DamageOfVehicle'),
                    'were_the_police_involved' => $this->input->post('PoliceAttendtheAccident'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('AbouttheAccidentLocation'),
                    'what_was_the_weather_like' => $this->input->post('DamageOfVehicleExcess'),
                    'how_many_occupants_in_the_vehicle' => $this->input->post('hirePeriodstart'),
                    'preferred_time_to_call' => $this->input->post('PreferredTimetoCall'),
                    'client_password' => $this->input->post('ExcessAmount'),
                    'was_accident_reported_or_recorded_in_the_accident_book' => $this->input->post('accidentReportedPolice'),
                    'employers_name_address_telephone_number' => $this->input->post('NameofcompanyHiring'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('thehireongoing'),
                    'is_injury_on_going_injury_physio' => $this->input->post('hireperiodend'),
                    "number_of_passengers" => $this->input->post('isDamagesRepaired'),
                    "passenger_1" => $this->input->post('RepairorReplacement'),
                    "passenger_1_relationship" => $this->input->post('coveredbyaninsurancePolicy'),
                    "passenger_1_date_of_birth" => $this->input->post('detailsforthedamagedProperty'),
                    "passenger_1_position_in_car" => $this->input->post('lossestotheirClaim'),
                    "passenger_2" => $this->input->post('Yudriverdetails'),
                    "passenger_2_relationship" => $this->input->post('Fulldetails'),
                    "passenger_2_date_of_birth" => $this->input->post('additionalDetails'),
                    "passenger_2_position_in_car" => $this->input->post('DiffrentDriverthenOwner'),
                    "passenger_3" => $this->input->post('MademodelColor'),
                    "passenger_3_relationship" => $this->input->post('DamagedAreasOfVehcile'),
                    "passenger_3_date_of_birth" => $this->input->post('AwareOfVehcileinsurer'),
                    "passenger_3_position_in_car" => $this->input->post('NameofInsuer'),
                    "passenger_4" => $this->input->post('AccidentCricumstances'),
                    "passenger_4_relationship" => $this->input->post('CountryofAccident'),
                    "passenger_4_date_of_birth" => $this->input->post('ExactLocationofaccident'),
                    "passenger_5" => $this->input->post('FullWitnessesDetails'),
                    "passenger_5_relationship" => $this->input->post('witnessBeforeAccident'),
                    "passenger_5_date_of_birth" => $this->input->post('relationshipOfClient'),
                    "passenger_5_position_in_car" => $this->input->post('InjuriesSuffer'),
                    "passenger_6" => $this->input->post('Medicalattention'),
                    "passenger_6_relationship" => $this->input->post('MedicationUndergo'),
                    "passenger_6_date_of_birth" => $this->input->post('Hospitalattended'),
                    "passenger_6_position_in_car" => $this->input->post('GPDetails'),
                    'lead_update_user_id' => $userID,
                    'lead_update_company_id' => $companyId,
                    'updated_at'                    => date("Y-m-d H:i:s")
                );
            }
            
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Lead Updated');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = ' Lead Updated - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Updated Lead </h2>
                                            <p>Please be advised that the following lead has been edited and a change to the lead has been made</p>
                                            <table>
                                                
                                                <tr>
                                                    <td>Email</td>
                                                    <td>'. $this->input->post('email') .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $this->input->post('firstName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $this->input->post('lastName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Phone</td>
                                                    <td>' . $this->input->post('phone1') . '</td>
                                                </tr>
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        $this->mailer->send();
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            /* echo 'after exception Hello';*/
            /*flf update*/
            if($this->input->post('dateOfBirth')=="0000-00-00"){
                $dobDay = 1;
                $dobMonth = 1;
                $dobYear = 1990;
            }else{
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            }
            
            if($lead_campaign[0]->campaign_name == "MIB Claims"){
                    if($flg_ccj_id != NULL){
                    $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead>
                                        <key>YyvZkbD6LfTSIOTp0PXrAIevWvUJaSBz</key>
                                        <id>".$flg_ccj_id."</id>
                                        <title>" . $this->input->post('title') . "</title>
                                        <firstname>" . $this->input->post('firstName') . "</firstname>
                                        <lastname>" . $this->input->post('lastName') . "</lastname>
                                        <company>" . $companyName . "</company>
                                        <jobtitle>" . $BDMName . "</jobtitle>
                                        <phone1>" . $this->input->post('phone1') . "</phone1>
                                        <phone2>" . $this->input->post('phone2') . "</phone2>
                                        <email>" . $this->input->post('email') . "</email>
                                        <address>" . $this->input->post('address') . "</address>
                                        <address2>" . $this->input->post('address2') . "</address2>
                                        <address3>" . $this->input->post('address3') . "</address3>
                                        <towncity>" . $this->input->post('towncity') . "</towncity>
                                        <postcode>" . $this->input->post('postcode') . "</postcode>
                                        <dobday>" . $dobDay . "</dobday>
                                        <dobmonth>" . $dobMonth . "</dobmonth>
                                        <dobyear>" . $dobYear . "</dobyear>
                                        <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                        <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                        <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                        <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                        <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                        <data1>" . $this->input->post('HowinvoledInAccident') . "</data1>
                                        <data2>" . $this->input->post('comprehensiveInsurance') . "</data2>
                                        <data3>" . $this->input->post('DamageOfVehicle') . "</data3>
                                        <data4>" . $this->input->post('DamageOfVehicleExcess') . "</data4>
                                        <data5>" . $this->input->post('VehicleRegistrationNumber') . "</data5>
                                        <data6>" . $this->input->post('Makemodelofvehicle') . "</data6>
                                        <data7>" . $this->input->post('ExcessAmount') . "</data7>
                                        <data8>" . $this->input->post('NameofcompanyHiring') . "</data8>
                                        <data9>" . hirePeriodstart . "</data9>
                                        <data10>" . $this->input->post('thehireongoing') . "</data10>
                                        <data11>" . $date_hireperiodend . "</data11>
                                        <data12>" . $this->input->post('EmploymentStatus') . "</data12>
                                        <data13>" . $this->input->post('occupationonAccident') . "</data13>
                                        <data14>" . $this->input->post('AbsentfromWork') . "</data14>
                                        <data15>" . $this->input->post('stilloffWork') . "</data15>
                                        <data16>" . $this->input->post('YortotallosinEaring') . "</data16>
                                        <data17>" . $this->input->post('AbouttheDamagedProperty') . "</data17>
                                        <data18>" . $this->input->post('isDamagesRepaired') . "</data18>
                                        <data19>" . $this->input->post('RepairorReplacement') . "</data19>
                                        <data20>" . $this->input->post('coveredbyaninsurancePolicy') . "</data20>
                                        <data21>" . $this->input->post('detailsforthedamagedProperty') . "</data21>
                                        <data22>" . $this->input->post('lossestotheirClaim') . "</data22>
                                        <data23>" . $this->input->post('Yudriverdetails') . "</data23>
                                        <data24>" . $this->input->post('Fulldetails') . "</data24>
                                        <data25>" . $this->input->post('additionalDetails') . "</data25>
                                        <data26>" . $this->input->post('DiffrentDriverthenOwner') . "</data26>
                                        <data27>" . $this->input->post('RegistrationTP') . "</data27>
                                        <data28>" . $this->input->post('MademodelColor') . "</data28>
                                        <data29>" . $this->input->post('DamagedAreasOfVehcile') . "</data29>
                                        <data30>" . $this->input->post('AwareOfVehcileinsurer') . "</data30>
                                        <data31>" . $this->input->post('NameofInsuer') . "</data31>
                                        <data32>" . $date_of_accident . "</data32>
                                        <data33>" . $this->input->post('TimeofAccident') . "</data33>
                                        <data34>" . $this->input->post('AccidentCricumstances') . "</data34>
                                        <data35>" . $this->input->post('CountryofAccident') . "</data35>
                                        <data36>" . $this->input->post('ExactLocationofaccident') . "</data36>
                                        <data37>" . $this->input->post('AbouttheAccidentLocation') . "</data37>
                                        <data38>" . $this->input->post('PoliceAttendtheAccident') . "</data38>
                                        <data39>" . $this->input->post('accidentReportedPolice') . "</data39>
                                        <data40>" . $this->input->post('witnessdetailsknown') . "</data40>
                                        <data41>" . $this->input->post('FullWitnessesDetails') . "</data41>
                                        <data42>" . $this->input->post('witnessBeforeAccident') . "</data42>
                                        <data43>" . $this->input->post('relationshipOfClient') . "</data43>
                                        <data44>" . $this->input->post('NINumber') . "</data44>
                                        <data45>" . $this->input->post('InjuriesSuffer') . "</data45>
                                        <data46>" . $this->input->post('Medicalattention') . "</data46>
                                        <data47>" . $this->input->post('MedicationUndergo') . "</data47>
                                        <data48>" . $this->input->post('Hospitalattended') . "</data48>
                                        <data49>" . $this->input->post('GPDetails') . "</data49>
                                      </lead>
                                    </data>";
                             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                            $ch = curl_init($URL);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                            curl_setopt($ch, CURLOPT_POST, 1);
                        $xml_data = str_replace('&', '&#38;', $xml_data);
                            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                                'Content-Type: application/xml',
                                'Content-Length: ' . strlen($xml_data))
                            );
                            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                            $output = curl_exec($ch);
                        }
                    }
            $this->load->model('Mods');
            
            $updatelead = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);
            
            $sqlCheckDuplicateLead = "SELECT count(*) AS 'CountoFDuplicateEntery' FROM `leads` WHERE user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";
            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            
            $duplicateLead = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable, Duplicate Lead Entery Found." : "";
            // if (!empty($duplicateLead)){// $this->session->set_flashdata('duplicateLeadError', $duplicateLead);// $this->addLead($id);// }}
            $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone'  ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";   
       /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'inside not empty';*/
    }else{
       /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'outside empty';*/
        $StatusofPhone1Duplication =0;
    }
    
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
            
    if(!empty($ClientCarRegistrationNumb)){
      /*duplicate Client Vehicle*/
    $sqlCheckDuplicateVehicle = "SELECT count(*) AS 'CountoFDuplicateVehicl' 
                                FROM `leads` WHERE client_car_registration = '$ClientCarRegistrationNumb' 
                                OR tp_car_registration = '$ClientCarRegistrationNumb' ";
    $CheckDuplicateVehicle    = $this->db->query($sqlCheckDuplicateVehicle)->result_array();
    $duplicateLeadofVehicle   = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? "1" : " ";
   
    //$duplicateLeadofVehiclemessg      = ($CheckDuplicateVehicle[0]['CountoFDuplicateVehicl'] > 0) ? " Both are checked 1" : "";
    $StatusofVehicleRegistrationDuplication = $duplicateLeadofVehicle;
    }    
    
    if(!empty($TPCarRegistrationNumb)){
        /*duplicate Client TPVehicle*/
    $sqlCheckDuplicateVehicleTP = "SELECT count(*) AS 'CountoFDuplicateVehiclTP' 
                                FROM `leads` WHERE client_car_registration = '$TPCarRegistrationNumb' 
                                OR tp_car_registration = '$TPCarRegistrationNumb' ";
    $CheckDuplicateVehicleTP    = $this->db->query($sqlCheckDuplicateVehicleTP)->result_array();
    $duplicateLeadofVehicleTP   = ($CheckDuplicateVehicleTP[0]['CountoFDuplicateVehiclTP'] > 0) ? "1" : " ";
    $StatusofTPVehicleRegistrationDuplication = $duplicateLeadofVehicleTP; 
    }       
    
/*echo '<pre>';
echo $id.' leadid';
print_r($StatusofPhone1Duplication);
echo "Here first statuses of duplications<br>"; */           
            if (empty($duplicateLead) || !empty($duplicateLead)){
            if((!empty($ClientCarRegistrationNumb))&&(!empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    tp_car_registration = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id AND tp_car_registration IS NOT NULL
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id AND client_car_registration IS NOT NULL
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
            else { 
                if(!empty($ClientCarRegistrationNumb)){
                //echo 'inside client car='.$ClientCarRegistrationNumb;
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$ClientCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
                if(!empty($TPCarRegistrationNumb)){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    tp_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    client_car_registration  = '$TPCarRegistrationNumb' AND campaign_id = $campaign_id
                                ) OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                ";
            }
            }
            if((empty($ClientCarRegistrationNumb))&&(empty($TPCarRegistrationNumb))){
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )OR(
                                    email  = '$email_address' AND campaign_id = $campaign_id
                                    )
                                 OR(
                                    phone_1  = '$phone_number' AND campaign_id = $campaign_id
                                    )
                                    ";
                }
                
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  

        
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID          = $_SESSION['adminData']['user_id'];
            $getCompanyID    = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);        
            $companyId       = $getCompanyID[0]->company_id;
            $BDMName         = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName  = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName     = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                if ($updatelead){ 
                    $this->load->model('Mods');
                    $getlinkedrecrd=$this->Mods->getIdByName($table_name = "linked_leads", $condition = "lead_id", $data = $updatelead);
                    
                    if($getlinkedrecrd !=NULL){
                        $num = 0;
                        if ($checkLinkedLead){
                               foreach ($getlinkedrecrd as $dblinkedLead){
                                    foreach ($checkLinkedLead as $linkedLead){
                                      if(($id != $linkedLead['lead_id'])&&(($dblinkedLead->link_lead_id) != ($linkedLead['lead_id']))){
                                         $linkLeadData = array( 
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $linkedLead['LinkedLead'], 
                                                ); 
                                        $num = $this->db->get_where('linked_leads', $linkLeadData)->num_rows();
                                       
                                        if($num == 0){ $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData); }
                                        $linkLeadData1 = array(
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $lead_campaign[0]->campaign_name.' During Update with new date-'.$num,
                                                );
                                        $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                    }
                                    
                                }
                            }
                              
                        }
                    }else{
                        if ($checkLinkedLead){                        
                            foreach ($checkLinkedLead as $linkedLead){
                                if($id != $linkedLead['lead_id']){
                                     $linkLeadData = array( 
                                    'lead_id'       => $updatelead, 
                                    'link_lead_id'  => $linkedLead['lead_id'], 
                                    'status'        => $linkedLead['LinkedLead'], 
                                    ); 
                                    
                                    $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData);
                                
                                    $linkLeadData1 = array(
                                         'lead_id'       => $updatelead, 
                                         'link_lead_id'  => $linkedLead['lead_id'], 
                                         'status'        => $lead_campaign[0]->campaign_name.' During Update with new date',
                                     );
                                    $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                }
                                
                            }
                        } 
                    }
                
                }
            }
                
            if ($updatelead){
                

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

            if ($lead_campaign[0]->campaign_short_name == "MIB"){
                $note = "'user Update MIB Lead'";
            }
                                
                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'editLead',
                                    "module_id" => $id,
                                    "note" => $note,
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                
                
                $this->session->set_flashdata('Successupdatelead', 'Lead Status Record Update.');
                 //$this->editLead($id);
               /* redirect(base_url('Mod/manageLeads'));*/
                redirect(base_url('Mod/editLead/'.$id));
            }
            
        }                 
    }
    //Update//
    
     public function addCICA($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "CICA Claim Form");
            $this->load->view('Mod/leads/addCICA');
            $this->load->view('Mod/footer/footer');
        }else{
            show_404(); 
        }
    }
    
    public function createCICALead($id = 0) {
        
        if ($this->form_validation->run('addLead') == FALSE) {
            $this->addCICA($id);
        } else {
            
            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $goBackToWOrkDate       = $this->input->post('passenger_5_date_of_birth');
            $goBackToWOrkDate       = str_replace('/', '-', $goBackToWOrkDate);
            $goBackToWOrkDate       = date("Y-m-d", strtotime($goBackToWOrkDate));    
            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

$duplicateLead = "";            
        
if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
             

    
}else{       
        $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        OR 
                                            user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        OR 
                                            user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";            
            
//            if (!empty($duplicateLead)){
//                $this->session->set_flashdata('duplicateLeadError', $duplicateLead);
//                $this->addLead($id);
//            } 
    
   
            
}
    $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone' ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";
        /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'insode empty';*/
    } else{
        /*echo '<pre>';*/
        $StatusofPhone1Duplication = 0;
        /*echo 'outide empty';*/
    }  
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
           /* echo "<pre>";
            print_r($duplicateLead);
            die();
*/
            if (empty($duplicateLead) || !empty($duplicateLead)){ 
          
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id AND phone_1 = '$phone_number' AND email  = '$email_address' ";
                
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  

                //error
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
                
            if($this->input->post('dateOfBirth') !=''){
               if($this->input->post('dateOfBirth')=='0000-00-00'){
                    $dobDay = '1';
                    $dobMonth = '1';
                    $dobYear = '1999';
                }else{
                    $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
                    $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
                    $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
                }
            }else{
                $dobDay = '1';
                $dobMonth = '1';
                $dobYear = '1999';
            }
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>rfe1hwJk72TkqvRg5E7qmvqjJFOAJ76H</key>
                                    <leadgroup>50925</leadgroup>
                                    <site></site>
                                    <source>CICA Claims</source>
                                    <medium>CICA Claims</medium>
                                    <term>CICA Claims</term>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <jobtitle>" . $BDMName . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('accidentCircumstances') . "</data1>
                                    <data2>" . $this->input->post('ClientPolicyNumber') . "</data2>
                                    <data3>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data3>
                                    <data4>" . $this->input->post('Whodoyoublamefortheaccident') . "</data4>
                                    <data5>" . $this->input->post('Whatwastheweatherlike') . "</data5>
                                    <data6>" . $this->input->post('passenger_1') . "</data6>
                                    <data7>" . $this->input->post('passenger_1_position_in_car') . "</data7>
                                    <data8>" . $this->input->post('deferYourApplication') . "</data8>
                                    <data9>" . $this->input->post('passenger_1_position_in_car') . "</data9>
                                    <data10>" . $this->input->post('DateofAccident') . "</data10>
                                    <data11>" . $this->input->post('TimeofAccident') . "</data11>
                                    <data12>" . $this->input->post('OLPLONLY') . "</data12>
                                    <data13>" . $this->input->post('MedNegOnly') . "</data13>
                                    <data14>" . $this->input->post('DetailsofTheIncident') . "</data14>
                                    <data15>" . $this->input->post('InWhichCountry') . "</data15>
                                    <data16>" . $this->input->post('CreditHireorVehicleReplacement') . "</data16>
                                    <data17>" . $this->input->post('ClientStatusinAccident') . "</data17>
                                    <data18>" . $this->input->post('Isthisalinkedpassenger') . "</data18>
                                    <data19>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data19>
                                    <data20>" . $this->input->post('passenger_2') . "</data20>
                                    <data21>" . $this->input->post('passenger_2_relationship') . "</data21>
                                    <data22>" . $this->input->post('passenger_2_date_of_birth') . "</data22>
                                    <data23>" . $this->input->post('passenger_2_position_in_car') . "</data23>
                                    <data24>" . $this->input->post('passenger_3') . "</data24>
                                    <data25>" . $this->input->post('passenger_3_relationship') . "</data25>
                                    <data26>" . $this->input->post('passenger_3_date_of_birth') . "</data26>
                                    <data27>" . $this->input->post('passenger_3_position_in_car') . "</data27>
                                    <data28>" . $this->input->post('passenger_4') . "</data28>
                                    <data29>" . $this->input->post('passenger_4_relationship') . "</data29>
                                    <data30>" . $this->input->post('passenger_4_date_of_birth') . "</data30>
                                    <data31>" . $this->input->post('passenger_4_position_in_car') . "</data31>
                                    <data32>" . $this->input->post('passenger_5') . "</data32>
                                    <data33>" . $this->input->post('passenger_5_relationship') . "</data33>
                                    <data34>" . $this->input->post('passenger_5_position_in_car') . "</data34>
                                    <data35>" . $goBackToWOrkDate . "</data35>
                                    <data36>" . $this->input->post('passenger_6') . "</data36>
                                    <data37>" . $this->input->post('AccidentEmergency') . "</data37>
                                     <data38>" . $this->input->post('passenger_6_date_of_birth') . "</data38>
                                    <data39>" . $this->input->post('passenger_6_position_in_car') . "</data39>
                                     <data40>" . $this->input->post('DidYouVisit') . "</data40>
                                    <data41>" . $this->input->post('fi_tax_of610') . "</data41>
                                    <data42>" . $this->input->post('haveYouApplied') . "</data42>
                                    <data43>" . $this->input->post('DidyouseekMedicalAttention') . "</data43>
                                    <data44>" . $this->input->post('HaveyouClaimded') . "</data44>
                                    <data45>" . $this->input->post('Additionalnotes') . "</data45>
                                    <data46>" . $this->input->post('marketing_source') . "</data46>
                                    <data47>" . $this->input->post('replacementInvoiceNumber') . "</data47>
                                    <data48>" . $this->input->post('InterpreterName') . "</data48>
                                    <data49>" . $this->input->post('Interpreterpaid') . "</data49>
                                  </lead>
                                </data>";


            $xml_data = str_replace('&', '&#38;', $xml_data);
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_ENCODING, "");
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);
    
            
            $api_ids = array('consumercreditjustice_flg' => $lead_id);
            
            /* ---------------------------flg hit end------------------ */
          //  if ('OK' == 'OK') {
            if ($hit_message == 'OK') {

                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'ec_utillity' => $this->input->post('applyingfor'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'fi_tax_of610' => $this->input->post('fi_tax_of610'),
                    'fi_counttax' => $this->input->post('DidYouVisit'),
                    'have_you_claimed_before' => $this->input->post('HaveyouClaimded'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                   
                    'employers_name_address_telephone_number' => $this->input->post('AccidentEmergency'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'third_party_policy_number' => $this->input->post('HaveyouClaimded'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 232 : 228,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'ec_servicestate' => $this->input->post('InWhichCountry'),
                    'ec_relationship' => $this->input->post('DetailsofTheIncident'),
                    'api_inseration_id' => json_encode($api_ids),
                    "reference_id" => $reference_id,
                    "duplicateLeadofEmail" => $StatusofEmailDuplication,
                    "duplicateLeadofPhone" => $StatusofPhoneDuplication,
                    "duplicateLeadofPhone1" => $StatusofPhone1Duplication,
                    "duplicateLeadofpost_code" => $StatusofPostcodDuplication,
                    "duplicateLeadofVehicle" => $StatusofVehicleRegistrationDuplication,
                    "duplicateLeadofVehicleTP" => $StatusofTPVehicleRegistrationDuplication,
                    "flg_ccj_id" => $lead_ccj_id,
                    'created_at' => date("y-m-d H:i:s")
                );             

                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
             
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }


                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone NEW CICA lead.' : 'User add NEW CICA lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'NEW CICA Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');

//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW CICA Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW CICA Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {

                            $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany    = json_decode(json_encode($item), 1);
                
                
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                
                $this->addCICA($id);
                
                }
            }
        }
    }
    
     public function updateCICALead(){
        $campaignflg = 1;
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
        
            if($this->form_validation->run('updateLead') == FALSE) {
            $this->editLead($id);
            $campaignflg = 0;
            }
        else{

            date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id=$userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            
            $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            $flg_ros_id      = $lead[0]->flg_ros_id;
          
            /*start of  of update checks*/
            $duplicateLead = "";      
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            /*$ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');*/
            
            $date_hirePeriodstart      = !empty($_POST['hirePeriodstart']) ? $_POST['hirePeriodstart'] : '';
            $date_hirePeriodstart               = str_replace('/', '-', $date_hirePeriodstart);
            $date_hirePeriodstart   = date("Y-m-d", strtotime($date_hirePeriodstart));
            
            $date_hireperiodend      = !empty($_POST['hireperiodend']) ? $_POST['hireperiodend'] : '';
            $date_hireperiodend               = str_replace('/', '-', $date_hireperiodend);
            $date_hireperiodend   = date("Y-m-d", strtotime($date_hireperiodend));
            
            $goBackToWOrkDate       = $this->input->post('passenger_5_date_of_birth');
            $goBackToWOrkDate       = str_replace('/', '-', $goBackToWOrkDate);
            $goBackToWOrkDate       = date("Y-m-d", strtotime($goBackToWOrkDate)); 
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $company_id);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date)); 
           
            if ($lead_campaign[0]->campaign_name == "CICA Claims"){
                $leadData = array(
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('PositiononLiability'),
                    'accident_circumstances' => $this->input->post('accidentCircumstances'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'ec_utillity' => $this->input->post('applyingfor'),
                    'fi_tax_of610' => $this->input->post('fi_tax_of610'),
                    'fi_counttax' => $this->input->post('DidYouVisit'),
                    'have_you_claimed_before' => $this->input->post('HaveyouClaimded'),
                    'date_of_accident' => $date_of_accident,
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                    'employers_name_address_telephone_number' => $this->input->post('AccidentEmergency'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'third_party_policy_number' => $this->input->post('HaveyouClaimded'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'ec_servicestate' => $this->input->post('InWhichCountry'),
                    'ec_relationship' => $this->input->post('DetailsofTheIncident'),
                    'lead_update_user_id' => $userID,
                    'lead_update_company_id' => $companyId,
                    'updated_at'                    => date("Y-m-d H:i:s")
                );
            }
            
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Lead Updated');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = ' Lead Updated - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Updated Lead </h2>
                                            <p>Please be advised that the following lead has been edited and a change to the lead has been made</p>
                                            <table>
                                                
                                                <tr>
                                                    <td>Email</td>
                                                    <td>'. $this->input->post('email') .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $this->input->post('firstName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $this->input->post('lastName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Phone</td>
                                                    <td>' . $this->input->post('phone1') . '</td>
                                                </tr>
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        $this->mailer->send();
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            /* echo 'after exception Hello';*/
            /*flf update*/
            if($this->input->post('dateOfBirth')=="0000-00-00"){
                $dobDay = 1;
                $dobMonth = 1;
                $dobYear = 1990;
            }else{
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            }
            
            if($lead_campaign[0]->campaign_name == "CICA Claims"){
                    if($flg_ccj_id != NULL){
                    $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead>
                                        <key>rfe1hwJk72TkqvRg5E7qmvqjJFOAJ76H</key>
                                        <id>".$flg_ccj_id."</id>
                                        <firstname>" . $this->input->post('firstName') . "</firstname>
                                        <lastname>" . $this->input->post('lastName') . "</lastname>
                                        <company>" . $companyName . "</company>
                                        <phone1>" . $this->input->post('phone1') . "</phone1>
                                        <phone2>" . $this->input->post('phone2') . "</phone2>
                                        <email>" . $this->input->post('email') . "</email>
                                        <address>" . $this->input->post('address') . "</address>
                                        <address2>" . $this->input->post('address2') . "</address2>
                                        <address3>" . $this->input->post('address3') . "</address3>
                                        <towncity>" . $this->input->post('towncity') . "</towncity>
                                        <postcode>" . $this->input->post('postcode') . "</postcode>
                                        <dobday>" . $dobDay . "</dobday>
                                        <dobmonth>" . $dobMonth . "</dobmonth>
                                        <dobyear>" . $dobYear . "</dobyear>
                                        <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                        <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                        <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                        <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                        <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                        <data1>" . $this->input->post('accidentCircumstances') . "</data1>
                                        <data2>" . $this->input->post('ClientPolicyNumber') . "</data2>
                                        <data3>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data3>
                                        <data4>" . $this->input->post('Whodoyoublamefortheaccident') . "</data4>
                                        <data5>" . $this->input->post('Whatwastheweatherlike') . "</data5>
                                        <data6>" . $this->input->post('passenger_1') . "</data6>
                                        <data7>" . $this->input->post('passenger_1_position_in_car') . "</data7>
                                        <data8>" . $this->input->post('deferYourApplication') . "</data8>
                                        <data9>" . $this->input->post('passenger_1_position_in_car') . "</data9>
                                        <data10>" . $this->input->post('DateofAccident') . "</data10>
                                        <data11>" . $this->input->post('TimeofAccident') . "</data11>
                                        <data12>" . $this->input->post('OLPLONLY') . "</data12>
                                        <data13>" . $this->input->post('MedNegOnly') . "</data13>
                                        <data14>" . $this->input->post('DetailsofTheIncident') . "</data14>
                                        <data15>" . $this->input->post('InWhichCountry') . "</data15>
                                        <data16>" . $this->input->post('CreditHireorVehicleReplacement') . "</data16>
                                        <data17>" . $this->input->post('ClientStatusinAccident') . "</data17>
                                        <data18>" . $this->input->post('Isthisalinkedpassenger') . "</data18>
                                        <data19>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data19>
                                        <data20>" . $this->input->post('passenger_2') . "</data20>
                                        <data21>" . $this->input->post('passenger_2_relationship') . "</data21>
                                        <data22>" . $this->input->post('passenger_2_date_of_birth') . "</data22>
                                        <data23>" . $this->input->post('passenger_2_position_in_car') . "</data23>
                                        <data24>" . $this->input->post('passenger_3') . "</data24>
                                        <data25>" . $this->input->post('passenger_3_relationship') . "</data25>
                                        <data26>" . $this->input->post('passenger_3_date_of_birth') . "</data26>
                                        <data27>" . $this->input->post('passenger_3_position_in_car') . "</data27>
                                        <data28>" . $this->input->post('passenger_4') . "</data28>
                                        <data29>" . $this->input->post('passenger_4_relationship') . "</data29>
                                        <data30>" . $this->input->post('passenger_4_date_of_birth') . "</data30>
                                        <data31>" . $this->input->post('passenger_4_position_in_car') . "</data31>
                                        <data32>" . $this->input->post('passenger_5') . "</data32>
                                        <data33>" . $this->input->post('passenger_5_relationship') . "</data33>
                                        <data34>" . $this->input->post('passenger_5_position_in_car') . "</data34>
                                        <data35>" . $goBackToWOrkDate . "</data35>
                                        <data36>" . $this->input->post('passenger_6') . "</data36>
                                        <data37>" . $this->input->post('AccidentEmergency') . "</data37>
                                         <data38>" . $this->input->post('passenger_6_date_of_birth') . "</data38>
                                        <data39>" . $this->input->post('passenger_6_position_in_car') . "</data39>
                                         <data40>" . $this->input->post('DidYouVisit') . "</data40>
                                        <data41>" . $this->input->post('fi_tax_of610') . "</data41>
                                        <data42>" . $this->input->post('haveYouApplied') . "</data42>
                                        <data43>" . $this->input->post('DidyouseekMedicalAttention') . "</data43>
                                        <data44>" . $this->input->post('HaveyouClaimded') . "</data44>
                                        <data45>" . $this->input->post('Additionalnotes') . "</data45>
                                        <data46>" . $this->input->post('marketing_source') . "</data46>
                                        <data47>" . $this->input->post('replacementInvoiceNumber') . "</data47>
                                        <data48>" . $this->input->post('InterpreterName') . "</data48>
                                        <data49>" . $this->input->post('Interpreterpaid') . "</data49>
                                      </lead>
                                    </data>";
                             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                            $ch = curl_init($URL);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                            curl_setopt($ch, CURLOPT_POST, 1);
                        $xml_data = str_replace('&', '&#38;', $xml_data);
                            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                                'Content-Type: application/xml',
                                'Content-Length: ' . strlen($xml_data))
                            );
                            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                            $output = curl_exec($ch);
                        }
                    }
            $this->load->model('Mods');
            
            $updatelead = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);
            
            $sqlCheckDuplicateLead = "SELECT count(*) AS 'CountoFDuplicateEntery' FROM `leads` WHERE user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";
            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            
            $duplicateLead = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable, Duplicate Lead Entery Found." : "";
            // if (!empty($duplicateLead)){// $this->session->set_flashdata('duplicateLeadError', $duplicateLead);// $this->addLead($id);// }}
    $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone' ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";
        /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'insode empty';*/
    } else{
        /*echo '<pre>';*/
        $StatusofPhone1Duplication = 0;
        /*echo 'outide empty';*/
    }  
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
           /* echo "<pre>";
            print_r($duplicateLead);
            die();
*/
            
            if (empty($duplicateLead) || !empty($duplicateLead)){
                $sqlLinkedLead = "SELECT
                    lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id AND phone_1 = '$phone_number' AND email  = '$email_address' ";
            
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  

        
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID          = $_SESSION['adminData']['user_id'];
            $getCompanyID    = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);        
            $companyId       = $getCompanyID[0]->company_id;
            $BDMName         = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName  = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName     = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                if ($updatelead){ 
                    $this->load->model('Mods');
                    $getlinkedrecrd=$this->Mods->getIdByName($table_name = "linked_leads", $condition = "lead_id", $data = $updatelead);
                    
                    if($getlinkedrecrd !=NULL){
                        $num = 0;
                        if ($checkLinkedLead){
                               foreach ($getlinkedrecrd as $dblinkedLead){
                                    foreach ($checkLinkedLead as $linkedLead){
                                      if(($id != $linkedLead['lead_id'])&&(($dblinkedLead->link_lead_id) != ($linkedLead['lead_id']))){
                                         $linkLeadData = array( 
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $linkedLead['LinkedLead'], 
                                                ); 
                                        $num = $this->db->get_where('linked_leads', $linkLeadData)->num_rows();
                                       
                                        if($num == 0){ $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData); }
                                        $linkLeadData1 = array(
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $lead_campaign[0]->campaign_name.' During Update with new date-'.$num,
                                                );
                                        $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                    }
                                    
                                }
                            }
                              
                        }
                    }else{
                        if ($checkLinkedLead){                        
                            foreach ($checkLinkedLead as $linkedLead){
                                if($id != $linkedLead['lead_id']){
                                     $linkLeadData = array( 
                                    'lead_id'       => $updatelead, 
                                    'link_lead_id'  => $linkedLead['lead_id'], 
                                    'status'        => $linkedLead['LinkedLead'], 
                                    ); 
                                    
                                    $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData);
                                
                                    $linkLeadData1 = array(
                                         'lead_id'       => $updatelead, 
                                         'link_lead_id'  => $linkedLead['lead_id'], 
                                         'status'        => $lead_campaign[0]->campaign_name.' During Update with new date',
                                     );
                                    $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                }
                                
                            }
                        } 
                    }
                
                }
            }
                
            if ($updatelead){
                

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

            if ($lead_campaign[0]->campaign_short_name == "CICA"){
                $note = "'User Update CICA Lead'";
            }
                                
                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'editLead',
                                    "module_id" => $id,
                                    "note" => $note,
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                
                
                $this->session->set_flashdata('Successupdatelead', 'Lead Status Record Update.');
                 //$this->editLead($id);
               /* redirect(base_url('Mod/manageLeads'));*/
                redirect(base_url('Mod/editLead/'.$id));
            }
            
        }                 
    }
//MIB Claims and CICA  Functions
    /*Employment*/
public function addEmployment($id = 0){
        $permission_create = $_SESSION['adminData']['Leads']['permission_create'];
        if($permission_create == 1){
            $sql = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign = $this->db->query($sql)->result();

            if (!$checkCampaign){
                show_404();
            }

            $this->headerV($this->title = "Employment Claim Form");
            $this->load->view('Mod/leads/addEM');
            $this->load->view('Mod/footer/footer');
        }else{
            show_404(); 
        }        
    }
    
public function createEmploymentLead($id = 0) {
        
        if ($this->form_validation->run('addEMPLead') == FALSE) {
            $this->addEmployment($id);
        } else {

            $user_id            = $_SESSION['adminData']['user_id'];
            $company_id         = $_SESSION['adminData']['company_id'];
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = $this->input->post('ClientCarRegistration');
            $TPCarRegistrationNumb          = $this->input->post('TPCarRegistration');
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date));            
            
            $goBackToWOrkDate       = $this->input->post('passenger_5_date_of_birth');
            $goBackToWOrkDate       = str_replace('/', '-', $goBackToWOrkDate);
            $goBackToWOrkDate       = date("Y-m-d", strtotime($goBackToWOrkDate));    
            
            $sql                = "select * from campaign where campaign_short_name = '$id' and campaign_status = 1";
            $checkCampaign      = $this->db->query($sql)->result();

            $campaign_id        = $checkCampaign[0]->campaign_id;
            $reference_id       = $checkCampaign[0]->campaign_short_name . "-" . mt_rand(123456, 987654);

$duplicateLead = "";            
        
if ($this->input->post('clone') == "clone"){
$this->session->set_userdata('clone', 'clone');

            $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                (
                                    post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id
                                ) OR( 
                                    post_code = '$post_code' AND email = '$email_address' AND campaign_id = $campaign_id
                                ) OR(
                                    post_code = '$post_code' AND phone_1 = '$phone_number' AND email = '$email_address' AND campaign_id = $campaign_id
                                )";

            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();            
             

    
}
else{
        $sqlCheckDuplicateLead = "SELECT
                                        count(*) AS 'CountoFDuplicateEntery'
                                    FROM
                                        `leads`
                                    WHERE
                                        user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        OR 
                                            user_id = $user_id  AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id
                                        OR 
                                            user_id = $user_id  AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            $duplicateLead      = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable to Insert your lead. Duplicate Lead Entery Found." : "";                          
    }
    $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone' ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";
        /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'insode empty';*/
    } else{
        /*echo '<pre>';*/
        $StatusofPhone1Duplication = 0;
        /*echo 'outide empty';*/
    }  
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
           /* echo "<pre>";
            print_r($duplicateLead);
            die();
*/
            if (empty($duplicateLead) || !empty($duplicateLead)){ 
          
                $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id AND phone_1 = '$phone_number' AND email  = '$email_address' ";
                
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  

                //error
                
            date_default_timezone_set('Europe/London');
            
            $this->load->model('Mods');

            $userID         = $_SESSION['adminData']['user_id'];
            
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            
            $companyId      = $getCompanyID[0]->company_id;
            $BDMName        = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
                
            if($this->input->post('dateOfBirth') !=''){
               if($this->input->post('dateOfBirth')=='0000-00-00'){
                    $dobDay = '1';
                    $dobMonth = '1';
                    $dobYear = '1999';
                }else{
                    $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
                    $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
                    $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
                }
            }else{
                $dobDay = '1';
                $dobMonth = '1';
                $dobYear = '1999';
            }
            $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                <data>
                                  <lead>
                                    <key>6yD3C6S5Gv2eVw0JV9oySR6cwOhMV3YK</key>
                                    <leadgroup>56801</leadgroup>
                                    <site></site>
                                    <source>Employment Claims</source>
                                    <medium>Employment Claims</medium>
                                    <term>Employment Claims</term>
                                    <firstname>" . $this->input->post('firstName') . "</firstname>
                                    <lastname>" . $this->input->post('lastName') . "</lastname>
                                    <company>" . $companyName . "</company>
                                    <jobtitle>" . $BDMName . "</jobtitle>
                                    <phone1>" . $this->input->post('phone1') . "</phone1>
                                    <phone2>" . $this->input->post('phone2') . "</phone2>
                                    <email>" . $this->input->post('email') . "</email>
                                    <address>" . $this->input->post('address') . "</address>
                                    <address2>" . $this->input->post('address2') . "</address2>
                                    <address3>" . $this->input->post('address3') . "</address3>
                                    <towncity>" . $this->input->post('towncity') . "</towncity>
                                    <postcode>" . $this->input->post('postcode') . "</postcode>
                                    <dobday>" . $dobDay . "</dobday>
                                    <dobmonth>" . $dobMonth . "</dobmonth>
                                    <dobyear>" . $dobYear . "</dobyear>
                                    <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                    <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                    <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                    <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                    <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                    <data1>" . $this->input->post('DateofAccident') . "</data1>
                                    <data2>" . $this->input->post('memorableword') . "</data2>
                                    <data3>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data3>
                                    <data4>" . $this->input->post('Whodoyoublamefortheaccident') . "</data4>
                                    <data5>" . $this->input->post('Whatwastheweatherlike') . "</data5>
                                    <data6>" . $this->input->post('passenger_1') . "</data6>
                                    <data7>" . $this->input->post('passenger_1_position_in_car') . "</data7>
                                    <data8>" . $this->input->post('deferYourApplication') . "</data8>
                                    <data9>" . $this->input->post('passenger_1_relationship') . "</data9>
                                    <data10>" . $this->input->post('passenger_1_date_of_birth') . "</data10>
                                    <data11>" . $this->input->post('OLPLONLY') . "</data11>
                                    <data12>" . $this->input->post('TimeofAccident') . "</data12>
                                    <data13>" . $this->input->post('Werethepoliceinvolved') . "</data13>
                                    <data14>" . $this->input->post('MedNegOnly') . "</data14>
                                    <data15>" . $this->input->post('InWhichCountry') . "</data15>
                                    <data16>" . $this->input->post('DetailsofTheIncident') . "</data16>
                                    <data17>" . $this->input->post('CreditHireorVehicleReplacement') . "</data17>
                                    <data18>" . $this->input->post('ClientStatusinAccident') . "</data18>
                                    <data19>" . $this->input->post('Isthisalinkedpassenger') . "</data19>
                                    <data20>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data20>
                                    <data21>" . $this->input->post('passenger_2') . "</data21>
                                    <data22>" . $this->input->post('passenger_2_relationship') . "</data22>
                                    <data23>" . $this->input->post('passenger_2_date_of_birth') . "</data23>
                                    <data24>" . $this->input->post('passenger_2_position_in_car') . "</data24>
                                    <data25>" . $this->input->post('passenger_3') . "</data25>
                                    <data26>" . $this->input->post('passenger_3_relationship') . "</data26>
                                    <data27>" . $this->input->post('passenger_3_date_of_birth') . "</data27>
                                    <data28>" . $this->input->post('passenger_3_position_in_car') . "</data28>
                                    <data29>" . $this->input->post('passenger_4') . "</data29>
                                    <data30>" . $this->input->post('passenger_4_relationship') . "</data30>
                                    <data31>" . $this->input->post('passenger_4_date_of_birth') . "</data31>
                                    <data32>" . $this->input->post('discriminatedby') . "</data32>
                                    <data33>" . $this->input->post('passenger_4_position_in_car') . "</data33>
                                    <data34>" . $this->input->post('passenger_5') . "</data34>
                                    <data35>" . $this->input->post('passenger_5_relationship') . "</data35>
                                    <data36>" . $this->input->post('passenger_5_date_of_birth') . "</data36>
                                    <data37>" . $this->input->post('passenger_5_position_in_car') . "</data37>
                                    <data38>" . $this->input->post('passenger_6') . "</data38>
                                    <data39>" . $this->input->post('AccidentEmergency') . "</data39>
                                    <data40>" . $this->input->post('passenger_6_date_of_birth') . "</data40>
                                    <data41>" . $this->input->post('DidyouseekMedicalAttention') . "</data41>
                                    <data42>" . $this->input->post('fi_tax_of610') . "</data42>
                                    <data43>" . $this->input->post('haveYouApplied') . "</data43>
                                    <data44>" . $this->input->post('DidYouVisit') . "</data44>
                                    <data45>" . $this->input->post('Additionalnotes') . "</data45>
                                    <data46>" . $this->input->post('HaveyouClaimded') . "</data46>
                                    <data47>" . $this->input->post('marketing_source') . "</data47>
                                    <data48>" . $this->input->post('replacementInvoiceNumber') . "</data48>
                                    <data49>" . $this->input->post('InterpreterName') . "</data49>
                                    <data50>" . $this->input->post('Interpreterpaid') . "</data50>
                                  </lead>
                                </data>";


            $xml_data = str_replace('&', '&#38;', $xml_data);
            $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
            $ch = curl_init($URL);

            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_ENCODING, "");
            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                'Content-Type: application/xml',
                'Content-Length: ' . strlen($xml_data))
            );

            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

            $output = curl_exec($ch);
            $item = new SimpleXMLElement($output);
            $hit_message = $item->item[0]->message;
            $lead_id = $item->item[0]->id;
            $lead_ccj_id = $item->item[0]->id;
            curl_close($ch);
    
            
            $api_ids = array('consumercreditjustice_flg' => $lead_id);
            
            /* ---------------------------flg hit end------------------ */
           // if ('OK' == 'OK') {
            if ($hit_message == 'OK') {

                $leadData = array(
                    'user_id' => $userID,
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('memorableword'),
                    'accident_circumstances' => $this->input->post('discriminatedby'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'fi_tax_of610' => $this->input->post('fi_tax_of610'),
                    'fi_counttax' => $this->input->post('DidYouVisit'),
                    
                    'triage_invoive_number' => $this->input->post('deferYourApplication'),
                    
                    'have_you_claimed_before' => $this->input->post('HaveyouClaimded'),
                    'fi_othersaving' => $this->input->post('DateofAccident'),
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'ec_servicecity' => $this->input->post('haveYouApplied'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                   
                    'employers_name_address_telephone_number' => $this->input->post('AccidentEmergency'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'third_party_policy_number' => $this->input->post('HaveyouClaimded'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    'lead_status' => ($duplicateLead || $checkLinkedLead) ? 244 : 243,
                    'campaign_id' => $checkCampaign[0]->campaign_id,
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'ec_servicestate' => $this->input->post('InWhichCountry'),
                    'ec_relationship' => $this->input->post('DetailsofTheIncident'),
                    'api_inseration_id' => json_encode($api_ids),
                    "reference_id" => $reference_id,
                    "duplicateLeadofEmail" => $StatusofEmailDuplication,
                    "duplicateLeadofPhone" => $StatusofPhoneDuplication,
                    "duplicateLeadofPhone1" => $StatusofPhone1Duplication,
                    "duplicateLeadofpost_code" => $StatusofPostcodDuplication,
                    "duplicateLeadofVehicle" => $StatusofVehicleRegistrationDuplication,
                    "duplicateLeadofVehicleTP" => $StatusofTPVehicleRegistrationDuplication,
                    "flg_ccj_id" => $lead_ccj_id,
                    'created_at' => date("y-m-d H:i:s")
                );             
                /*echo "<pre>";
                print_r($leadData);
                die();*/
                $this->load->model('Mods');
                $leadInsert = $this->Mods->single_insert('leads', $leadData);
                
             
                if ($leadInsert) {
                    
                    if ($checkLinkedLead){
                        foreach ($checkLinkedLead as $linkedLead){
                            
                            $linkLeadData = array(
                                
                                'lead_id'       => $leadInsert, 
                                'link_lead_id'  => $linkedLead['lead_id'], 
                                'status'        => $linkedLead['LinkedLead'],
                                
                            );
                            
                            $this->Mods->single_insert('linked_leads', $linkLeadData);
                            $linkLeadData1 = array(
                                 'lead_id'       => $leadInsert, 
                                 'link_lead_id'  => $linkedLead['lead_id'], 
                                 'status'        => $checkCampaign[0]->campaign_short_name.' During insertion',
                             );
                            $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                            
                        }
                    }


                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'addLead',
                                    "module_id" => $leadInsert,
                                    "note" => ($this->input->post('clone') == "clone") ? 'User Clone NEW Employment lead.' : 'User add NEW Employment lead.',
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                    
                    $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $leadInsert);
                    $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);

                    $status_log_data = array(
                        
                        "lead_id"           => $getleadData[0]->lead_id, 
                        "user_id"           => $_SESSION['adminData']['user_id'], 
                        "lead_status_id"    => $getleadData[0]->lead_status, 
                        "created_at"        => date('y-m-d H:i:s'), 
                        
                    );
                   
                    $this->Mods->single_insert('leads_statuses_logs', $status_log_data);
                    
                    
                    
                   $dobDay     = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("d", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobMonth   = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("m", strtotime($getleadData[0]->date_of_birth)) : '';
                  $dobYear    = ($getleadData[0]->date_of_birth != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? date("Y", strtotime($getleadData[0]->date_of_birth)) : '';
                  $date_of_accident = ($getleadData[0]->date_of_accident != "0000-00-00" && !empty($getleadData[0]->date_of_birth)) ? $getleadData[0]->date_of_accident : '' ;
                  
                    try {

                        $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        //Recipients

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'NEW Employment Lead');
//                $clientData->addAddress('aisha@consumercreditjustice.co.uk');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
//                        $this->mailer->addAddress('ssn@ovalcommunications.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');

//                        $this->mailer->addAddress('mohsin@claimandlegal.co.uk');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = 'NEW Employment Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>NEW Employment Lead - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName . '</h2>

                                            <table>
                                                <tr>
                                                    <td>Lead Status</td>
                                                    <td>New</td>
                                                </tr>
                                                <tr>
                                                    <td>File Reference Id</td>
                                                    <td>'. $getleadData[0]->reference_id .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $getleadData[0]->first_name . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $getleadData[0]->last_name . '</td>
                                                </tr>
                                                <tr>                                                
                                                    <td>Company</td>
                                                    <td>' . $companyName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Job Title</td>
                                                    <td>' . $BDMName  . '</td>
                                                </tr>                                                
                                                <tr>                                                
                                                    <td>Phone 1</td>
                                                    <td>' . $getleadData[0]->phone_1  . '</td>
                                                </tr>    
                                                <tr>
                                                    <td>Phone 2</td>
                                                    <td>' . $getleadData[0]->phone_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Fax</td>
                                                    <td>' . $getleadData[0]->fax  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Email</td>
                                                    <td>' . $getleadData[0]->email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address</td>
                                                    <td>' . $getleadData[0]->address  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 2</td>
                                                    <td>' . $getleadData[0]->address_2  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Address 3</td>
                                                    <td>' . $getleadData[0]->address_3  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Town City</td>
                                                    <td>' . $getleadData[0]->town_city  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Post code</td>
                                                    <td>' . $getleadData[0]->post_code  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Day</td>
                                                    <td>' . $dobDay . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Month</td>
                                                    <td>' . $dobMonth . '</td>
                                                </tr>
                                                <tr>
                                                    <td>DOB Year</td>
                                                    <td>' . $dobYear . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Phone</td>
                                                    <td>' . $getleadData[0]->contact_phone  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact SMS</td>
                                                    <td>' . $getleadData[0]->contact_sms  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Email</td>
                                                    <td>' . $getleadData[0]->contact_email  . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Mail</td>
                                                    <td>' . $getleadData[0]->contact_mail . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Contact Time</td>
                                                    <td>' . $getleadData[0]->contact_time  . '</td>
                                                </tr>
                                                
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        
                        if ($this->mailer->send()) {

                            $this->session->set_flashdata('SuccessLeadData', 'Lead Status Created.');
                            redirect(base_url('Mod/manageLeads'));
                            
                        }
                        
                    } catch (Exception $e) {
                        
                    }
                }
            } else {
                
                $xmlToArrany    = json_decode(json_encode($item), 1);
                
                
                $_SESSION['Errors'] = array($xmlToArrany['item']);
                
                $this->addEmployment($id);
                
                }
            }
        }
    }

public function updateEmploymentCampaignLead(){
        $campaignflg = 1;
        
        $id = !empty(@$_POST['leadId']) ? base64_decode(@$_POST['leadId']) : $this->session->set_flashdata('leadsDataError', 'Record Not Exists.');
        $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
        $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name ='campaign',$condition ='campaign_id', $lead[0]->campaign_id ) : ''; 
        
            if($this->form_validation->run('addEMPLead') == FALSE) {
            $this->editLead($id);
            $campaignflg = 0;
            }
        else{

            date_default_timezone_set('Europe/London');
            
            $userID         = $_SESSION['adminData']['user_id'];
            $user_id=$userID;
            $getCompanyID   = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);
            $companyId      = $getCompanyID[0]->company_id;

            $lead           = ($id) ? $this->Mods->getIdByName($table_name = 'leads', $condition = 'lead_id', $id) : '';
            $lead_campaign  = ($lead) ? $this->Mods->getIdByName($table_name = 'campaign', $condition = 'campaign_id', $lead[0]->campaign_id ) : '';
            
            $getleadData = $this->Mods->getIdByName($table_name = "leads", $condition = "lead_id", $data = $id);
            $user_data = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $getleadData[0]->user_id);
            
            $campaign_id     = $lead[0]->campaign_id;
            $company_id      = $lead[0]->company_id;
            
            /*flg ids*/
            $flg_ccj_id      = $lead[0]->flg_ccj_id;
            $flg_ros_id      = $lead[0]->flg_ros_id;
          
            /*start of  of update checks*/
            $duplicateLead = "";      
            $phone_number       = !empty($_POST['phone1']) ? $_POST['phone1'] : '';
            $email_address      = !empty($_POST['email']) ? $_POST['email'] : '';
            $date_accident      = !empty($_POST['DateofAccident']) ? $_POST['DateofAccident'] : '';
            $post_code          = !empty($_POST['postcode']) ? $_POST['postcode'] : ''; 
            $first_name         = !empty($_POST['firstName']) ? $_POST['firstName'] : ''; 
            $last_name          = !empty($_POST['lastName']) ? $_POST['lastName'] : '';  
            $workPhone                      = $this->input->post('phone2');
            $PostCodnum                     = $this->input->post('postcode');
            $ClientCarRegistrationNumb      = str_replace(' ', '', trim($this->input->post('ClientCarRegistration')));
            $TPCarRegistrationNumb          = str_replace(' ', '', trim($this->input->post('TPCarRegistration')));
            
            $date_hirePeriodstart      = !empty($_POST['hirePeriodstart']) ? $_POST['hirePeriodstart'] : '';
            $date_hirePeriodstart               = str_replace('/', '-', $date_hirePeriodstart);
            $date_hirePeriodstart   = date("Y-m-d", strtotime($date_hirePeriodstart));
            
            $date_hireperiodend      = !empty($_POST['hireperiodend']) ? $_POST['hireperiodend'] : '';
            $date_hireperiodend               = str_replace('/', '-', $date_hireperiodend);
            $date_hireperiodend   = date("Y-m-d", strtotime($date_hireperiodend));
            
            $getCompanyName = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $company_id);
            $companyName    = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
            $date               = str_replace('/', '-', $date_accident);
            $date_of_accident   = date("Y-m-d", strtotime($date)); 
           
            if ($lead_campaign[0]->campaign_name == "Employment"){
                $leadData = array(
                    'company_id' => $companyId,
                    'first_name' => $this->input->post('firstName'),
                    'last_name' => $this->input->post('lastName'),
                    'company_name' => $companyName,
                    'job_title' => $this->input->post('jobtitle'),
                    'phone_1' => $this->input->post('phone1'),
                    'phone_2' => $this->input->post('phone2'),
                    'email' => $this->input->post('email'),
                    'address' => $this->input->post('address'),
                    'address_2' => $this->input->post('address2'),
                    'address_3' => $this->input->post('address3'),
                    'town_city' => $this->input->post('towncity'),
                    'post_code' => $this->input->post('postcode'),
                    'date_of_birth' => ($this->input->post('dateOfBirth')) ? $this->input->post('dateOfBirth') : NULL,
                    'contact_phone' => $this->input->post('contactphone'),
                    'contact_sms' => $this->input->post('contactsms'),
                    'contact_email' => $this->input->post('contactemail'),
                    'contact_mail' => $this->input->post('contactmail'),
                    'contact_time' => $this->input->post('contacttime'),
                    'position_on_liability' => $this->input->post('memorableword'),
                    'accident_circumstances' => $this->input->post('discriminatedby'),
                    'client_status_in_accident' => $this->input->post('ClientStatusinAccident'),
                    'replacement_invoice_number' => $this->input->post('replacementInvoiceNumber'),
                    'fi_tax_of610' => $this->input->post('fi_tax_of610'),
                    'fi_counttax' => $this->input->post('DidYouVisit'),
                    
                    'triage_invoive_number' => $this->input->post('deferYourApplication'),
                    
                    'have_you_claimed_before' => $this->input->post('HaveyouClaimded'),
                    'fi_othersaving' => $this->input->post('DateofAccident'),
                    'time_of_accident' => $this->input->post('TimeofAccident'),
                    'what_injuries_did_you_suffer' => $this->input->post('WhatInjuriesdidyousuffer'),
                    'did_you_seek_medical_attention' => $this->input->post('DidyouseekMedicalAttention'),
                    'who_do_you_blame_for_the_accident' => $this->input->post('Whodoyoublamefortheaccident'),
                    'client_policy_number' => $this->input->post('ClientPolicyNumber'),
                    'tp_car_registration' => $TPCarRegistrationNumb,
                    'do_you_wish_to_make_a_claim' => $this->input->post('Doyouwishtomakeaclaim'),
                    'additional_notes' => $this->input->post('Additionalnotes'),
                    'ec_servicecity' => $this->input->post('haveYouApplied'),
                    'is_this_a_linked_passenger' => $this->input->post('Isthisalinkedpassenger'),
                    
                    'what_was_the_exact_location_of_the_accident' => $this->input->post('Whatwastheexactlocationoftheaccident'),
                    'what_was_the_weather_like' => $this->input->post('Whatwastheweatherlike'),
                   
                    'employers_name_address_telephone_number' => $this->input->post('AccidentEmergency'),
                    'med_neg_only' => $this->input->post('MedNegOnly'),
                    'ol_pl_only' => $this->input->post('OLPLONLY'),
                    'credit_hire_or_vehicle_replacement' => $this->input->post('CreditHireorVehicleReplacement'),
                    'is_injury_on_going_injury_physio' => $this->input->post('WasAccidentreportedorrecordedintheaccidentBook'),
                    'third_party_policy_number' => $this->input->post('HaveyouClaimded'),
                    'interpreter_name' => $this->input->post('InterpreterName'),
                    'interpreter_paid' => $this->input->post('Interpreterpaid'),
                    'marketing_source' => $this->input->post('marketing_source'),
                    "passenger_1" => $this->input->post('passenger_1'),
                    "passenger_1_relationship" => $this->input->post('passenger_1_relationship'),
                    "passenger_1_date_of_birth" => $this->input->post('passenger_1_date_of_birth'),
                    "passenger_1_position_in_car" => $this->input->post('passenger_1_position_in_car'),
                    "passenger_2_position_in_car" => $this->input->post('passenger_2_position_in_car'),
                    "passenger_2" => $this->input->post('passenger_2'),
                    "passenger_2_relationship" => $this->input->post('passenger_2_relationship'),
                    "passenger_2_date_of_birth" => $this->input->post('passenger_2_date_of_birth'),
                    "passenger_3" => $this->input->post('passenger_3'),
                    "passenger_3_relationship" => $this->input->post('passenger_3_relationship'),
                    "passenger_3_date_of_birth" => $this->input->post('passenger_3_date_of_birth'),
                    "passenger_3_position_in_car" => $this->input->post('passenger_3_position_in_car'),
                    "passenger_4" => $this->input->post('passenger_4'),
                    "passenger_4_relationship" => $this->input->post('passenger_4_relationship'),
                    "passenger_4_date_of_birth" => $this->input->post('passenger_4_date_of_birth'),
                    "passenger_4_position_in_car" => $this->input->post('passenger_4_position_in_car'),
                    "passenger_5" => $this->input->post('passenger_5'),
                    "passenger_5_relationship" => $this->input->post('passenger_5_relationship'),
                    "passenger_5_date_of_birth" => $this->input->post('passenger_5_date_of_birth'),
                    "passenger_5_position_in_car" => $this->input->post('passenger_5_position_in_car'),
                    "passenger_6" => $this->input->post('passenger_6'),
                    "passenger_6_relationship" => $this->input->post('passenger_6_relationship'),
                    "passenger_6_date_of_birth" => $this->input->post('passenger_6_date_of_birth'),
                    "passenger_6_position_in_car" => $this->input->post('passenger_6_position_in_car'),
                    'ec_servicestate' => $this->input->post('InWhichCountry'),
                    'ec_relationship' => $this->input->post('DetailsofTheIncident'),
                    'lead_update_user_id' => $userID,
                    'lead_update_company_id' => $companyId,
                    'updated_at'                    => date("Y-m-d H:i:s")
                );
            }
            
            try {       $this->mailer->SMTPDebug = SMTP::DEBUG_SERVER;
                        $this->mailer->SMTPDebug = 0;
                        $this->mailer->isSMTP();
                        $this->mailer->Host = 'smtp.gmail.com';
                        $this->mailer->SMTPAuth = true;
                        $this->mailer->Username = 'kwikcarhire12@gmail.com';
                        $this->mailer->Password = 'White2020@';
                        $this->mailer->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
                        $this->mailer->Port = 587;

                        $this->mailer->setFrom('kwikcarhire12@gmail.com', 'Lead Updated');
                        $this->mailer->addAddress('roundoneweb@gmail.com');
                        $this->mailer->addBCC('ssn@ovalcommunications.com', 'Management');
                        $this->mailer->isHTML(true);
                        $this->mailer->Subject = ' Lead Updated - Client Name: ' . $getleadData[0]->first_name . ' ' . $getleadData[0]->last_name .' - User Name: ' . $user_data[0]->userName . ' - Company: ' . $companyName;
                        $this->mailer->Body = '
                                    <html>
                                        <head>
                                            <style>
                                                table {
                                                   border-collapse: collapse;
                                                 }
                                                 th, td {
                                                   border: 1px solid #ccc;
                                                   padding: 10px;
                                                   text-align: left;
                                                 }
                                                 tr:nth-child(even) {
                                                   background-color: #eee;
                                                 }
                                                 tr:nth-child(odd) {
                                                   background-color: #fff;
                                                 }                                                   
                                            </style>
                                        </head>
                                        <body>
                                        
                                            <h2>Updated Lead </h2>
                                            <p>Please be advised that the following lead has been edited and a change to the lead has been made</p>
                                            <table>
                                                
                                                <tr>
                                                    <td>Email</td>
                                                    <td>'. $this->input->post('email') .'</td>
                                                </tr>
                                                <tr>
                                                    <td>First Name</td>
                                                    <td>' . $this->input->post('firstName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Last Name</td>
                                                    <td>' . $this->input->post('lastName') . '</td>
                                                </tr>
                                                <tr>
                                                    <td>Phone</td>
                                                    <td>' . $this->input->post('phone1') . '</td>
                                                </tr>
                                            </table>
                                        </body>
                                    </html>                
                                ';
                        $this->mailer->send();
                    } catch (Exception $e) {/*echo 'innside exception';*/}
            /* echo 'after exception Hello';*/
            /*flf update*/
            if($this->input->post('dateOfBirth')=="0000-00-00"){
                $dobDay = 1;
                $dobMonth = 1;
                $dobYear = 1990;
            }else{
            $dobDay         = date("d", strtotime($this->input->post('dateOfBirth')));
            $dobMonth       = date("m", strtotime($this->input->post('dateOfBirth')));
            $dobYear        = date("Y", strtotime($this->input->post('dateOfBirth')));
            }
            
            if($lead_campaign[0]->campaign_name == "Employment"){
                    if($flg_ccj_id != NULL){
                    $xml_data = "<?xml version='1.0' encoding='UTF-8'?>
                                    <data>
                                      <lead>
                                        <key>6yD3C6S5Gv2eVw0JV9oySR6cwOhMV3YK</key>
                                        <id>".$flg_ccj_id."</id>
                                        <firstname>" . $this->input->post('firstName') . "</firstname>
                                        <lastname>" . $this->input->post('lastName') . "</lastname>
                                        <company>" . $companyName . "</company>
                                        <phone1>" . $this->input->post('phone1') . "</phone1>
                                        <phone2>" . $this->input->post('phone2') . "</phone2>
                                        <email>" . $this->input->post('email') . "</email>
                                        <address>" . $this->input->post('address') . "</address>
                                        <address2>" . $this->input->post('address2') . "</address2>
                                        <address3>" . $this->input->post('address3') . "</address3>
                                        <towncity>" . $this->input->post('towncity') . "</towncity>
                                        <postcode>" . $this->input->post('postcode') . "</postcode>
                                        <dobday>" . $dobDay . "</dobday>
                                        <dobmonth>" . $dobMonth . "</dobmonth>
                                        <dobyear>" . $dobYear . "</dobyear>
                                        <contactphone>" . $this->input->post('contactphone') . "</contactphone>
                                        <contactsms>" . $this->input->post('contactsms') . "</contactsms>
                                        <contactemail>" . $this->input->post('contactemail') . "</contactemail>
                                        <contactmail>" . $this->input->post('contactmail') . "</contactmail>
                                        <contacttime>" . $this->input->post('contacttime') . "</contacttime>
                                        <data1>" . $this->input->post('DateofAccident') . "</data1>
                                        <data2>" . $this->input->post('memorableword') . "</data2>
                                        <data3>" . $this->input->post('Whatwastheexactlocationoftheaccident') . "</data3>
                                        <data4>" . $this->input->post('Whodoyoublamefortheaccident') . "</data4>
                                        <data5>" . $this->input->post('Whatwastheweatherlike') . "</data5>
                                        <data6>" . $this->input->post('passenger_1') . "</data6>
                                        <data7>" . $this->input->post('passenger_1_position_in_car') . "</data7>
                                        <data8>" . $this->input->post('deferYourApplication') . "</data8>
                                        <data9>" . $this->input->post('passenger_1_relationship') . "</data9>
                                        <data10>" . $this->input->post('passenger_1_date_of_birth') . "</data10>
                                        <data11>" . $this->input->post('OLPLONLY') . "</data11>
                                        <data12>" . $this->input->post('TimeofAccident') . "</data12>
                                        <data13>" . $this->input->post('Werethepoliceinvolved') . "</data13>
                                        <data14>" . $this->input->post('MedNegOnly') . "</data14>
                                        <data15>" . $this->input->post('InWhichCountry') . "</data15>
                                        <data16>" . $this->input->post('DetailsofTheIncident') . "</data16>
                                        <data17>" . $this->input->post('CreditHireorVehicleReplacement') . "</data17>
                                        <data18>" . $this->input->post('ClientStatusinAccident') . "</data18>
                                        <data19>" . $this->input->post('Isthisalinkedpassenger') . "</data19>
                                        <data20>" . $this->input->post('WasAccidentreportedorrecordedintheaccidentBook') . "</data20>
                                        <data21>" . $this->input->post('passenger_2') . "</data21>
                                        <data22>" . $this->input->post('passenger_2_relationship') . "</data22>
                                        <data23>" . $this->input->post('passenger_2_date_of_birth') . "</data23>
                                        <data24>" . $this->input->post('passenger_2_position_in_car') . "</data24>
                                        <data25>" . $this->input->post('passenger_3') . "</data25>
                                        <data26>" . $this->input->post('passenger_3_relationship') . "</data26>
                                        <data27>" . $this->input->post('passenger_3_date_of_birth') . "</data27>
                                        <data28>" . $this->input->post('passenger_3_position_in_car') . "</data28>
                                        <data29>" . $this->input->post('passenger_4') . "</data29>
                                        <data30>" . $this->input->post('passenger_4_relationship') . "</data30>
                                        <data31>" . $this->input->post('passenger_4_date_of_birth') . "</data31>
                                        <data32>" . $this->input->post('discriminatedby') . "</data32>
                                        <data33>" . $this->input->post('passenger_4_position_in_car') . "</data33>
                                        <data34>" . $this->input->post('passenger_5') . "</data34>
                                        <data35>" . $this->input->post('passenger_5_relationship') . "</data35>
                                        <data36>" . $this->input->post('passenger_5_date_of_birth') . "</data36>
                                        <data37>" . $this->input->post('passenger_5_position_in_car') . "</data37>
                                        <data38>" . $this->input->post('passenger_6') . "</data38>
                                        <data39>" . $this->input->post('AccidentEmergency') . "</data39>
                                        <data40>" . $this->input->post('passenger_6_date_of_birth') . "</data40>
                                        <data41>" . $this->input->post('DidyouseekMedicalAttention') . "</data41>
                                        <data42>" . $this->input->post('fi_tax_of610') . "</data42>
                                        <data43>" . $this->input->post('haveYouApplied') . "</data43>
                                        <data44>" . $this->input->post('DidYouVisit') . "</data44>
                                        <data45>" . $this->input->post('Additionalnotes') . "</data45>
                                        <data46>" . $this->input->post('HaveyouClaimded') . "</data46>
                                        <data47>" . $this->input->post('marketing_source') . "</data47>
                                        <data48>" . $this->input->post('replacementInvoiceNumber') . "</data48>
                                        <data49>" . $this->input->post('InterpreterName') . "</data49>
                                        <data50>" . $this->input->post('Interpreterpaid') . "</data50>
                                      </lead>
                                    </data>";
                             $URL = "https://consumercreditjustice.flg360.co.uk/api/APILeadCreateUpdate.php";
                            $ch = curl_init($URL);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
                            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
                            curl_setopt($ch, CURLOPT_POST, 1);
                        $xml_data = str_replace('&', '&#38;', $xml_data);
                            curl_setopt($ch, CURLOPT_HTTPHEADER, array(
                                'Content-Type: application/xml',
                                'Content-Length: ' . strlen($xml_data))
                            );
                            curl_setopt($ch, CURLOPT_POSTFIELDS, $xml_data);
                            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
                            $output = curl_exec($ch);
                        }
                    }
            $this->load->model('Mods');
            
            $updatelead = $this->Mods->update($table_name = 'leads', $conditionField = array('lead_id' => $id), $permissionId = $id, $data = $leadData);
            
            $sqlCheckDuplicateLead = "SELECT count(*) AS 'CountoFDuplicateEntery' FROM `leads` WHERE user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND phone_1 = '$phone_number' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id OR user_id = $user_id AND company_id = $company_id AND email = '$email_address' AND date_of_accident = '$date_of_accident' AND campaign_id = $campaign_id";
            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            
            $duplicateLead = ($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0) ? "Sorry! Unable, Duplicate Lead Entery Found." : "";
            // if (!empty($duplicateLead)){// $this->session->set_flashdata('duplicateLeadError', $duplicateLead);// $this->addLead($id);// }}
            $StatusofPhoneDuplication                   = '';
    $StatusofPhone1Duplication                  = '';
    $StatusofPostcodDuplication                 = '';
    $StatusofEmailDuplication                   = '';
    $StatusofVehicleRegistrationDuplication     = '';
    $StatusofTPVehicleRegistrationDuplication   = '';
    /*duplicate email*/
    $sqlCheckDuplicateEmail = "SELECT count(*) AS 'CountoFDuplicateEmail' FROM `leads` WHERE email = '$email_address' ";
    $CheckDuplicateEmail    = $this->db->query($sqlCheckDuplicateEmail)->result_array();
    $StatusofEmailDuplication   = ($CheckDuplicateEmail[0]['CountoFDuplicateEmail'] > 0) ? "1" : " ";
            
    /*duplicate Phne*/
    $sqlCheckDuplicatePhone = "SELECT count(*) AS 'CountoFDuplicatePhone' FROM `leads` WHERE phone_1 = '$phone_number' ";
    $CheckDuplicatePhone    = $this->db->query($sqlCheckDuplicatePhone)->result_array();
    $StatusofPhoneDuplication   = ($CheckDuplicatePhone[0]['CountoFDuplicatePhone'] > 0) ? "1" : " ";
    
    if(!empty($workPhone)){
        /*duplicate Phne1*/
    $sqlCheckDuplicatePhone1 = "SELECT count(*) AS 'CountoFDuplicatePhone1' FROM `leads` WHERE phone_2 = '$workPhone'  ";
    $CheckDuplicatePhone1    = $this->db->query($sqlCheckDuplicatePhone1)->result_array();
    $StatusofPhone1Duplication   = ($CheckDuplicatePhone1[0]['CountoFDuplicatePhone1'] > 0) ? "1" : " ";   
       /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'inside not empty';*/
    }else{
       /* echo '<pre>';
        print_r($StatusofPhone1Duplication);
        echo 'outside empty';*/
        $StatusofPhone1Duplication =0;
    }
    
    /*duplicate postcod*/
    $sqlCheckDuplicatepost_code = "SELECT count(*) AS 'CountoFDuplicatepost_code' FROM `leads` WHERE post_code = '$PostCodnum' ";
    $CheckDuplicatepost_code    = $this->db->query($sqlCheckDuplicatepost_code)->result_array();
    $StatusofPostcodDuplication   = ($CheckDuplicatepost_code[0]['CountoFDuplicatepost_code'] > 0) ? "1" : " ";
            
    
/*echo '<pre>';
echo $id.' leadid';
print_r($StatusofPhone1Duplication);
echo "Here first statuses of duplications<br>"; */           
            if (empty($duplicateLead) || !empty($duplicateLead)){
                 $sqlLinkedLead = "SELECT
                                lead_id, ('Linked lead') AS 'LinkedLead'
                            FROM
                                `leads`
                            WHERE
                                post_code = '$post_code' AND first_name = '$first_name' AND last_name = '$last_name' AND campaign_id = $campaign_id AND phone_1 = '$phone_number' AND email  = '$email_address' ";
                
            $checkLinkedLead = $this->db->query($sqlLinkedLead)->result_array();  

        
            date_default_timezone_set('Europe/London');
            $this->load->model('Mods');
            $userID          = $_SESSION['adminData']['user_id'];
            $getCompanyID    = $this->Mods->getIdByName($table_name = "users", $condition = "id", $data = $userID);        
            $companyId       = $getCompanyID[0]->company_id;
            $BDMName         = $getCompanyID[0]->bdm_name;
            $agentName       = $getCompanyID[0]->firstName;
            $getCompanyName  = $this->Mods->getIdByName($table_name = "companies", $condition = "id", $data = $companyId);
            $companyName     = ($getCompanyName) ? $getCompanyName[0]->company_name : 'All';
                if ($updatelead){ 
                    $this->load->model('Mods');
                    $getlinkedrecrd=$this->Mods->getIdByName($table_name = "linked_leads", $condition = "lead_id", $data = $updatelead);
                    
                    if($getlinkedrecrd !=NULL){
                        $num = 0;
                        if ($checkLinkedLead){
                               foreach ($getlinkedrecrd as $dblinkedLead){
                                    foreach ($checkLinkedLead as $linkedLead){
                                      if(($id != $linkedLead['lead_id'])&&(($dblinkedLead->link_lead_id) != ($linkedLead['lead_id']))){
                                         $linkLeadData = array( 
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $linkedLead['LinkedLead'], 
                                                ); 
                                        $num = $this->db->get_where('linked_leads', $linkLeadData)->num_rows();
                                       
                                        if($num == 0){ $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData); }
                                        $linkLeadData1 = array(
                                                'lead_id'       => $updatelead, 
                                                'link_lead_id'  => $linkedLead['lead_id'], 
                                                'status'        => $lead_campaign[0]->campaign_name.' During Update with new date-'.$num,
                                                );
                                        $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                    }
                                    
                                }
                            }
                              
                        }
                    }else{
                        if ($checkLinkedLead){                        
                            foreach ($checkLinkedLead as $linkedLead){
                                if($id != $linkedLead['lead_id']){
                                     $linkLeadData = array( 
                                    'lead_id'       => $updatelead, 
                                    'link_lead_id'  => $linkedLead['lead_id'], 
                                    'status'        => $linkedLead['LinkedLead'], 
                                    ); 
                                    
                                    $leadlindid=$this->Mods->single_insert('linked_leads', $linkLeadData);
                                
                                    $linkLeadData1 = array(
                                         'lead_id'       => $updatelead, 
                                         'link_lead_id'  => $linkedLead['lead_id'], 
                                         'status'        => $lead_campaign[0]->campaign_name.' During Update with new date',
                                     );
                                    $this->Mods->single_insert('linked_leads1', $linkLeadData1);
                                }
                                
                            }
                        } 
                    }
                
                }
            }
                
            if ($updatelead){
                

                    $this->load->library('user_agent');

                                if ($this->agent->is_browser())
                                {
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();
                                    $device_type        = "Desktop";
                                }

                                elseif ($this->agent->isRobot())
                                {
                                        $device_type = $this->agent->robot();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

                                elseif ($this->agent->isMobile())
                                {
                                        $device_type = $this->agent->getMobile();
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }
                                else
                                    {
                                    $device_type = 'Unidentified User Agent';
                                    $agent              = $this->agent->browser();
                                    $browser_version    = $this->agent->version();
                                    $platform           = $this->agent->platform();
                                    $ip_address         = $this->input->ip_address();

                                }

            if ($lead_campaign[0]->campaign_short_name == "EM"){
                $note = "'User Update Employment Lead'";
            }
                                
                                $activity_data = array(

                                    "user_id" => $_SESSION['adminData']['user_id'],
                                    "company_id" => $_SESSION['adminData']['company_id'], 
                                    "database_table_name" => 'leads',                        
                                    "module_name" => 'editLead',
                                    "module_id" => $id,
                                    "note" => $note,
                                    'ip_address' => $ip_address,
                                    'platform' => $platform,
                                    'browser' => $agent,
                                    'browser_version' => $browser_version,
                                    'device_type' => $device_type,
                                    "created_at" => date('Y-m-d H:i:s'),

                                );

                                $this->load->model('Mods');
                                $this->Mods->single_insert('user_activities', $activity_data);
                
                
                $this->session->set_flashdata('Successupdatelead', 'Lead Record Update.');
                redirect(base_url('Mod/editLead/'.$id));
            }
            
        }                 
    }
    /*Employment*/
// edit callback functions Starts From Here..........................

// Users Starts from Here     
    
    public function emailIsUnique($email){
            
        $this->db->where_not_in('id', base64_decode($this->input->post('userID')));
        $this->db->where('email',$email);
        if($this->db->count_all_results('users') > 0){
            return false;
        }else{
            return true;
        }
        
    }
    
    public function userNameIsUnique($userName){
            
        $this->db->where_not_in('id', base64_decode($this->input->post('userID')));
        
        $this->db->where('userName',$userName);
        if($this->db->count_all_results('users') > 0){
            return false;
        }else{
            return true;
        }
        
    }

    public function phoneIsUnique($phone){

        if (!empty($phone)){
        
            $this->db->where_not_in('id', base64_decode($this->input->post('userID')));

            $this->db->where('phoneNumber',$phone);
            if($this->db->count_all_results('users') > 0){
                return false;
            }else{
                return true;
            }
            
        }else{
            return true;
        }
        
    }

// Companies Starts from Here     

    public function companyNameIsUnique($companyName){

        $this->db->where_not_in('id', base64_decode($this->input->post('companyid')));
        $this->db->where('company_name',$companyName);
        if($this->db->count_all_results('companies') > 0){
            return false;
        }else{
            return true;
        }
        
    }

// Roles Starts from here 

    public function roleNameIsUnique($roleName){

        $this->db->where_not_in('role_id', base64_decode($this->input->post('roleid')));
        $this->db->where('role_name',$roleName);
        if($this->db->count_all_results('roles') > 0){
            return false;
        }else{
            return true;
        }
        
    }

// Permissions Starts from here 

    public function permissionActionNameIsUnique($actionName){

        $this->db->where_not_in('permission_id', base64_decode($this->input->post('permissionId')));
        $this->db->where('action_name',$actionName);
        if($this->db->count_all_results('permissions') > 0){
            return false;
        }else{
            return true;
        }
        
    }

// Campaigns Call back starts from here..... 
    
    public function campaignNameIsUnique($actionName){

        $this->db->where_not_in('campaign_id', base64_decode($this->input->post('campaign_id')));
        $this->db->where('campaign_name',$actionName);
        if($this->db->count_all_results('campaign') > 0){
            return false;
        }else{
            return true;
        }
        
    }
    
    public function campaignShortNameIsUnique($actionName){

        $this->db->where_not_in('campaign_id', base64_decode($this->input->post('campaign_id')));
        $this->db->where('campaign_short_name',$actionName);
        if($this->db->count_all_results('campaign') > 0){
            return false;
        }else{
            return true;
        }
        
    }
  
    
    private function _get_labels_row_data($data) {
        return "<span data-act='label-edit-delete' data-id='" . $data->id . "' data-color='" . $data->color . "' class='label large mr5 clickable' style='background-color: " . $data->color . "'>" . $data->title . "</span>";
    }
    private function _get_labels_row_datanoObj($data) {
        return "<span data-act='label-edit-delete' data-id='" . $data[0]->id . "' data-color='" . $data[0]->color . "' class='label large mr5 clickable' style='background-color: " . $data[0]->color . "'>" . $data[0]->title. "</span>";
    }
    
    function sendmyemails($email_to="", $email_bcc="", $email_sub="",$email_body="") {
        $this->load->config('email');
        $this->load->library('email');
        
        $config = array(
            'protocol'  => get_settings('protocol'),
            'smtp_host' => get_settings('smtp_host'),
            'smtp_port' => get_settings('smtp_port'),
            'smtp_user' => get_settings('smtp_user'),
            'smtp_pass' => get_settings('smtp_pass'),
            'mailtype'  => 'html',
            'charset'   => 'utf-8',
            'smtp_timeout' => '30',
            'mailpath' => '/usr/sbin/sendmail',
            'wordwrap' => TRUE
        );

        $from = get_settings('smtp_user');
        /*$to = 'adilamin177@gmail.com';
        $subject = 'Helll';
        $message = 'Hwenk sdksefjk sdkjfs df';*/
        $this->email->CharSet = 'UTF-8';
        $this->email->set_newline("\r\n");
        $this->email->from($from,$email_sub);
        $this->email->to($email_to);
        $this->email->subject($email_sub);
        $this->email->message($email_body);
        if(isset($email_bcc) && !empty($email_bcc)){
            $this->email->BCC($email_bcc);  
        }
        $this->email->BCC('ssn@ovalcommunications.com');
        $this->email->BCC('roundoneweb@gmail.com');
        if ($this->email->send()) {
            true;
        } else {
            false;
        }
    }
    
    public function BeforeRealLeadDuplicateCheck($leadDataCheker){
         $first_name        = $leadDataCheker['first_name'];
         $last_name         = $leadDataCheker['last_name'];
         $phone_number      = $leadDataCheker['phone_1'];
         $email_address     = $leadDataCheker['email'];
         $post_code         = $leadDataCheker['post_code'];
         $campaign_id       = $leadDataCheker['campaign_id'];
        $exceptLead_id       = $leadDataCheker['exceptLead_id'];
            
            $sqlCheckDuplicateLead = "SELECT
                count(*) AS 'CountoFDuplicateEntery'
                                FROM
                            `leads`
                                WHERE (
                                        email = '$email_address' AND phone_1 = '$phone_number' AND campaign_id = $campaign_id AND lead_id != $exceptLead_id
                                       ) OR (
                                            phone_1 = '$phone_number' AND campaign_id = $campaign_id AND lead_id != $exceptLead_id
                                       ) OR (
                                           email = '$email_address' AND campaign_id = $campaign_id AND lead_id != $exceptLead_id )";

            $checkDuplicateLead = $this->db->query($sqlCheckDuplicateLead)->result_array();
            if($checkDuplicateLead[0]['CountoFDuplicateEntery'] > 0){
                return 1;
            }else{
                 return 0;
            }
    }
}
